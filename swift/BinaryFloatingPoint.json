{"class_description": "The BinaryFloatingPoint protocol extends the FloatingPoint protocol with operations specific to floating-point binary types, as defined by the IEEE 754 specification. BinaryFloatingPoint is implemented in the standard library by Float, Double, and Float80 where available.\n", "package_name": "swift", "interface_list": [], "Methods": [{"return_value": {"return_name": [""], "return_description": ["A random value within the bounds of range."], "return_type": ["Self"]}, "class_name": "BinaryFloatingPoint", "method_description": "Returns a random value within the specified range.", "method_name": "random", "params": [{"param_type": "ClosedRange<Self>", "param_name": ["in", "range"], "param_description": "The range in which to create a random value. range must be finite."}]}, {"return_value": {"return_name": [""], "return_description": ["A random value within the bounds of range."], "return_type": ["Self"]}, "class_name": "BinaryFloatingPoint", "method_description": "Returns a random value within the specified range.", "method_name": "random", "params": [{"param_type": "Range<Self>", "param_name": ["in", "range"], "param_description": "The range in which to create a random value. range must be non-empty and finite."}]}, {"return_value": {"return_name": [""], "return_description": ["A random value within the bounds of range."], "return_type": ["Self"]}, "class_name": "BinaryFloatingPoint", "method_description": "Returns a random value within the specified range, using the given generator as a source for randomness.", "method_name": "random", "params": [{"param_type": "ClosedRange<Self>", "param_name": ["in", "range"], "param_description": "The range in which to create a random value. range must be finite."}, {"param_type": "inout RandomNumberGenerator", "param_name": ["using", "generator"], "param_description": "The random number generator to use when creating the new random value."}]}, {"return_value": {"return_name": [""], "return_description": ["A random value within the bounds of range."], "return_type": ["Self"]}, "class_name": "BinaryFloatingPoint", "method_description": "Returns a random value within the specified range, using the given generator as a source for randomness.", "method_name": "random", "params": [{"param_type": "Range<Self>", "param_name": ["in", "range"], "param_description": "The range in which to create a random value. range must be non-empty and finite."}, {"param_type": "inout RandomNumberGenerator", "param_name": ["using", "generator"], "param_description": "The random number generator to use when creating the new random value."}]}], "class_inherit_list": ["ExpressibleByFloatLiteral", "FloatingPoint"], "Vars": [{"var_type": "Self", "var_description": "The floating-point value with the same sign and exponent as this value, but with a significand of 1.0.Required.", "var_name": "binade"}, {"var_type": "Self.RawExponent", "var_description": "The raw encoding of the value\u2019s exponent field.Required.", "var_name": "exponentBitPattern"}, {"var_type": "Self.RawSignificand", "var_description": "The raw encoding of the value\u2019s significand field.Required.", "var_name": "significandBitPattern"}, {"var_type": "Int", "var_description": "The number of bits required to represent the value\u2019s significand.Required.", "var_name": "significandWidth"}, {"var_type": "Int", "var_description": "The number of bits used to represent the type\u2019s exponent.Required.", "var_name": "exponentBitCount"}, {"var_type": "Int", "var_description": "The available number of fractional significand bits.Required.", "var_name": "significandBitCount"}], "subclass_list": [], "class_name": "BinaryFloatingPoint"}