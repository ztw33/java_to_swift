{"package_name": "foundation", "interface_list": ["NSObjectProtocol"], "class_inherit_list": [], "Methods": [{"return_value": {"return_type": ["Self"], "return_name": [""], "return_description": []}, "method_name": "alloc", "class_name": "NSProxy", "method_description": "Returns a new instance of the receiving class ", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "finalize", "class_name": "NSProxy", "method_description": "The garbage collector invokes this method on the receiver before disposing of the memory it uses.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "forwardInvocation", "class_name": "NSProxy", "method_description": "Passes a given invocation to the real object the proxy represents.", "params": [{"param_type": "NSInvocation", "param_name": ["invocation"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the receiving class responds to aSelector messages, otherwise false."]}, "method_name": "responds", "class_name": "NSProxy", "method_description": "Returns a Boolean value that indicates whether the receiving class responds to a given selector.", "params": [{"param_type": "Selector", "param_name": ["to", "aSelector"], "param_description": ""}]}, {"return_value": {"return_type": ["AnyClass"], "return_name": [""], "return_description": ["self. Because this is a class method, it returns the class object"]}, "method_name": "`class`", "class_name": "NSProxy", "method_description": "Returns self (the class object).", "params": []}], "Vars": [{"var_type": "String", "var_description": "A string containing the real class name and the id of the receiver as a hexadecimal number.", "var_name": "description"}, {"var_type": "String", "var_description": "A string containing the real class name and the id of the receiver as a hexadecimal number.", "var_name": "debugDescription"}], "subclass_list": [], "class_description": "Typically, a message to a proxy is forwarded to the real object or causes the proxy to load (or transform itself into) the real object. Subclasses of NSProxy can be used to implement transparent distributed messaging (for example, NSDistantObject) or for lazy instantiation of objects that are expensive to create.\nNSProxy implements the basic methods required of a root class, including those defined in the NSObjectProtocol protocol. However, as an abstract class it doesn\u2019t provide an initialization method, and it raises an exception upon receiving any message it doesn\u2019t respond to. A concrete subclass must therefore provide an initialization or creation method and override the forwardInvocation(_:) and methodSignatureForSelector: methods to handle messages that it doesn\u2019t implement itself. A subclass\u2019s implementation of forwardInvocation(_:) should do whatever is needed to process the invocation, such as forwarding the invocation over the network or loading the real object and passing it the invocation. methodSignatureForSelector: is required to provide argument type information for a given message; a subclass\u2019s implementation should be able to determine the argument types for the messages it needs to forward and should construct an NSMethodSignature object accordingly. See the NSDistantObject, NSInvocation, and NSMethodSignature class specifications for more information.\n", "class_name": "NSProxy"}