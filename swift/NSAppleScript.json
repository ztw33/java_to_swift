{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true for success or if the script was already compiled, false otherwise."]}, "method_name": "compileAndReturnError", "class_name": "NSAppleScript", "method_description": "Compiles the receiver, if it is not already compiled.", "params": [{"param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_name": ["errorInfo"], "param_description": ""}]}, {"return_value": {"return_type": ["NSAppleEventDescriptor"], "return_name": [""], "return_description": ["The result of executing the event, or nil if an error occurs."]}, "method_name": "executeAndReturnError", "class_name": "NSAppleScript", "method_description": "Executes the receiver, compiling it first if it is not already compiled.", "params": [{"param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_name": ["errorInfo"], "param_description": ""}]}, {"return_value": {"return_type": ["NSAppleEventDescriptor"], "return_name": [""], "return_description": ["The result of executing the event, or nil if an error occurs."]}, "method_name": "executeAppleEvent", "class_name": "NSAppleScript", "method_description": "Executes an Apple event in the context of the receiver, as a means of allowing the application to invoke a handler in the script.", "params": [{"param_type": "NSAppleEventDescriptor", "param_name": ["event"], "param_description": ""}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSDictionary>", "param_name": ["error", "errorInfo"], "param_description": ""}]}], "Vars": [{"var_type": "Bool", "var_description": "A Boolean value that indicates whether the receiver's script has been compiled.", "var_name": "isCompiled"}, {"var_type": "String", "var_description": "The script source for the receiver.", "var_name": "source"}, {"var_type": "String", "var_description": "An NSString that supplies a detailed description of the error condition.", "var_name": "errorMessage"}, {"var_type": "String", "var_description": "An NSNumber that specifies the error number.", "var_name": "errorNumber"}, {"var_type": "String", "var_description": "An NSString that specifies the name of the application that generated the error.", "var_name": "errorAppName"}, {"var_type": "String", "var_description": "An NSString that provides a brief description of the error.", "var_name": "errorBriefMessage"}, {"var_type": "String", "var_description": "An NSValue that specifies a range.", "var_name": "errorRange"}, {"var_type": "NSAttributedString", "var_description": "Returns the syntax-highlighted source code of the receiver if the receiver has been compiled and its source code is available.", "var_name": "richTextSource"}], "subclass_list": [], "class_description": "This class provides applications with the ability to\nload a script from a URL or from a text string\ncompile or execute a script or an individual Apple event\nobtain an NSAppleEventDescriptor containing the reply from an executed script or event\nobtain an attributed string for a compiled script, suitable for display in a script editor\nobtain various kinds of information about any errors that may occur\nImportant\nNSAppleScript provides the executeAppleEvent(_:error:) method so that you can send an Apple event to invoke a handler in a script. (In an AppleScript script, a handler is the equivalent of a function.) However, you cannot use this method to send Apple events to other applications.\nWhen you create an instance of NSAppleScript object, you can use a URL to specify a script that can be in either text or compiled form, or you can supply the script as a string. Should an error occur when compiling or executing the script, several of the methods return a dictionary containing error information. The keys for obtaining error information, such as errorMessage, are described in the Constants section.\nSee also NSAppleScript Additions Reference in the Application Kit framework, which defines a method that returns the syntax-highlighted source code for a script.\n", "class_name": "NSAppleScript"}