{"subclass_list": [], "Methods": [{"params": [{"param_name": ["object"], "param_description": "", "param_type": "Any"}], "method_name": "add", "method_description": "Appends a given object to the end of the mutable ordered set, if it is not already a member.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["objects"], "param_description": "", "param_type": "UnsafePointer<AnyObject>"}, {"param_name": ["count"], "param_description": "", "param_type": "Int"}], "method_name": "add", "method_description": "Appends the given number of objects from a given C array to the end of the mutable ordered set.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["from", "array"], "param_description": "", "param_type": "[Any]"}], "method_name": "addObjects", "method_description": "Appends to the end of the mutable ordered set each object contained in a given array that is not already a member.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["object"], "param_description": "", "param_type": "Any"}, {"param_name": ["at", "idx"], "param_description": "", "param_type": "Int"}], "method_name": "insert", "method_description": "Inserts the given object at the specified index of the mutable ordered set, if it is not already a member.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["objects"], "param_description": "", "param_type": "[Any]"}, {"param_name": ["at", "indexes"], "param_description": "", "param_type": "IndexSet"}], "method_name": "insert", "method_description": "Inserts the objects in the array at the specified indexes.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["object"], "param_description": "", "param_type": "Any"}], "method_name": "remove", "method_description": "Removes a given object from the mutable ordered set.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["at", "idx"], "param_description": "", "param_type": "Int"}], "method_name": "removeObject", "method_description": "Removes a the object at the specified index from the mutable ordered set.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["at", "indexes"], "param_description": "", "param_type": "IndexSet"}], "method_name": "removeObjects", "method_description": "Removes the objects at the specified indexes from the mutable ordered set.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["in", "array"], "param_description": "", "param_type": "[Any]"}], "method_name": "removeObjects", "method_description": "Removes the objects in the array from the mutable ordered set.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["in", "range"], "param_description": "", "param_type": "NSRange"}], "method_name": "removeObjects", "method_description": "Removes from the mutable ordered set each of the objects within a given range.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [], "method_name": "removeAllObjects", "method_description": "Removes all the objects from the mutable ordered set.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["at", "idx"], "param_description": "", "param_type": "Int"}, {"param_name": ["with", "object"], "param_description": "", "param_type": "Any"}], "method_name": "replaceObject", "method_description": "Replaces the object at the specified index with the new object.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["at", "indexes"], "param_description": "", "param_type": "IndexSet"}, {"param_name": ["with", "objects"], "param_description": "", "param_type": "[Any]"}], "method_name": "replaceObjects", "method_description": "Replaces the objects at the specified indexes with the new objects.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["in", "range"], "param_description": "", "param_type": "NSRange"}, {"param_name": ["with", "objects"], "param_description": "", "param_type": "UnsafePointer<AnyObject>"}, {"param_name": ["count"], "param_description": "", "param_type": "Int"}], "method_name": "replaceObjects", "method_description": "Replaces the objects in the receiving mutable ordered set at the range with the specified number of objects from a given C array.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["obj"], "param_description": "", "param_type": "Any"}, {"param_name": ["at", "idx"], "param_description": "", "param_type": "Int"}], "method_name": "setObject", "method_description": "Appends or replaces the object at the specified index.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["at", "indexes"], "param_description": "", "param_type": "IndexSet"}, {"param_name": ["to", "idx"], "param_description": "", "param_type": "Int"}], "method_name": "moveObjects", "method_description": "Moves the objects at the specified indexes to the new location.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["at", "idx1"], "param_description": "", "param_type": "Int"}, {"param_name": ["withObjectAt", "idx2"], "param_description": "", "param_type": "Int"}], "method_name": "exchangeObject", "method_description": "Exchanges the object at the specified index with the object at the other index.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["using", "p"], "param_description": "", "param_type": "NSPredicate"}], "method_name": "filter", "method_description": "Evaluates a given predicate against the mutable ordered set\u2019s content and leaves only objects that match.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["using", "sortDescriptors"], "param_description": "", "param_type": "[NSSortDescriptor]"}], "method_name": "sort", "method_description": "Sorts the receiving ordered set using a given array of sort descriptors.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["comparator", "cmptr"], "param_description": "", "param_type": "(Any"}, {"param_name": ["Any"], "param_description": "", "param_type": "Any"}], "method_name": "sort", "method_description": "Sorts the mutable ordered set using the comparison method specified by the comparator block.", "return_value": {"return_description": [], "return_name": [""], "return_type": ["ComparisonResult"]}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["options", "opts"], "param_description": "", "param_type": "NSSortOptions"}, {"param_name": ["usingComparator", "cmptr"], "param_description": "", "param_type": "(Any"}, {"param_name": ["Any"], "param_description": "", "param_type": "Any"}], "method_name": "sort", "method_description": "Sorts the mutable ordered set using the specified options and the comparison method specified by a given comparator block.", "return_value": {"return_description": [], "return_name": [""], "return_type": ["ComparisonResult"]}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["range"], "param_description": "", "param_type": "NSRange"}, {"param_name": ["options", "opts"], "param_description": "", "param_type": "NSSortOptions"}, {"param_name": ["usingComparator", "cmptr"], "param_description": "", "param_type": "(Any"}, {"param_name": ["Any"], "param_description": "", "param_type": "Any"}], "method_name": "sortRange", "method_description": "Sorts the specified range of the mutable ordered set using the specified options and the comparison method specified by a given comparator block.", "return_value": {"return_description": [], "return_name": [""], "return_type": ["ComparisonResult"]}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["other"], "param_description": "", "param_type": "NSOrderedSet"}], "method_name": "intersect", "method_description": "Removes from the receiving ordered set each object that isn\u2019t a member of another ordered set.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["other"], "param_description": "", "param_type": "Set<AnyHashable>"}], "method_name": "intersectSet", "method_description": "Removes from the receiving ordered set each object that isn\u2019t a member of another set.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["other"], "param_description": "", "param_type": "NSOrderedSet"}], "method_name": "minus", "method_description": "Removes each object in another given ordered set from the receiving mutable ordered set, if present.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["other"], "param_description": "", "param_type": "Set<AnyHashable>"}], "method_name": "minusSet", "method_description": "Removes each object in another given set from the receiving mutable ordered set, if present.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["other"], "param_description": "", "param_type": "NSOrderedSet"}], "method_name": "union", "method_description": "Adds each object in another given ordered set to the receiving mutable ordered set, if not present.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}, {"params": [{"param_name": ["other"], "param_description": "", "param_type": "Set<AnyHashable>"}], "method_name": "unionSet", "method_description": "Adds each object in another given set to the receiving mutable ordered set, if not present.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSMutableOrderedSet"}], "Vars": [], "class_name": "NSMutableOrderedSet", "class_inherit_list": ["NSOrderedSet"], "interface_list": ["CVarArg", "Equatable", "ExpressibleByArrayLiteral", "Hashable", "Sequence"], "class_description": "NSMutableOrderedSet objects are not like C arrays. That is, even though you may specify a size when you create a mutable ordered set, the specified size is regarded as a \u201chint\u201d; the actual size of the set is still 0. This means that you cannot insert an object at an index greater than the current count of an set. For example, if a set contains two objects, its size is 2, so you can add objects at indices 0, 1, or 2. Index 3 is illegal and out of bounds; if you try to add an object at index 3 (when the size of the array is 2), NSMutableOrderedSet raises an exception.\n", "package_name": "foundation"}