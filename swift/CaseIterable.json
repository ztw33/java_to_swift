{"class_description": "Types that conform to the CaseIterable protocol are typically enumerations without associated values. When using a CaseIterable type, you can access a collection of all of the type\u2019s cases by using the type\u2019s allCases property.\nFor example, the CompassDirection enumeration declared in this example conforms to CaseIterable. You access the number of cases and the cases themselves through CompassDirection.allCases.\nThe compiler can automatically provide an implementation of the CaseIterable requirements for any enumeration without associated values or @available attributes on its cases. The synthesized allCases collection provides the cases in order of their declaration.\nYou can take advantage of this compiler support when defining your own custom enumeration by declaring conformance to CaseIterable in the enumeration\u2019s original declaration. The CompassDirection example above demonstrates this automatic implementation.\n", "package_name": "swift", "interface_list": [], "Methods": [], "class_inherit_list": [], "Vars": [{"var_type": "Self.AllCases", "var_description": "A collection of all values of this type.Required.", "var_name": "allCases"}], "subclass_list": [], "class_name": "CaseIterable"}