{"class_inherit_list": [], "Vars": [], "class_name": "AnyIndex", "interface_list": ["Comparable"], "subclass_list": [], "class_description": "", "Methods": [{"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether two values are not equal.", "method_name": "!=", "class_name": "AnyIndex", "params": [{"param_description": "A value to compare.", "param_type": "AnyIndex", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "AnyIndex", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["PartialRangeThrough<AnyIndex>"]}, "method_description": "Returns a partial range up to, and including, its upper bound.", "method_name": "...", "class_name": "AnyIndex", "params": [{"param_description": "The upper bound for the range.", "param_type": "AnyIndex", "param_name": ["maximum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["PartialRangeFrom<AnyIndex>"]}, "method_description": "Returns a partial range extending upward from a lower bound.", "method_name": "...", "class_name": "AnyIndex", "params": [{"param_description": "The lower bound for the range.", "param_type": "AnyIndex", "param_name": ["minimum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["ClosedRange<AnyIndex>"]}, "method_description": "Returns a closed range that contains both of its bounds.", "method_name": "...", "class_name": "AnyIndex", "params": [{"param_description": "The lower bound for the range.", "param_type": "AnyIndex", "param_name": ["minimum"]}, {"param_description": "The upper bound for the range.", "param_type": "AnyIndex", "param_name": ["maximum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["PartialRangeUpTo<AnyIndex>"]}, "method_description": "Returns a partial range up to, but not including, its upper bound.", "method_name": "..", "class_name": "AnyIndex", "params": [{"param_description": "The upper bound for the range.", "param_type": "AnyIndex", "param_name": ["maximum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Range<AnyIndex>"]}, "method_description": "Returns a half-open range that contains its lower bound but not its upper bound.", "method_name": "..", "class_name": "AnyIndex", "params": [{"param_description": "The lower bound for the range.", "param_type": "AnyIndex", "param_name": ["minimum"]}, {"param_description": "The upper bound for the range.", "param_type": "AnyIndex", "param_name": ["maximum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the first argument represents a position before the second argument.", "method_name": "", "class_name": "AnyIndex", "params": [{"param_description": "An index to compare.", "param_type": "AnyIndex", "param_name": ["lhs"]}, {"param_description": "Another index to compare.", "param_type": "AnyIndex", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the value of the first argument is less than or equal to that of the second argument.", "method_name": "", "class_name": "AnyIndex", "params": [{"param_description": "A value to compare.", "param_type": "AnyIndex", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "AnyIndex", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether two indices wrap equal underlying indices.", "method_name": "==", "class_name": "AnyIndex", "params": [{"param_description": "An index to compare.", "param_type": "AnyIndex", "param_name": ["lhs"]}, {"param_description": "Another index to compare.", "param_type": "AnyIndex", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the value of the first argument is greater than that of the second argument.", "method_name": ">", "class_name": "AnyIndex", "params": [{"param_description": "A value to compare.", "param_type": "AnyIndex", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "AnyIndex", "param_name": ["rhs"]}]}, {"return_value": {"return_description": ["true if lhs is greater than or equal to rhs; otherwise, false."], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the value of the first argument is greater than or equal to that of the second argument.", "method_name": ">=", "class_name": "AnyIndex", "params": [{"param_description": "A value to compare.", "param_type": "AnyIndex", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "AnyIndex", "param_name": ["rhs"]}]}], "package_name": "swift"}