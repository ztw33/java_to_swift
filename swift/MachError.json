{"package_name": "foundation", "interface_list": [], "class_inherit_list": [], "Methods": [{"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "!=", "class_name": "MachError", "method_description": "Returns a Boolean value indicating whether two values are not equal.", "params": [{"param_type": "MachError", "param_name": ["lhs"], "param_description": ""}, {"param_type": "MachError", "param_name": ["rhs"], "param_description": ""}]}], "Vars": [{"var_type": "Int", "var_description": "", "var_name": "errorCode"}, {"var_type": "[String", "var_description": "", "var_name": "errorUserInfo"}, {"var_type": "String", "var_description": "", "var_name": "localizedDescription"}, {"var_type": "MachError.Code", "var_description": "The operation was aborted.  Ipc code will catch this and reflect it as a message error.", "var_name": "aborted"}, {"var_type": "MachError.Code", "var_description": "The receive right is already a member of the portset.", "var_name": "alreadyInSet"}, {"var_type": "MachError.Code", "var_description": "A thread is attempting to wait for an event for which there is already a waiting thread.", "var_name": "alreadyWaiting"}, {"var_type": "MachError.Code", "var_description": "During a page fault, indicates that the page was rejected as a result of a signature check.", "var_name": "codesignError"}, {"var_type": "MachError.Code", "var_description": "An attempt was made to destroy the default processor set.", "var_name": "defaultSet"}, {"var_type": "String", "var_description": "", "var_name": "errorDomain"}, {"var_type": "String", "var_description": "", "var_name": "errorDomain"}, {"var_type": "MachError.Code", "var_description": "An attempt was made to fetch an exception port that is protected, or to abort a thread while processing a protected exception.", "var_name": "exceptionProtected"}, {"var_type": "MachError.Code", "var_description": "The function could not be performed.  A catch-all.", "var_name": "failure"}, {"var_type": "MachError.Code", "var_description": "Specified address is not currently valid.", "var_name": "invalidAddress"}, {"var_type": "MachError.Code", "var_description": "The function requested was not applicable to this type of argument, or an argument is invalid.", "var_name": "invalidArgument"}, {"var_type": "MachError.Code", "var_description": "The supplied (port) capability is improper.", "var_name": "invalidCapability"}, {"var_type": "MachError.Code", "var_description": "Target host isn\u2019t actually a host.", "var_name": "invalidHost"}, {"var_type": "MachError.Code", "var_description": "A ledger was required but not supplied.", "var_name": "invalidLedger"}, {"var_type": "MachError.Code", "var_description": "The port was not a memory cache control port.", "var_name": "invalidMemoryControl"}, {"var_type": "MachError.Code", "var_description": "The name doesn\u2019t denote a right in the task.", "var_name": "invalidName"}, {"var_type": "MachError.Code", "var_description": "The external memory manager failed to initialize the memory object.", "var_name": "invalidObject"}, {"var_type": "MachError.Code", "var_description": "The specified scheduling policy is not currently enabled for the processor set.", "var_name": "invalidPolicy"}, {"var_type": "MachError.Code", "var_description": "An argument applied to assert processor set privilege was not a processor set control port.", "var_name": "invalidProcessorSet"}, {"var_type": "MachError.Code", "var_description": "The name denotes a right, but not an appropriate right.", "var_name": "invalidRight"}, {"var_type": "MachError.Code", "var_description": "An argument supplied to assert security privilege was not a host security port.", "var_name": "invalidSecurity"}, {"var_type": "MachError.Code", "var_description": "Target task isn\u2019t an active task.", "var_name": "invalidTask"}, {"var_type": "MachError.Code", "var_description": "A blatant range error.", "var_name": "invalidValue"}, {"var_type": "MachError.Code", "var_description": "The lock is already owned by another thread.", "var_name": "lockOwned"}, {"var_type": "MachError.Code", "var_description": "The lock is already owned by the calling thread.", "var_name": "lockOwnedSelf"}, {"var_type": "MachError.Code", "var_description": "Lock set has been destroyed and is no longer available.", "var_name": "lockSetDestroyed"}, {"var_type": "MachError.Code", "var_description": "The thread holding the lock terminated before releasing the lock.", "var_name": "lockUnstable"}, {"var_type": "MachError.Code", "var_description": "A page was requested of a memory manager via memory_object_data_request for an object using a MEMORY_OBJECT_COPY_CALL strategy, with the VM_PROT_WANTS_COPY flag being used to specify that the page desired is for a copy of the object, and the memory manager has detected the page was pushed into a copy of the object while the kernel was walking the shadow chain from the copy to the object. This error code is delivered via memory_object_data_error and is handled by the kernel (it forces the kernel to restart the fault). It will not be seen by users.", "var_name": "memoryDataMoved"}, {"var_type": "MachError.Code", "var_description": "During a page fault, the memory object indicated that the data could not be returned.  This failure may be temporary; future attempts to access this same data may succeed, as defined by the memory object.", "var_name": "memoryError"}, {"var_type": "MachError.Code", "var_description": "During a page fault, the target address refers to a memory object that has been destroyed.  This failure is permanent.", "var_name": "memoryFailure"}, {"var_type": "MachError.Code", "var_description": "An attempt was made to supply \u201cprecious\u201d data for memory that is already present in a memory object.", "var_name": "memoryPresent"}, {"var_type": "MachError.Code", "var_description": "A strategic copy was attempted of an object upon which a quicker copy is now possible.  The caller should retry the copy using vm_object_copy_quickly. This error code is seen only by the kernel.", "var_name": "memoryRestartCopy"}, {"var_type": "MachError.Code", "var_description": "The name already denotes a right in the task.", "var_name": "nameExists"}, {"var_type": "MachError.Code", "var_description": "Bogus access restriction.", "var_name": "noAccess"}, {"var_type": "MachError.Code", "var_description": "The address range specified is already in use, or no address range of the size specified could be found.", "var_name": "noSpace"}, {"var_type": "MachError.Code", "var_description": "Remote node down or inaccessible.", "var_name": "nodeDown"}, {"var_type": "MachError.Code", "var_description": "thread_depress_abort was called on a thread which was not currently depressed.", "var_name": "notDepressed"}, {"var_type": "MachError.Code", "var_description": "The receive right is not a member of a port set.", "var_name": "notInSet"}, {"var_type": "MachError.Code", "var_description": "The task in question does not hold receive rights for the port argument.", "var_name": "notReceiver"}, {"var_type": "MachError.Code", "var_description": "Empty thread activation (No thread linked to it).", "var_name": "notSupported"}, {"var_type": "MachError.Code", "var_description": "A signalled thread was not actually waiting.", "var_name": "notWaiting"}, {"var_type": "MachError.Code", "var_description": "Some thread-oriented operation (semaphore_wait) timed out.", "var_name": "operationTimedOut"}, {"var_type": "MachError.Code", "var_description": "The specified scheduling attributes exceed the thread\u2019s limits.", "var_name": "policyLimit"}, {"var_type": "MachError.Code", "var_description": "The requested property cannot be changed at this time.", "var_name": "policyStatic"}, {"var_type": "MachError.Code", "var_description": "Specified memory is valid, but does not permit the required forms of access.", "var_name": "protectionFailure"}, {"var_type": "MachError.Code", "var_description": "A system resource could not be allocated to fulfill this request.  This failure may not be permanent.", "var_name": "resourceShortage"}, {"var_type": "MachError.Code", "var_description": "The task already has send or receive rights for the port under another name.", "var_name": "rightExists"}, {"var_type": "MachError.Code", "var_description": "Allow an orphaned activation to continue executing.", "var_name": "rpcContinueOrphan"}, {"var_type": "MachError.Code", "var_description": "Return from RPC indicating the target server was terminated before it successfully replied.", "var_name": "rpcServerTerminated"}, {"var_type": "MachError.Code", "var_description": "Terminate an orphaned activation.", "var_name": "rpcTerminateOrphan"}, {"var_type": "MachError.Code", "var_description": "Semaphore has been destroyed and is no longer available.", "var_name": "semaphoreDestroyed"}, {"var_type": "MachError.Code", "var_description": "", "var_name": "success"}, {"var_type": "MachError.Code", "var_description": "Object has been terminated and is no longer available.", "var_name": "terminated"}, {"var_type": "MachError.Code", "var_description": "Operation would overflow limit on user-references.", "var_name": "userReferencesOverflow"}], "subclass_list": [], "class_description": "", "class_name": "MachError"}