{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "canLoadObject", "class_name": "NSItemProvider", "method_description": "Returns a Boolean value indicating whether an item provider can load objects of a given class.", "params": [{"param_type": "NSItemProviderReading.Type", "param_name": ["ofClass", "aClass"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "hasItemConformingToTypeIdentifier", "class_name": "NSItemProvider", "method_description": "A convenience method equivalent to the hasRepresentationConforming(toTypeIdentifier:fileOptions:) method, but with the fileOptions parameter set to a value of 0.", "params": [{"param_type": "String", "param_name": ["typeIdentifier"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "loadItem", "class_name": "NSItemProvider", "method_description": "Loads the item\u2019s data and coerces it (as needed) to the specified type.", "params": [{"param_type": "String", "param_name": ["forTypeIdentifier", "typeIdentifier"], "param_description": ""}, {"param_type": "Any]", "param_name": ["options"], "param_description": ""}, {"param_type": "NSItemProvider.CompletionHandler", "param_name": ["completionHandler"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "loadDataRepresentation", "class_name": "NSItemProvider", "method_description": "Asynchronously copies the provided, typed data into a Data object, returning a Progress object.", "params": [{"param_type": "String", "param_name": ["forTypeIdentifier", "typeIdentifier"], "param_description": ""}, {"param_type": "@escaping (Data", "param_name": ["completionHandler"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "loadFileRepresentation", "class_name": "NSItemProvider", "method_description": "Asynchronously writes a copy of the provided, typed data to a temporary file, returning a Progress object.", "params": [{"param_type": "String", "param_name": ["forTypeIdentifier", "typeIdentifier"], "param_description": ""}, {"param_type": "@escaping (URL", "param_name": ["completionHandler"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "loadInPlaceFileRepresentation", "class_name": "NSItemProvider", "method_description": "Asynchronously opens a file in place, if doing so is possible, returning a Progress object.", "params": [{"param_type": "String", "param_name": ["forTypeIdentifier", "typeIdentifier"], "param_description": ""}, {"param_type": "@escaping (URL", "param_name": ["completionHandler"], "param_description": ""}, {"param_type": "Bool", "param_name": ["Bool"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "loadObject", "class_name": "NSItemProvider", "method_description": "Asynchronously loads an object of a specified class to an item provider, returning a Progress object.", "params": [{"param_type": "NSItemProviderReading.Type", "param_name": ["ofClass", "aClass"], "param_description": ""}, {"param_type": "@escaping (NSItemProviderReading", "param_name": ["completionHandler"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "hasRepresentationConforming", "class_name": "NSItemProvider", "method_description": "Returns a Boolean value indicating whether an item provider contains a data representation conforming to a specified uniform type identifier (UTI) and to specified open-in-place behavior.", "params": [{"param_type": "String", "param_name": ["toTypeIdentifier", "typeIdentifier"], "param_description": ""}, {"param_type": "NSItemProviderFileOptions", "param_name": ["fileOptions"], "param_description": ""}]}, {"return_value": {"return_type": ["[String]"], "return_name": [""], "return_description": []}, "method_name": "registeredTypeIdentifiers", "class_name": "NSItemProvider", "method_description": "Returns an array with a subset of type identifiers for the item provider, according to the specified file options, listed in the same order in which they were registered.", "params": [{"param_type": "NSItemProviderFileOptions", "param_name": ["fileOptions"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "registerDataRepresentation", "class_name": "NSItemProvider", "method_description": "Registers a data-backed representation for an item, specifiying item visibility and a load handler.", "params": [{"param_type": "String", "param_name": ["forTypeIdentifier", "typeIdentifier"], "param_description": ""}, {"param_type": "NSItemProviderRepresentationVisibility", "param_name": ["visibility"], "param_description": ""}, {"param_type": "@escaping ((Data", "param_name": ["loadHandler"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "registerFileRepresentation", "class_name": "NSItemProvider", "method_description": "Registers a file-backed representation for an item, specifying file options, item visibility, and a load handler.", "params": [{"param_type": "String", "param_name": ["forTypeIdentifier", "typeIdentifier"], "param_description": ""}, {"param_type": "NSItemProviderFileOptions", "param_name": ["fileOptions"], "param_description": ""}, {"param_type": "NSItemProviderRepresentationVisibility", "param_name": ["visibility"], "param_description": ""}, {"param_type": "@escaping ((URL", "param_name": ["loadHandler"], "param_description": ""}, {"param_type": "Bool", "param_name": ["Bool"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "registerObject", "class_name": "NSItemProvider", "method_description": "Adds representations of a specified object to an item provider, based on the object\u2019s implementation of the NSItemProviderWriting protocol and adhering to a visibility specification.", "params": [{"param_type": "NSItemProviderWriting", "param_name": ["object"], "param_description": ""}, {"param_type": "NSItemProviderRepresentationVisibility", "param_name": ["visibility"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "registerObject", "class_name": "NSItemProvider", "method_description": "Lazily adds representations of a specified object to an item provider, based on the object\u2019s implementation of the NSItemProviderWriting protocol and adhering to a visibility specification.", "params": [{"param_type": "NSItemProviderWriting.Type", "param_name": ["ofClass", "aClass"], "param_description": ""}, {"param_type": "NSItemProviderRepresentationVisibility", "param_name": ["visibility"], "param_description": ""}, {"param_type": "@escaping ((NSItemProviderWriting", "param_name": ["loadHandler"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "registerItem", "class_name": "NSItemProvider", "method_description": "Lazily registers an item, according to the NSItemProvider type coercion policy.", "params": [{"param_type": "String", "param_name": ["forTypeIdentifier", "typeIdentifier"], "param_description": ""}, {"param_type": "@escaping NSItemProvider.LoadHandler", "param_name": ["loadHandler"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "loadPreviewImage", "class_name": "NSItemProvider", "method_description": "Loads the preview image for the item that is represented by the item provider.", "params": [{"param_type": "]", "param_name": ["options"], "param_description": ""}, {"param_type": "NSItemProvider.CompletionHandler!", "param_name": ["completionHandler"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "canLoadObject", "class_name": "NSItemProvider", "method_description": "", "params": [{"param_type": "ObjectiveCBridgeable.ObjectiveCBridgeableype", "param_name": ["ofClass"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "loadObject", "class_name": "NSItemProvider", "method_description": "", "params": [{"param_type": "ObjectiveCBridgeable.ObjectiveCBridgeableype", "param_name": ["ofClass"], "param_description": ""}, {"param_type": "@escaping (ObjectiveCBridgeable", "param_name": ["completionHandler"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "registerCloudKitShare", "class_name": "NSItemProvider", "method_description": "", "params": [{"param_type": "CKShare", "param_name": ["share"], "param_description": ""}, {"param_type": "CKContainer", "param_name": ["container"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Void"], "return_name": [""], "return_description": []}, "method_name": "registerCloudKitShare", "class_name": "NSItemProvider", "method_description": "", "params": [{"param_type": "@escaping ((CKShare", "param_name": ["preparationHandler"], "param_description": ""}, {"param_type": "CKContainer", "param_name": ["CKContainer"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}, {"return_value": {"return_type": ["Void -> Progress"], "return_name": [""], "return_description": []}, "method_name": "registerObject", "class_name": "NSItemProvider", "method_description": "", "params": [{"param_type": "ObjectiveCBridgeable.ObjectiveCBridgeableype", "param_name": ["ofClass"], "param_description": ""}, {"param_type": "NSItemProviderRepresentationVisibility", "param_name": ["visibility"], "param_description": ""}, {"param_type": "@escaping ((ObjectiveCBridgeable", "param_name": ["loadHandler"], "param_description": ""}, {"param_type": "Error", "param_name": ["Error"], "param_description": ""}]}], "Vars": [{"var_type": "String", "var_description": "", "var_name": "suggestedName"}, {"var_type": "[String]", "var_description": "Returns the array of type identifiers for the item provider, listed in the same order in which they were registered.", "var_name": "registeredTypeIdentifiers"}, {"var_type": "NSItemProvider.LoadHandler", "var_description": "The custom preview image handler block for the item provider.", "var_name": "previewImageHandler"}, {"var_type": "NSRect", "var_description": "The rectangle (in screen coordinates) occupied by the item in the host app\u2019s source window.", "var_name": "sourceFrame"}, {"var_type": "NSRect", "var_description": "The rectangle (in screen coordinates) of the item\u2019s visible content.", "var_name": "containerFrame"}, {"var_type": "CGSize", "var_description": "The ideal presentation size of the item.", "var_name": "preferredPresentationSize"}, {"var_type": "NSItemProvider.PreferredPresentationStyle", "var_description": "The preferred style for presenting the item provider's data.", "var_name": "preferredPresentationStyle"}, {"var_type": "String", "var_description": "A key provided to the options dictionary to indicate a preferred image size.", "var_name": "NSItemProviderPreferredImageSizeKey"}, {"var_type": "String", "var_description": "A key whose value is an item of type kUTTypePropertyList. The item contains an NSDictionary that contains the object returned by the JavaScript code to its completion function.", "var_name": "NSExtensionJavaScriptPreprocessingResultsKey"}, {"var_type": "String", "var_description": "A key whose value is an item of type kUTTypePropertyList. The item contains an NSDictionary that contains the arguments to be passed to a JavaScript finalize method.", "var_name": "NSExtensionJavaScriptFinalizeArgumentKey"}, {"var_type": "String", "var_description": "The error domain associated with the NSItemProvider class.", "var_name": "errorDomain"}, {"var_type": "Data", "var_description": "", "var_name": "teamData"}], "subclass_list": [], "class_description": "Starting in iOS 11, item providers play a central role in drag and drop, and in copy/paste. They continue to play a role with app extensions.\nAll completion blocks used in the NSItemProvider class are called by the system on an internal queue. When using an item provider with drag and drop, ensure that user-interface updates take place on the main queue as follows:\n\nAn app extension typically encounters item providers when examining the attachments property of an NSExtensionItem object. During that examination, the extension can use the hasItemConformingToTypeIdentifier(_:) method to look for data that it recognizes. Item providers use Uniform Type Identifier (UTI) values to identify the data they contain. After finding a type of data that your extension can use, it calls the loadItem(forTypeIdentifier:options:completionHandler:) method to load the actual data, which is delivered to the provided completion handler.\nYou can create item providers to vend data to another process. An extension that modifies an original data item can create a new NSItemProvider object to send back to the host app. When creating data items, you specify your data object and the type of that object. You can optionally use the previewImageHandler property to generate a preview image for your data.\nA single item provider may use custom blocks to provide its data in many different formats. When configuring an item provider, use the registerItem(forTypeIdentifier:loadHandler:) method to register your blocks and the formats each one supports. When a client requests data in a particular format, the item provider executes the corresponding block, which is then responsible for coercing the data to the appropriate type and returning it to the client.\n", "class_name": "NSItemProvider"}