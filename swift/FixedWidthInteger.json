{"class_description": "The FixedWidthInteger protocol adds binary bitwise operations, bit shifts, and overflow handling to the operations supported by the BinaryInteger protocol.\nUse the FixedWidthInteger protocol as a constraint or extension point when writing operations that depend on bit shifting, performing bitwise operations, catching overflows, or having access to the maximum or minimum representable value of a type. For example, the following code provides a binaryString property on every fixed-width integer that represents the number\u2019s binary representation, split into 8-bit chunks.\nThe binaryString implementation uses the static bitWidth property and the right shift operator (<<), both of which are available to any type that conforms to the FixedWidthInteger protocol.\nThe next example declares a generic squared function, which accepts an instance x of any fixed-width integer type. The function uses the multipliedReportingOverflow(by:) method to multiply x by itself and check whether the result is too large to represent in the same type.\nTo make your own custom type conform to the FixedWidthInteger protocol, declare the required initializers, properties, and methods. The required methods that are suffixed with ReportingOverflow serve as the customization points for arithmetic operations. When you provide just those methods, the standard library provides default implementations for all other arithmetic methods and operators.\n", "package_name": "swift", "interface_list": [], "Methods": [{"return_value": {"return_name": [["partialValue"], ["overflow"]], "return_description": ["A tuple containing the result of the addition along with a Boolean value indicating whether overflow occurred. If the overflow component is false, the partialValue component contains the entire sum. If the overflow component is true, an overflow occurred and the partialValue component contains the truncated sum of this value and rhs."], "return_type": ["Self", "Bool"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the sum of this value and the given value, along with a Boolean value indicating whether overflow occurred in the operation.Required.", "method_name": "addingReportingOverflow", "params": [{"param_type": "Self", "param_name": ["rhs"], "param_description": "The value to add to this value."}]}, {"return_value": {"return_name": [["partialValue"], ["overflow"]], "return_description": ["A tuple containing the result of the division along with a Boolean value indicating whether overflow occurred. If the overflow component is false, the partialValue component contains the entire quotient. If the overflow component is true, an overflow occurred and the partialValue component contains either the truncated quotient or, if the quotient is undefined, the dividend."], "return_type": ["Self", "Bool"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the quotient obtained by dividing this value by the given value, along with a Boolean value indicating whether overflow occurred in the operation.Required.", "method_name": "dividedReportingOverflow", "params": [{"param_type": "Self", "param_name": ["by", "rhs"], "param_description": "The value to divide this value by."}]}, {"return_value": {"return_name": [["quotient"], ["remainder"]], "return_description": ["A tuple containing the quotient and remainder obtained by dividing dividend by this value."], "return_type": ["Self", "Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns a tuple containing the quotient and remainder obtained by dividing the given value by this value.Required.", "method_name": "dividingFullWidth", "params": [{"param_type": "Self", "param_name": ["dividend"], "param_description": "A tuple containing the high and low parts of a double-width integer."}, {"param_type": "Self.Magnitude", "param_name": ["low"], "param_description": ""}]}, {"return_value": {"return_name": [["high"], ["low"]], "return_description": ["A tuple containing the high and low parts of the result of multiplying this value and other."], "return_type": ["Self", "Self.Magnitude"]}, "class_name": "FixedWidthInteger", "method_description": "Returns a tuple containing the high and low parts of the result of multiplying this value by the given value.Required.", "method_name": "multipliedFullWidth", "params": [{"param_type": "Self", "param_name": ["by", "other"], "param_description": "The value to multiply this value by."}]}, {"return_value": {"return_name": [["partialValue"], ["overflow"]], "return_description": ["A tuple containing the result of the multiplication along with a Boolean value indicating whether overflow occurred. If the overflow component is false, the partialValue component contains the entire product. If the overflow component is true, an overflow occurred and the partialValue component contains the truncated product of this value and rhs."], "return_type": ["Self", "Bool"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the product of this value and the given value, along with a Boolean value indicating whether overflow occurred in the operation.Required.", "method_name": "multipliedReportingOverflow", "params": [{"param_type": "Self", "param_name": ["by", "rhs"], "param_description": "The value to multiply by this value."}]}, {"return_value": {"return_name": [["partialValue"], ["overflow"]], "return_description": ["A tuple containing the result of the operation along with a Boolean value indicating whether overflow occurred. If the overflow component is false, the partialValue component contains the entire remainder. If the overflow component is true, an overflow occurred during division and the partialValue component contains either the entire remainder or, if the remainder is undefined, the dividend."], "return_type": ["Self", "Bool"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the remainder after dividing this value by the given value, along with a Boolean value indicating whether overflow occurred during division.Required.", "method_name": "remainderReportingOverflow", "params": [{"param_type": "Self", "param_name": ["dividingBy", "rhs"], "param_description": "The value to divide this value by."}]}, {"return_value": {"return_name": [["partialValue"], ["overflow"]], "return_description": ["A tuple containing the result of the subtraction along with a Boolean value indicating whether overflow occurred. If the overflow component is false, the partialValue component contains the entire difference. If the overflow component is true, an overflow occurred and the partialValue component contains the truncated result of rhs subtracted from this value."], "return_type": ["Self", "Bool"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the difference obtained by subtracting the given value from this value, along with a Boolean value indicating whether overflow occurred in the operation.Required.", "method_name": "subtractingReportingOverflow", "params": [{"param_type": "Self", "param_name": ["rhs"], "param_description": "The value to subtract from this value."}]}, {"return_value": {"return_name": [""], "return_description": ["The sum of this value and rhs."], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the sum of this value and the given value without checking for arithmetic overflow.", "method_name": "unsafeAdding", "params": [{"param_type": "Self", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_name": [""], "return_description": ["The result of dividing this value by rhs."], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the quotient obtained by dividing this value by the given value without checking for arithmetic overflow.", "method_name": "unsafeDivided", "params": [{"param_type": "Self", "param_name": ["by", "other"], "param_description": ""}]}, {"return_value": {"return_name": [""], "return_description": ["The product of this value and rhs."], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the product of this value and the given value without checking for arithmetic overflow.", "method_name": "unsafeMultiplied", "params": [{"param_type": "Self", "param_name": ["by", "other"], "param_description": ""}]}, {"return_value": {"return_name": [""], "return_description": ["The result of subtracting rhs from this value."], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the difference obtained by subtracting the given value from this value without checking for arithmetic overflow.", "method_name": "unsafeSubtracting", "params": [{"param_type": "Self", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_name": [""], "return_description": ["A random value within the bounds of range."], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns a random value within the specified range.", "method_name": "random", "params": [{"param_type": "ClosedRange<Self>", "param_name": ["in", "range"], "param_description": "The range in which to create a random value."}]}, {"return_value": {"return_name": [""], "return_description": ["A random value within the bounds of range."], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns a random value within the specified range.", "method_name": "random", "params": [{"param_type": "Range<Self>", "param_name": ["in", "range"], "param_description": "The range in which to create a random value. range must not be empty."}]}, {"return_value": {"return_name": [""], "return_description": ["A random value within the bounds of range."], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns a random value within the specified range, using the given generator as a source for randomness.", "method_name": "random", "params": [{"param_type": "ClosedRange<Self>", "param_name": ["in", "range"], "param_description": "The range in which to create a random value."}, {"param_type": "inout RandomNumberGenerator", "param_name": ["using", "generator"], "param_description": "The random number generator to use when creating the new random value."}]}, {"return_value": {"return_name": [""], "return_description": ["A random value within the bounds of range."], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns a random value within the specified range, using the given generator as a source for randomness.", "method_name": "random", "params": [{"param_type": "Range<Self>", "param_name": ["in", "range"], "param_description": "The range in which to create a random value. range must not be empty."}, {"param_type": "inout RandomNumberGenerator", "param_name": ["using", "generator"], "param_description": "The random number generator to use when creating the new random value."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the product of the two given values, wrapping the result in case of any overflow.", "method_name": "&*", "params": [{"param_type": "Self", "param_name": ["lhs"], "param_description": "The first value to multiply."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The second value to multiply."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "FixedWidthInteger", "method_description": "Multiplies two values and stores the result in the left-hand-side variable, wrapping any overflow.", "method_name": "&*=", "params": [{"param_type": "inout Self", "param_name": ["lhs"], "param_description": "The first value to multiply."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The second value to multiply."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the sum of the two given values, wrapping the result in case of any overflow.", "method_name": "&+", "params": [{"param_type": "Self", "param_name": ["lhs"], "param_description": "The first value to add."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The second value to add."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "FixedWidthInteger", "method_description": "Adds two values and stores the result in the left-hand-side variable, wrapping any overflow.", "method_name": "&+=", "params": [{"param_type": "inout Self", "param_name": ["lhs"], "param_description": "The first value to add."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The second value to add."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the difference of the two given values, wrapping the result in case of any overflow.", "method_name": "&-", "params": [{"param_type": "Self", "param_name": ["lhs"], "param_description": "A numeric value."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The value to subtract from lhs."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "FixedWidthInteger", "method_description": "Subtracts the second value from the first and stores the difference in the left-hand-side variable, wrapping any overflow.", "method_name": "&-=", "params": [{"param_type": "inout Self", "param_name": ["lhs"], "param_description": "A numeric value."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The value to subtract from lhs."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the result of shifting a value\u2019s binary representation the specified number of digits to the left, masking the shift amount to the type\u2019s bit width.Required. Default implementation provided.", "method_name": "&", "params": [{"param_type": "Self", "param_name": ["lhs"], "param_description": "The value to shift."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The number of bits to shift lhs to the left. If rhs is outside the range 0..<lhs.bitWidth, it is masked to produce a value within that range."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "FixedWidthInteger", "method_description": "Returns the result of shifting a value\u2019s binary representation the specified number of digits to the left, masking the shift amount to the type\u2019s bit width, and stores the result in the left-hand-side variable.Required. Default implementation provided.", "method_name": "&", "params": [{"param_type": "inout Self", "param_name": ["lhs"], "param_description": "The value to shift."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The number of bits to shift lhs to the left. If rhs is outside the range 0..<lhs.bitWidth, it is masked to produce a value within that range."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Self"]}, "class_name": "FixedWidthInteger", "method_description": "Returns the result of shifting a value\u2019s binary representation the specified number of digits to the right, masking the shift amount to the type\u2019s bit width.Required. Default implementation provided.", "method_name": "&>>", "params": [{"param_type": "Self", "param_name": ["lhs"], "param_description": "The value to shift."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The number of bits to shift lhs to the right. If rhs is outside the range 0..<lhs.bitWidth, it is masked to produce a value within that range."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "FixedWidthInteger", "method_description": "Calculates the result of shifting a value\u2019s binary representation the specified number of digits to the right, masking the shift amount to the type\u2019s bit width, and stores the result in the left-hand-side variable.Required. Default implementation provided.", "method_name": "&>>=", "params": [{"param_type": "inout Self", "param_name": ["lhs"], "param_description": "The value to shift."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "The number of bits to shift lhs to the right. If rhs is outside the range 0..<lhs.bitWidth, it is masked to produce a value within that range."}]}], "class_inherit_list": ["BinaryInteger", "LosslessStringConvertible"], "Vars": [{"var_type": "Self", "var_description": "The big-endian representation of this integer.Required. Default implementation provided.", "var_name": "bigEndian"}, {"var_type": "Self", "var_description": "A representation of this integer with the byte order swapped.Required.", "var_name": "byteSwapped"}, {"var_type": "Int", "var_description": "The number of leading zeros in this value\u2019s binary representation.Required.", "var_name": "leadingZeroBitCount"}, {"var_type": "Self", "var_description": "The little-endian representation of this integer.Required. Default implementation provided.", "var_name": "littleEndian"}, {"var_type": "Int", "var_description": "The number of bits equal to 1 in this value\u2019s binary representation.Required.", "var_name": "nonzeroBitCount"}, {"var_type": "Int", "var_description": "The number of bits used for the underlying binary representation of values of this type.Required. Default implementation provided.", "var_name": "bitWidth"}, {"var_type": "Self", "var_description": "The maximum representable integer in this type.Required.", "var_name": "max"}, {"var_type": "Self", "var_description": "The minimum representable integer in this type.Required.", "var_name": "min"}], "subclass_list": [], "class_name": "FixedWidthInteger"}