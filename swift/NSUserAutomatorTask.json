{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSUserScriptTask"], "Methods": [{"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "execute", "class_name": "NSUserAutomatorTask", "method_description": "Execute the Automator workflow by providing it as securely coded input.", "params": [{"param_type": "NSSecureCoding", "param_name": ["withInput", "input"], "param_description": ""}, {"param_type": "NSUserAutomatorTask.CompletionHandler", "param_name": ["completionHandler", "handler"], "param_description": ""}]}], "Vars": [{"var_type": "[String", "var_description": "The variables required by the Automator workflow.", "var_name": "variables"}], "subclass_list": [], "class_description": "The NSUserAutomatorTask class is intended to run Automator workflows from your application. It is intended to execute user-supplied workflows, and will execute them outside of the application's sandbox, if any.\nThe class is not intended to execute scripts built into an application; for that, use one of the Process or AMWorkflow classes.  If the application is sandboxed, then the script must be in the FileManager.SearchPathDirectory.applicationScriptsDirectory folder.  A sandboxed application may read from, but not write to, this folder.\nIf you simply need to execute scripts without regard to input or output, use NSUserScriptTask, which can execute any of the specific types.  If you need specific control over the input to or output from the workflow, use this class.\n", "class_name": "NSUserAutomatorTask"}