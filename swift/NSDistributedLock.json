{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the attempt to acquire the receiver was successful, otherwise false."]}, "method_name": "`try`", "class_name": "NSDistributedLock", "method_description": "Attempts to acquire the receiver and immediately returns a Boolean value that indicates whether the attempt was successful.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "`break`", "class_name": "NSDistributedLock", "method_description": "Forces the lock to be relinquished.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "unlock", "class_name": "NSDistributedLock", "method_description": "Relinquishes the receiver.", "params": []}], "Vars": [{"var_type": "Date", "var_description": "Returns the time the receiver was acquired by any of the NSDistributedLock objects using the same path.", "var_name": "lockDate"}], "subclass_list": [], "class_description": "The lock is implemented by an entry (such as a file or directory) in the file system. For multiple applications to use an NSDistributedLock object to coordinate their activities, the lock must be writable on a file system accessible to all hosts on which the applications might be running.\nUse the try() method to attempt to acquire a lock. You should generally use the unlock() method to release the lock rather than break().\nNSDistributedLock doesn\u2019t conform to the NSLocking protocol, nor does it have a lock method. The protocol\u2019s lock() method is intended to block the execution of the thread until successful. For an NSDistributedLock object, this could mean polling the file system at some predetermined rate. A better solution is to provide the try() method and let you determine the polling frequency that makes sense for your application.\n", "class_name": "NSDistributedLock"}