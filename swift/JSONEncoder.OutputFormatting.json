{"package_name": "foundation", "interface_list": ["OptionSet"], "class_inherit_list": [], "Methods": [{"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the option set contains member; otherwise, false."]}, "method_name": "contains", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a Boolean value that indicates whether a given element is a member of the option set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["member"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool", "JSONEncoder.OutputFormatting"], "return_name": [["inserted"], ["memberAfterInsert"]], "return_description": ["(true, newMember) if newMember was not contained in self. Otherwise, returns (false, oldMember), where oldMember is the member of the set equal to newMember."]}, "method_name": "insert", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Adds the given element to the option set if it is not already a member.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["newMember"], "param_description": ""}]}, {"return_value": {"return_type": ["JSONEncoder.OutputFormatting"], "return_name": [""], "return_description": ["The intersection of [newMember] and the set if the intersection was nonempty; otherwise, nil."]}, "method_name": "update", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Inserts the given element into the set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["with", "newMember"], "param_description": ""}]}, {"return_value": {"return_type": ["JSONEncoder.OutputFormatting"], "return_name": [""], "return_description": ["The intersection of [member] and the set, if the intersection was nonempty; otherwise, nil."]}, "method_name": "remove", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Removes the given element and all elements subsumed by it.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["member"], "param_description": ""}]}, {"return_value": {"return_type": ["JSONEncoder.OutputFormatting"], "return_name": [""], "return_description": ["A new option set made up of the elements contained in this set, in other, or in both."]}, "method_name": "union", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a new option set of the elements contained in this set, in the given set, or in both.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "formUnion", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Inserts the elements of another set into this option set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_type": ["JSONEncoder.OutputFormatting"], "return_name": [""], "return_description": ["A new option set with only the elements contained in both this set and other."]}, "method_name": "intersection", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a new option set with only the elements contained in both this set and the given set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "formIntersection", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Removes all elements of this option set that are not also present in the given set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_type": ["JSONEncoder.OutputFormatting"], "return_name": [""], "return_description": ["A new option set with only the elements contained in either this set or other, but not in both."]}, "method_name": "symmetricDifference", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a new option set with the elements contained in this set or in the given set, but not in both.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "formSymmetricDifference", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Replaces this set with a new set containing all elements contained in either this set or the given set, but not in both.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_type": ["JSONEncoder.OutputFormatting"], "return_name": [""], "return_description": ["A new set."]}, "method_name": "subtracting", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a new set containing the elements of this set that do not occur in the given set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "subtract", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Removes the elements of the given set from this set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["other"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the set is a subset of other; otherwise, false."]}, "method_name": "isSubset", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a Boolean value that indicates whether the set is a subset of another set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["of", "other"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the set is a strict subset of other; otherwise, false."]}, "method_name": "isStrictSubset", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a Boolean value that indicates whether this set is a strict subset of the given set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["of", "other"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the set is a superset of other; otherwise, false."]}, "method_name": "isSuperset", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a Boolean value that indicates whether the set is a superset of the given set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["of", "other"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the set is a strict superset of other; otherwise, false."]}, "method_name": "isStrictSuperset", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a Boolean value that indicates whether this set is a strict superset of the given set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["of", "other"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the set has no elements in common with other; otherwise, false."]}, "method_name": "isDisjoint", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a Boolean value that indicates whether the set has no members in common with the given set.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["with", "other"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "!=", "class_name": "JSONEncoder.OutputFormatting", "method_description": "Returns a Boolean value indicating whether two values are not equal.", "params": [{"param_type": "JSONEncoder.OutputFormatting", "param_name": ["lhs"], "param_description": ""}, {"param_type": "JSONEncoder.OutputFormatting", "param_name": ["rhs"], "param_description": ""}]}], "Vars": [{"var_type": "JSONEncoder.OutputFormatting", "var_description": "The output formatting option that uses ample white space and indentation to make output easy to read.", "var_name": "prettyPrinted"}, {"var_type": "JSONEncoder.OutputFormatting", "var_description": "The output formatting option that sorts keys in lexicographic order.", "var_name": "sortedKeys"}, {"var_type": "UInt", "var_description": "A raw value representing a set of output formatting options.", "var_name": "rawValue"}, {"var_type": "Bool", "var_description": "A Boolean value that indicates whether the set has no elements.", "var_name": "isEmpty"}], "subclass_list": [], "class_description": "", "class_name": "JSONEncoder.OutputFormatting"}