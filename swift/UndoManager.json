{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["Void"], "return_name": [""], "return_description": []}, "method_name": "registerUndo", "class_name": "UndoManager", "method_description": "Registers the specified closure to implement a single undo operation that the target receives.", "params": [{"param_type": "AnyObject", "param_name": ["withTarget", "target"], "param_description": ""}, {"param_type": "@escaping (AnyObject", "param_name": ["handler"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "registerUndo", "class_name": "UndoManager", "method_description": "Registers the selector of the specified target to implement a single undo operation that the target receives.", "params": [{"param_type": "Any", "param_name": ["withTarget", "target"], "param_description": ""}, {"param_type": "Selector", "param_name": ["selector"], "param_description": ""}, {"param_type": "Any", "param_name": ["object", "anObject"], "param_description": ""}]}, {"return_value": {"return_type": ["Any"], "return_name": [""], "return_description": ["A proxy object that forwards messages to the undo manager for recording as undo actions."]}, "method_name": "prepare", "class_name": "UndoManager", "method_description": "Prepares the undo manager for invocation-based undo with the given target as the subject of the next undo operation.", "params": [{"param_type": "Any", "param_name": ["withInvocationTarget", "target"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "undo", "class_name": "UndoManager", "method_description": "Closes the top-level undo group if necessary and invokes undoNestedGroup().", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "undoNestedGroup", "class_name": "UndoManager", "method_description": "Performs the undo operations in the last undo group (whether top-level or nested), recording the operations on the redo stack as a single group.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "redo", "class_name": "UndoManager", "method_description": "Performs the operations in the last group on the redo stack, if there are any, recording them on the undo stack as a single group.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "beginUndoGrouping", "class_name": "UndoManager", "method_description": "Marks the beginning of an undo group.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "endUndoGrouping", "class_name": "UndoManager", "method_description": "Marks the end of an undo group.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "disableUndoRegistration", "class_name": "UndoManager", "method_description": "Disables the recording of undo operations, whether by registerUndo(withTarget:selector:object:) or by invocation-based undo.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "enableUndoRegistration", "class_name": "UndoManager", "method_description": "Enables the recording of undo operations.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "removeAllActions", "class_name": "UndoManager", "method_description": "Clears the undo and redo stacks and re-enables the receiver.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "removeAllActions", "class_name": "UndoManager", "method_description": "Clears the undo and redo stacks of all operations involving the specified target as the recipient of the undo message.", "params": [{"param_type": "Any", "param_name": ["withTarget", "target"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "setActionName", "class_name": "UndoManager", "method_description": "Sets the name of the action associated with the Undo or Redo command.", "params": [{"param_type": "String", "param_name": ["actionName"], "param_description": ""}]}, {"return_value": {"return_type": ["String"], "return_name": [""], "return_description": ["The localized title of the undo menu item."]}, "method_name": "undoMenuTitle", "class_name": "UndoManager", "method_description": "Returns the complete, localized title of the Undo menu command for the action identified by the given name.", "params": [{"param_type": "String", "param_name": ["forUndoActionName", "actionName"], "param_description": ""}]}, {"return_value": {"return_type": ["String"], "return_name": [""], "return_description": ["The localized title of the redo menu item."]}, "method_name": "redoMenuTitle", "class_name": "UndoManager", "method_description": "Returns the complete, localized title of the Redo menu command for the action identified by the given name.", "params": [{"param_type": "String", "param_name": ["forUndoActionName", "actionName"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "setActionIsDiscardable", "class_name": "UndoManager", "method_description": "Sets whether the next undo or redo action is discardable.", "params": [{"param_type": "Bool", "param_name": ["discardable"], "param_description": ""}]}], "Vars": [{"var_type": "Bool", "var_description": "A Boolean value that indicates whether the receiver has any actions to undo.", "var_name": "canUndo"}, {"var_type": "Bool", "var_description": "A Boolean value that indicates whether the receiver has any actions to redo.", "var_name": "canRedo"}, {"var_type": "Int", "var_description": "The maximum number of top-level undo groups the receiver holds.", "var_name": "levelsOfUndo"}, {"var_type": "Bool", "var_description": "A Boolean value that indicates whether the receiver automatically creates undo groups around each pass of the run loop.", "var_name": "groupsByEvent"}, {"var_type": "Int", "var_description": "The number of nested undo groups (or redo groups, if Redo was invoked last) in the current event loop.", "var_name": "groupingLevel"}, {"var_type": "Bool", "var_description": "A Boolean value that indicates whether the recording of undo operations is enabled.", "var_name": "isUndoRegistrationEnabled"}, {"var_type": "Bool", "var_description": "Returns a Boolean value that indicates whether the receiver is in the process of performing its undo() or undoNestedGroup() method.", "var_name": "isUndoing"}, {"var_type": "Bool", "var_description": "Returns a Boolean value that indicates whether the receiver is in the process of performing its redo() method.", "var_name": "isRedoing"}, {"var_type": "String", "var_description": "The name identifying the undo action.", "var_name": "undoActionName"}, {"var_type": "String", "var_description": "The name identifying the redo action.", "var_name": "redoActionName"}, {"var_type": "String", "var_description": "The complete title of the Undo menu command, for example, \u201cUndo Paste.\u201d", "var_name": "undoMenuItemTitle"}, {"var_type": "String", "var_description": "The complete title of the Redo menu command, for example, \u201cRedo Paste.\u201d", "var_name": "redoMenuItemTitle"}, {"var_type": "[RunLoop.Mode]", "var_description": "The modes governing the types of input handled during a cycle of the run loop.", "var_name": "runLoopModes"}, {"var_type": "Bool", "var_description": "Boolean value that indicates whether the next undo action is discardable.", "var_name": "undoActionIsDiscardable"}, {"var_type": "Bool", "var_description": "Boolean value that indicates whether the next redo action is discardable.", "var_name": "redoActionIsDiscardable"}, {"var_type": "Int", "var_description": "NSUndoManager provides this constant as a convenience; you can use it to compare to values returned by some NSUndoManager methods.", "var_name": "NSUndoCloseGroupingRunLoopOrdering"}, {"var_type": "String", "var_description": "The key has a corresponding value of true, wrapped as a Boolean NSNumber object, if the undo group as a whole is discardable.", "var_name": "NSUndoManagerGroupIsDiscardableKey"}, {"var_type": "NSNotification.Name", "var_description": "Posted whenever an NSUndoManager object opens or closes an undo group (except when it opens a top-level group) and when checking the redo stack in canRedo. ", "var_name": "NSUndoManagerCheckpoint"}, {"var_type": "NSNotification.Name", "var_description": "Posted whenever an NSUndoManager object opens an undo group, which occurs in the implementation of the beginUndoGrouping() method. ", "var_name": "NSUndoManagerDidOpenUndoGroup"}, {"var_type": "NSNotification.Name", "var_description": "Posted just after an NSUndoManager object performs a redo operation (redo()).", "var_name": "NSUndoManagerDidRedoChange"}, {"var_type": "NSNotification.Name", "var_description": "Posted just after an NSUndoManager object performs an undo operation.", "var_name": "NSUndoManagerDidUndoChange"}, {"var_type": "NSNotification.Name", "var_description": "Posted before an NSUndoManager object closes an undo group, which occurs in the implementation of the endUndoGrouping() method.", "var_name": "NSUndoManagerWillCloseUndoGroup"}, {"var_type": "NSNotification.Name", "var_description": "Posted after an NSUndoManager object closes an undo group, which occurs in the implementation of the endUndoGrouping() method.", "var_name": "NSUndoManagerDidCloseUndoGroup"}, {"var_type": "NSNotification.Name", "var_description": "Posted just before an NSUndoManager object performs a redo operation (redo()).", "var_name": "NSUndoManagerWillRedoChange"}, {"var_type": "NSNotification.Name", "var_description": "Posted just before an NSUndoManager object performs an undo operation.", "var_name": "NSUndoManagerWillUndoChange"}], "subclass_list": [], "class_description": "You register an undo operation by calling one of the methods described in Registering Undo Operations. You specify the name of the object that\u2019s changing (or the owner of that object) and provide a closure, method, or invocation to revert its state.\nAfter you register an undo operation, you can call undo() on the undo manager to revert to the state of the last undo operation. When undoing an action, UndoManager saves the operations you reverted to so that you can call redo() automatically.\nUndoManager is typically used by apps with UI interactions. For example, UIKit implements undo and redo in its text view object, making it easy for you to undo and redo actions in objects along the responder chain. UndoManager also serves as a general-purpose state manager, which can be used to undo and redo many kinds of actions. For example, an interactive command-line utility could use this class to undo the last command run, or a networking library could undo a request by sending another request that invalidates the previous one.\n", "class_name": "UndoManager"}