{"subclass_list": [], "Methods": [{"params": [], "method_name": "strongObjects", "method_description": "Returns a new pointer array that maintains strong references to its elements.", "return_value": {"return_description": ["A new pointer array that maintains strong references to its elements."], "return_name": [""], "return_type": ["NSPointerArray"]}, "class_name": "NSPointerArray"}, {"params": [], "method_name": "weakObjects", "method_description": "Returns a new pointer array that maintains weak references to its elements.", "return_value": {"return_description": ["A new pointer array that maintains weak references to its elements."], "return_name": [""], "return_type": ["NSPointerArray"]}, "class_name": "NSPointerArray"}, {"params": [{"param_name": ["at", "index"], "param_description": "", "param_type": "Int"}], "method_name": "pointer", "method_description": "Returns the pointer at a given index.", "return_value": {"return_description": ["The pointer at index."], "return_name": [""], "return_type": ["UnsafeMutableRawPointer"]}, "class_name": "NSPointerArray"}, {"params": [{"param_name": ["pointer"], "param_description": "", "param_type": "UnsafeMutableRawPointer"}], "method_name": "addPointer", "method_description": "Adds a given pointer to the receiver.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSPointerArray"}, {"params": [{"param_name": ["at", "index"], "param_description": "", "param_type": "Int"}], "method_name": "removePointer", "method_description": "Removes the pointer at a given index.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSPointerArray"}, {"params": [{"param_name": ["item"], "param_description": "", "param_type": "UnsafeMutableRawPointer"}, {"param_name": ["at", "index"], "param_description": "", "param_type": "Int"}], "method_name": "insertPointer", "method_description": "Inserts a pointer at a given index.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSPointerArray"}, {"params": [{"param_name": ["at", "index"], "param_description": "", "param_type": "Int"}, {"param_name": ["withPointer", "item"], "param_description": "", "param_type": "UnsafeMutableRawPointer"}], "method_name": "replacePointer", "method_description": "Replaces the pointer at a given index.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSPointerArray"}, {"params": [], "method_name": "compact", "method_description": "Removes NULL values from the receiver.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "NSPointerArray"}], "Vars": [{"var_name": "count", "var_description": "The number of elements in the receiver.", "var_type": "Int"}, {"var_name": "allObjects", "var_description": "All the objects in the receiver.", "var_type": "[Any]"}, {"var_name": "pointerFunctions", "var_description": "The functions in use by the receiver.", "var_type": "NSPointerFunctions"}], "class_name": "NSPointerArray", "class_inherit_list": ["NSObject"], "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSFastEnumeration", "NSSecureCoding"], "class_description": "The pointer array class is modeled after NSArray, but can also hold nil values. You can insert or remove nil values which contribute to the array's count.\nA pointer array can be initialized to maintain strong or weak references to objects, or according to any of the memory or personality options defined by NSPointerFunctions.Options.\nThe NSCopying and NSCoding protocols are applicable only when a pointer array is initialized to maintain strong or weak references to objects.\nWhen enumerating a pointer array with NSFastEnumeration using for...in, the loop will yield any nil values present in the array. See Fast Enumeration Makes It Easy to Enumerate a Collection in Programming with Objective-C for more information.\nNSPointerArray is not suitable for subclassing.\n", "package_name": "foundation"}