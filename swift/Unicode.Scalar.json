{"class_inherit_list": [], "Vars": [{"var_description": "A mirror that reflects the Unicode.Scalar instance.", "var_type": "Mirror", "var_name": "customMirror"}, {"var_description": "A custom playground Quick Look for the Unicode.Scalar instance.", "var_type": "PlaygroundQuickLook", "var_name": "customPlaygroundQuickLook"}, {"var_description": "An escaped textual representation of the Unicode scalar, suitable for debugging.", "var_type": "String", "var_name": "debugDescription"}, {"var_description": "A textual representation of the Unicode scalar.", "var_type": "String", "var_name": "description"}, {"var_description": "A Boolean value indicating whether the Unicode scalar is an ASCII character.", "var_type": "Bool", "var_name": "isASCII"}, {"var_description": "", "var_type": "Unicode.Scalar.UTF16View", "var_name": "utf16"}, {"var_description": "A numeric representation of the Unicode scalar.", "var_type": "UInt32", "var_name": "value"}], "class_name": "Unicode.Scalar", "interface_list": ["Comparable", "CustomDebugStringConvertible", "CustomPlaygroundQuickLookable", "CustomReflectable", "CustomStringConvertible", "Equatable", "ExpressibleByUnicodeScalarLiteral", "Hashable", "LosslessStringConvertible", "TextOutputStreamable"], "subclass_list": [], "class_description": "The Unicode.Scalar type, representing a single Unicode scalar value, is the element type of a string\u2019s unicodeScalars collection.\nYou can create a Unicode.Scalar instance by using a string literal that contains a single character representing exactly one Unicode scalar value.\nYou can also create Unicode scalar values directly from their numeric representation.\n", "Methods": [{"return_value": {"return_description": ["A string representation of the scalar."], "return_name": [""], "return_type": ["String"]}, "method_description": "Returns a string representation of the Unicode scalar.", "method_name": "escaped", "class_name": "Unicode.Scalar", "params": [{"param_description": "Pass true if you need the result to use only ASCII characters; otherwise, pass false.", "param_type": "Bool", "param_name": ["asASCII", "forceASCII"]}]}, {"return_value": {"return_description": [], "return_name": [], "return_type": []}, "method_description": "Hashes the essential components of this value by feeding them into the given hasher.", "method_name": "hash", "class_name": "Unicode.Scalar", "params": [{"param_description": "The hasher to use when combining the components of this instance.", "param_type": "inout Hasher", "param_name": ["into", "hasher"]}]}, {"return_value": {"return_description": [], "return_name": [], "return_type": []}, "method_description": "Writes the textual representation of the Unicode scalar into the given output stream.", "method_name": "write", "class_name": "Unicode.Scalar", "params": [{"param_description": "An output stream.", "param_type": "inout TextOutputStream", "param_name": ["to", "target"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether two values are not equal.", "method_name": "!=", "class_name": "Unicode.Scalar", "params": [{"param_description": "A value to compare.", "param_type": "Unicode.Scalar", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "Unicode.Scalar", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["PartialRangeFrom<Unicode.Scalar>"]}, "method_description": "Returns a partial range extending upward from a lower bound.", "method_name": "...", "class_name": "Unicode.Scalar", "params": [{"param_description": "The lower bound for the range.", "param_type": "Unicode.Scalar", "param_name": ["minimum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["PartialRangeThrough<Unicode.Scalar>"]}, "method_description": "Returns a partial range up to, and including, its upper bound.", "method_name": "...", "class_name": "Unicode.Scalar", "params": [{"param_description": "The upper bound for the range.", "param_type": "Unicode.Scalar", "param_name": ["maximum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["ClosedRange<Unicode.Scalar>"]}, "method_description": "Returns a closed range that contains both of its bounds.", "method_name": "...", "class_name": "Unicode.Scalar", "params": [{"param_description": "The lower bound for the range.", "param_type": "Unicode.Scalar", "param_name": ["minimum"]}, {"param_description": "The upper bound for the range.", "param_type": "Unicode.Scalar", "param_name": ["maximum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["PartialRangeUpTo<Unicode.Scalar>"]}, "method_description": "Returns a partial range up to, but not including, its upper bound.", "method_name": "..", "class_name": "Unicode.Scalar", "params": [{"param_description": "The upper bound for the range.", "param_type": "Unicode.Scalar", "param_name": ["maximum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Range<Unicode.Scalar>"]}, "method_description": "Returns a half-open range that contains its lower bound but not its upper bound.", "method_name": "..", "class_name": "Unicode.Scalar", "params": [{"param_description": "The lower bound for the range.", "param_type": "Unicode.Scalar", "param_name": ["minimum"]}, {"param_description": "The upper bound for the range.", "param_type": "Unicode.Scalar", "param_name": ["maximum"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "", "method_name": "", "class_name": "Unicode.Scalar", "params": [{"param_description": "", "param_type": "Unicode.Scalar", "param_name": ["lhs"]}, {"param_description": "", "param_type": "Unicode.Scalar", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the value of the first argument is less than or equal to that of the second argument.", "method_name": "", "class_name": "Unicode.Scalar", "params": [{"param_description": "A value to compare.", "param_type": "Unicode.Scalar", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "Unicode.Scalar", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "", "method_name": "==", "class_name": "Unicode.Scalar", "params": [{"param_description": "", "param_type": "Unicode.Scalar", "param_name": ["lhs"]}, {"param_description": "", "param_type": "Unicode.Scalar", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the value of the first argument is greater than that of the second argument.", "method_name": ">", "class_name": "Unicode.Scalar", "params": [{"param_description": "A value to compare.", "param_type": "Unicode.Scalar", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "Unicode.Scalar", "param_name": ["rhs"]}]}, {"return_value": {"return_description": ["true if lhs is greater than or equal to rhs; otherwise, false."], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the value of the first argument is greater than or equal to that of the second argument.", "method_name": ">=", "class_name": "Unicode.Scalar", "params": [{"param_description": "A value to compare.", "param_type": "Unicode.Scalar", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "Unicode.Scalar", "param_name": ["rhs"]}]}], "package_name": "swift"}