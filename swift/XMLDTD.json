{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["XMLNode"], "Methods": [{"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "addChild", "class_name": "XMLDTD", "method_description": "Adds a child node to the end of the list of existing children.", "params": [{"param_type": "XMLNode", "param_name": ["child"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "insertChild", "class_name": "XMLDTD", "method_description": "Inserts a child node in the receiver\u2019s list of children at a specific location in the list.", "params": [{"param_type": "XMLNode", "param_name": ["child"], "param_description": ""}, {"param_type": "Int", "param_name": ["at", "index"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "insertChildren", "class_name": "XMLDTD", "method_description": "Inserts an array of child nodes at a specified location in the receiver\u2019s list of children.", "params": [{"param_type": "[XMLNode]", "param_name": ["children"], "param_description": ""}, {"param_type": "Int", "param_name": ["at", "index"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "removeChild", "class_name": "XMLDTD", "method_description": "Removes the child node at a particular location in the receiver\u2019s list of children.", "params": [{"param_type": "Int", "param_name": ["at", "index"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "replaceChild", "class_name": "XMLDTD", "method_description": "Replaces a child at a particular index with another child.", "params": [{"param_type": "Int", "param_name": ["at", "index"], "param_description": ""}, {"param_type": "XMLNode", "param_name": ["with", "node"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "setChildren", "class_name": "XMLDTD", "method_description": "Removes all existing children of the receiver and replaces them with an array of new child nodes.", "params": [{"param_type": "[XMLNode]", "param_name": ["children"], "param_description": ""}]}, {"return_value": {"return_type": ["XMLDTDNode"], "return_name": [""], "return_description": ["An autoreleased XMLDTDNode object, or nil if there is no match for name."]}, "method_name": "predefinedEntityDeclaration", "class_name": "XMLDTD", "method_description": "Returns a DTD node representing the predefined entity declaration with the specified name.", "params": [{"param_type": "String", "param_name": ["forName", "name"], "param_description": ""}]}, {"return_value": {"return_type": ["XMLDTDNode"], "return_name": [""], "return_description": ["An autoreleased XMLDTDNode object, or nil if there is no match."]}, "method_name": "elementDeclaration", "class_name": "XMLDTD", "method_description": "Returns the DTD node representing an element declaration for a specified element.", "params": [{"param_type": "String", "param_name": ["forName", "name"], "param_description": ""}]}, {"return_value": {"return_type": ["XMLDTDNode"], "return_name": [""], "return_description": ["An autoreleased XMLDTDNode object, or nil if there is no matching attribute-list declaration."]}, "method_name": "attributeDeclaration", "class_name": "XMLDTD", "method_description": "Returns the DTD node representing an attribute-list declaration for a given attribute and its element.", "params": [{"param_type": "String", "param_name": ["forName", "name"], "param_description": ""}, {"param_type": "String", "param_name": ["elementName"], "param_description": ""}]}, {"return_value": {"return_type": ["XMLDTDNode"], "return_name": [""], "return_description": ["An autoreleased XMLDTDNode object, or nil if there is no match."]}, "method_name": "entityDeclaration", "class_name": "XMLDTD", "method_description": "Returns the DTD node representing the entity declaration for a specified entity.", "params": [{"param_type": "String", "param_name": ["forName", "name"], "param_description": ""}]}, {"return_value": {"return_type": ["XMLDTDNode"], "return_name": [""], "return_description": ["An autoreleased XMLDTDNode object, or nil if there is no match."]}, "method_name": "notationDeclaration", "class_name": "XMLDTD", "method_description": "Returns the DTD node representing the notation declaration identified by the specified notation name.", "params": [{"param_type": "String", "param_name": ["forName", "name"], "param_description": ""}]}], "Vars": [{"var_type": "String", "var_description": "Returns the receiver\u2019s public identifier.", "var_name": "publicID"}, {"var_type": "String", "var_description": "Returns the receiver\u2019s system identifier.", "var_name": "systemID"}], "subclass_list": [], "class_description": "An instance of the XMLDTD class is held as a property of an XMLDocument instance, accessed through the XMLDocument method dtd (and set via setDTD:).\nIn the data model, an XMLDTD object is conceptually similar to namespace and attribute nodes: it is not considered to be a child of the XMLDocument object although it is closely associated with it. It is at the \u201croot\u201d of a shallow tree consisting primarily of nodes representing DTD declarations. Acceptable child nodes are instances of the XMLDTDNode class as well as XMLNode objects representing comment nodes and processing-instruction nodes.\nYou create an NSXMLDTD object in one of three ways: \nBy processing an XML document with its own internal (in-line) DTD\nBy process a standalone (external) DTD\nProgrammatically\nOnce an XMLDTD instance is in place, you can add, remove, and change the XMLDTDNode objects representing various DTD declarations. When you write the document out as XML, the new or modified internal DTD is included (assuming you set the DTD in the XMLDocument instance). You may also programmatically create an external DTD and write that out to its own file.\n", "class_name": "XMLDTD"}