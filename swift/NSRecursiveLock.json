{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSLocking"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the lock is acquired before limit, otherwise false."]}, "method_name": "lock", "class_name": "NSRecursiveLock", "method_description": "Attempts to acquire a lock before a given date.", "params": [{"param_type": "Date", "param_name": ["before", "limit"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if successful, otherwise false."]}, "method_name": "`try`", "class_name": "NSRecursiveLock", "method_description": "Attempts to acquire a lock, and immediately returns a Boolean value that indicates whether the attempt was successful.", "params": []}], "Vars": [{"var_type": "String", "var_description": "The name associated with the receiver. ", "var_name": "name"}], "subclass_list": [], "class_description": "NSRecursiveLock defines a lock that may be acquired multiple times by the same thread without causing a deadlock, a situation where a thread is permanently blocked waiting for itself to relinquish a lock. While the locking thread has one or more locks, all other threads are prevented from accessing the code protected by the lock.\n", "class_name": "NSRecursiveLock"}