{"class_inherit_list": [], "Vars": [], "class_name": "Unmanaged", "interface_list": [], "subclass_list": [], "class_description": "When you use this type, you become partially responsible for keeping the object alive.\n", "Methods": [{"return_value": {"return_description": [], "return_name": [""], "return_type": ["Unmanaged<Instance>"]}, "method_description": "Performs an unbalanced autorelease of the object.", "method_name": "autorelease", "class_name": "Unmanaged", "params": []}, {"return_value": {"return_description": [], "return_name": [], "return_type": []}, "method_description": "Performs an unbalanced release of the object.", "method_name": "release", "class_name": "Unmanaged", "params": []}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Unmanaged<Instance>"]}, "method_description": "Performs an unbalanced retain of the object.", "method_name": "retain", "class_name": "Unmanaged", "params": []}, {"return_value": {"return_description": ["The object referenced by this Unmanaged instance."], "return_name": [""], "return_type": ["Instance"]}, "method_description": "Gets the value of this unmanaged reference as a managed reference and consumes an unbalanced retain of it.", "method_name": "takeRetainedValue", "class_name": "Unmanaged", "params": []}, {"return_value": {"return_description": ["The object referenced by this Unmanaged instance."], "return_name": [""], "return_type": ["Instance"]}, "method_description": "Gets the value of this unmanaged reference as a managed reference without consuming an unbalanced retain of it.", "method_name": "takeUnretainedValue", "class_name": "Unmanaged", "params": []}, {"return_value": {"return_description": ["An opaque pointer to the value of this unmanaged reference."], "return_name": [""], "return_type": ["UnsafeMutableRawPointer"]}, "method_description": "Unsafely converts an unmanaged class reference to a pointer.", "method_name": "toOpaque", "class_name": "Unmanaged", "params": []}, {"return_value": {"return_description": ["An unmanaged class reference to value."], "return_name": [""], "return_type": ["Unmanaged<Instance>"]}, "method_description": "Unsafely turns an opaque C pointer into an unmanaged class reference.", "method_name": "fromOpaque", "class_name": "Unmanaged", "params": [{"param_description": "An opaque C pointer.", "param_type": "UnsafeRawPointer", "param_name": ["value"]}]}, {"return_value": {"return_description": ["An unmanaged reference to the object passed as value."], "return_name": [""], "return_type": ["Unmanaged<Instance>"]}, "method_description": "Creates an unmanaged reference with an unbalanced retain.", "method_name": "passRetained", "class_name": "Unmanaged", "params": [{"param_description": "A class instance.", "param_type": "Instance", "param_name": ["value"]}]}, {"return_value": {"return_description": ["An unmanaged reference to the object passed as value."], "return_name": [""], "return_type": ["Unmanaged<Instance>"]}, "method_description": "Creates an unmanaged reference without performing an unbalanced retain.", "method_name": "passUnretained", "class_name": "Unmanaged", "params": [{"param_description": "A class instance.", "param_type": "Instance", "param_name": ["value"]}]}], "package_name": "swift"}