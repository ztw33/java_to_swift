{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "ProgressReporting"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "cancel", "class_name": "URLSessionTask", "method_description": "Cancels the task.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "resume", "class_name": "URLSessionTask", "method_description": "Resumes the task, if it is suspended.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "suspend", "class_name": "URLSessionTask", "method_description": "Temporarily suspends a task.", "params": []}], "Vars": [{"var_type": "URLSessionTask.State", "var_description": "The current state of the task\u2014active, suspended, in the process of being canceled, or completed.", "var_name": "state"}, {"var_type": "Float", "var_description": "The relative priority at which you\u2019d like a host to handle the task, specified as a floating point value between 0.0 (lowest priority) and 1.0 (highest priority).", "var_name": "priority"}, {"var_type": "Float", "var_description": "The default URL session task priority, used implicitly for any task you have not prioritized.", "var_name": "defaultPriority"}, {"var_type": "Float", "var_description": "A low URL session task priority, with a floating point value above the minimum of 0 and below the default value.", "var_name": "lowPriority"}, {"var_type": "Float", "var_description": "A high URL session task priority, with a floating point value above the default value and below the maximum of 1.0.", "var_name": "highPriority"}, {"var_type": "Progress", "var_description": "A representation of the overall task progress.", "var_name": "progress"}, {"var_type": "Int64", "var_description": "The number of bytes that the task expects to receive in the response body.", "var_name": "countOfBytesExpectedToReceive"}, {"var_type": "Int64", "var_description": "The number of bytes that the task has received from the server in the response body.", "var_name": "countOfBytesReceived"}, {"var_type": "Int64", "var_description": "The number of bytes that the task expects to send in the request body.", "var_name": "countOfBytesExpectedToSend"}, {"var_type": "Int64", "var_description": "The number of bytes that the task has sent to the server in the request body.", "var_name": "countOfBytesSent"}, {"var_type": "Int64", "var_description": "The total size of the transfer cannot be determined.", "var_name": "NSURLSessionTransferSizeUnknown"}, {"var_type": "URLRequest", "var_description": "The URL request object currently being handled by the task.", "var_name": "currentRequest"}, {"var_type": "URLRequest", "var_description": "The original request object passed when the task was created.", "var_name": "originalRequest"}, {"var_type": "URLResponse", "var_description": "The server\u2019s response to the currently active request.", "var_name": "response"}, {"var_type": "String", "var_description": "An app-provided description of the current task.", "var_name": "taskDescription"}, {"var_type": "Int", "var_description": "An identifier uniquely identifying the task within a given session.", "var_name": "taskIdentifier"}, {"var_type": "Error", "var_description": "An error object that indicates why the task failed.", "var_name": "error"}, {"var_type": "Int64", "var_description": "A best-guess upper bound on the number of bytes the client expects to receive.", "var_name": "countOfBytesClientExpectsToReceive"}, {"var_type": "Int64", "var_description": "A best-guess upper bound on the number of bytes the client expects to send.", "var_name": "countOfBytesClientExpectsToSend"}, {"var_type": "Int64", "var_description": "The total size of the transfer cannot be determined.", "var_name": "NSURLSessionTransferSizeUnknown"}, {"var_type": "Date", "var_description": "The earliest date at which the network load should begin.", "var_name": "earliestBeginDate"}], "subclass_list": [], "class_description": "The URLSessionTask class is the base class for tasks in a URL session. Tasks are always part of a session; you create a task by calling one of the task creation methods on a URLSession instance. The method you call determines the type of task.\nUse URLSession\u2019s dataTask(with:) and related methods to create URLSessionDataTask instances. Data tasks request a resource, returning the server\u2019s response as one or more NSData objects in memory. They are supported in default, ephemeral, and shared sessions, but are not supported in background sessions.\nUse URLSession\u2019s uploadTask(with:from:) and related methods to create URLSessionUploadTask instances. Upload tasks are like data tasks, except that they make it easier to provide a request body so you can upload data before retrieving the server\u2019s response. Additionally, upload tasks are supported in background sessions.\nUse URLSession\u2019s downloadTask(with:) and related methods to create URLSessionDownloadTask instances. Download tasks download a resource directly to a file on disk. Download tasks are supported in any type of session.\nUse URLSession\u2019s streamTask(withHostName:port:) or streamTask(with:) to create URLSessionStreamTask instances. Stream tasks establish a TCP/IP connection from a host name and port or a net service object.\nAfter you create a task, you start it by calling its resume() method. The session then maintains a strong reference to the task until the request finishes or fails; you don\u2019t need to maintain a reference to the task unless it\u2019s useful for your app\u2019s internal bookkeeping.\nNote\nAll task properties support key-value observing.\n", "class_name": "URLSessionTask"}