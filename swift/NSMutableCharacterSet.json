{"package_name": "foundation", "Vars": [], "Methods": [{"method_description": "Returns a character set containing the characters in Unicode General Categories L*, M*, and N*.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "alphanumeric"}, {"method_description": "Returns a character set containing the characters in Unicode General Category Lt.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "capitalizedLetter"}, {"method_description": "Returns a character set containing the characters in Unicode General Category Cc and Cf.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "control"}, {"method_description": "Returns a character set containing the characters in the category of decimal numbers.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "decimalDigit"}, {"method_description": "Returns a character set containing individual Unicode characters that can also be represented as composed character sequences (such as for letters with accents), by the definition of \u201cstandard decomposition\u201d in version 3.2 of the Unicode character encoding standard.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "decomposable"}, {"method_description": "Returns a character set containing values in the category of Non-Characters or that have not yet been defined in version 3.2 of the Unicode standard.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "illegal"}, {"method_description": "Returns a character set containing the characters in Unicode General Category L* & M*.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "letter"}, {"method_description": "Returns a character set containing the characters in Unicode General Category Ll.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "lowercaseLetter"}, {"method_description": "Returns a character set containing the newline characters (U+000A ~ U+000D, U+0085, U+2028, and U+2029).", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "newline"}, {"method_description": "Returns a character set containing the characters in Unicode General Category M*.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "nonBase"}, {"method_description": "Returns a character set containing the characters in Unicode General Category P*.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "punctuation"}, {"method_description": "Returns a character set containing the characters in Unicode General Category S*.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "symbol"}, {"method_description": "Returns a character set containing the characters in Unicode General Category Lu and Lt.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "uppercaseLetter"}, {"method_description": "Returns a character set containing characters in Unicode General Category Z*, U+000A ~ U+000D, and U+0085.", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "whitespaceAndNewline"}, {"method_description": "Returns a character set containing the characters in Unicode General Category Zs and CHARACTER TABULATION (U+0009).", "return_value": {"return_name": [""], "return_description": [], "return_type": ["NSMutableCharacterSet"]}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "whitespace"}, {"method_description": "Adds to the receiver the characters whose Unicode values are in a given range.", "return_value": {"return_name": [], "return_description": [], "return_type": []}, "params": [{"param_description": "", "param_type": "NSRange", "param_name": ["in", "aRange"]}], "class_name": "NSMutableCharacterSet", "method_name": "addCharacters"}, {"method_description": "Removes from the receiver the characters whose Unicode values are in a given range.", "return_value": {"return_name": [], "return_description": [], "return_type": []}, "params": [{"param_description": "", "param_type": "NSRange", "param_name": ["in", "aRange"]}], "class_name": "NSMutableCharacterSet", "method_name": "removeCharacters"}, {"method_description": "Adds to the receiver the characters in a given string.", "return_value": {"return_name": [], "return_description": [], "return_type": []}, "params": [{"param_description": "", "param_type": "String", "param_name": ["in", "aString"]}], "class_name": "NSMutableCharacterSet", "method_name": "addCharacters"}, {"method_description": "Removes from the receiver the characters in a given string.", "return_value": {"return_name": [], "return_description": [], "return_type": []}, "params": [{"param_description": "", "param_type": "String", "param_name": ["in", "aString"]}], "class_name": "NSMutableCharacterSet", "method_name": "removeCharacters"}, {"method_description": "Modifies the receiver so it contains only characters that exist in both the receiver and another set.", "return_value": {"return_name": [], "return_description": [], "return_type": []}, "params": [{"param_description": "", "param_type": "CharacterSet", "param_name": ["with", "otherSet"]}], "class_name": "NSMutableCharacterSet", "method_name": "formIntersection"}, {"method_description": "Modifies the receiver so it contains all characters that exist in either the receiver or another set.", "return_value": {"return_name": [], "return_description": [], "return_type": []}, "params": [{"param_description": "", "param_type": "CharacterSet", "param_name": ["with", "otherSet"]}], "class_name": "NSMutableCharacterSet", "method_name": "formUnion"}, {"method_description": "Replaces all the characters in the receiver with all the characters it didn\u2019t previously contain.", "return_value": {"return_name": [], "return_description": [], "return_type": []}, "params": [], "class_name": "NSMutableCharacterSet", "method_name": "invert"}], "class_description": "The NSMutableCharacterSet class declares the programmatic interface to objects that manage a modifiable set of Unicode characters. You can add or remove characters from a mutable character set as numeric values in NSRange structures or as character values in strings, combine character sets by union or intersection, and invert a character set.\nMutable character sets are less efficient to use than immutable character sets. If you don\u2019t need to change a character set after creating it, create an immutable copy with copy and use that.\nNSMutableCharacterSet defines no primitive methods. Subclasses must implement all methods declared by this class in addition to the primitives of NSCharacterSet. They must also implement mutableCopy(with:).\nNSMutableCharacterSet is \u201ctoll-free bridged\u201d with its Core Foundation counterpart, CFMutableCharacterSet. See Toll-Free Bridging for more information.\nImportant\nThe Swift overlay to the Foundation framework provides the CharacterSet structure, which bridges to the NSMutableCharacterSet class and its immutable superclass, NSCharacterSet.  For more information about value types, see Working with Cocoa Frameworks in Using Swift with Cocoa and Objective-C (Swift 4.1).\n", "subclass_list": [], "class_inherit_list": ["NSCharacterSet"], "class_name": "NSMutableCharacterSet", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSMutableCopying", "NSSecureCoding"]}