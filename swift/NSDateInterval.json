{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSSecureCoding"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["ComparisonResult"], "return_name": [""], "return_description": ["Returns an ComparisonResult value that indicates the temporal ordering of the receiver and a given date interval:"]}, "method_name": "compare", "class_name": "NSDateInterval", "method_description": "Compares the receiver with the specified date interval.", "params": [{"param_type": "DateInterval", "param_name": ["dateInterval"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the startDate and duration of dateInterval and the receiver are equal. Otherwise, false. "]}, "method_name": "isEqual", "class_name": "NSDateInterval", "method_description": "Indicates whether the receiver is equal to the specified date interval.", "params": [{"param_type": "DateInterval", "param_name": ["to", "dateInterval"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "intersects", "class_name": "NSDateInterval", "method_description": "Indicates whether the receiver intersects with the specified date interval.", "params": [{"param_type": "DateInterval", "param_name": ["dateInterval"], "param_description": ""}]}, {"return_value": {"return_type": ["DateInterval"], "return_name": [""], "return_description": ["A date interval for the intersection of the receiver and dateInterval, or nil if no intersection occurs."]}, "method_name": "intersection", "class_name": "NSDateInterval", "method_description": "Returns the intersection between the receiver and the specified date interval.", "params": [{"param_type": "DateInterval", "param_name": ["with", "dateInterval"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the receiver contains date. Otherwise, false."]}, "method_name": "contains", "class_name": "NSDateInterval", "method_description": "Indicates whether the receiver contains the specified date.", "params": [{"param_type": "Date", "param_name": ["date"], "param_description": ""}]}], "Vars": [{"var_type": "Date", "var_description": "The start date of the date interval.", "var_name": "startDate"}, {"var_type": "Date", "var_description": "The end date of the date interval.", "var_name": "endDate"}, {"var_type": "TimeInterval", "var_description": "The duration of the date interval.", "var_name": "duration"}], "subclass_list": [], "class_description": "An NSDateInterval object represents a closed interval between two dates. The NSDateInterval class provides a programmatic interface for calculating the duration of a time interval and determining whether a date falls within it, as well as comparing date intervals and checking to see whether they intersect.\nAn NSDateInterval object consists of a startDate and an endDate. The startDate and endDate of a date interval can be equal, in which case its duration is 0. However, endDate cannot occur earlier than startDate.\nYou can use the DateIntervalFormatter class to create string representations of NSDateInterval objects that are suitable for display in the current locale.\nImportant\nThe Swift overlay to the Foundation framework provides the DateInterval structure, which bridges to the NSDateInterval class. For more information about value types, see Working with Cocoa Frameworks in Using Swift with Cocoa and Objective-C (Swift 4.1).\n", "class_name": "NSDateInterval"}