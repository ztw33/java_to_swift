{"subclass_list": [], "Methods": [{"params": [{"param_name": ["from", "string"], "param_description": "", "param_type": "String"}], "method_name": "canonicalLocaleIdentifier", "method_description": "Returns the canonical identifier for a given locale identification string.", "return_value": {"return_description": ["The canonical identifier for an the locale identified by string."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["fromLocaleIdentifier", "string"], "param_description": "", "param_type": "String"}], "method_name": "components", "method_description": "Returns a dictionary that is the result of parsing a locale ID.", "return_value": {"return_description": ["A dictionary that is the result of parsing string as a locale ID. The keys are the constant NSString constants corresponding to the locale ID components, and the values correspond to constants where available. For possible values, see NSLocale.Key."], "return_name": [["[String"]], "return_type": ["String]"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["fromComponents", "dict"], "param_description": "", "param_type": "String]"}], "method_name": "localeIdentifier", "method_description": "Returns a locale identifier from the components specified in a given dictionary.", "return_value": {"return_description": ["A locale identifier created from the components specified in dict."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["from", "string"], "param_description": "", "param_type": "String"}], "method_name": "canonicalLanguageIdentifier", "method_description": "Returns a canonical language identifier by mapping an arbitrary locale identification string to the canonical identifier.", "return_value": {"return_description": ["A string that represents the canonical language identifier for the specified arbitrary locale identifier."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["fromWindowsLocaleCode", "lcid"], "param_description": "", "param_type": "UInt32"}], "method_name": "localeIdentifier", "method_description": "Returns a locale identifier from a Windows locale code.", "return_value": {"return_description": ["The locale identifier."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["fromLocaleIdentifier", "localeIdentifier"], "param_description": "", "param_type": "String"}], "method_name": "windowsLocaleCode", "method_description": "Returns a Window locale code from the locale identifier.", "return_value": {"return_description": ["The Windows locale code."], "return_name": [""], "return_type": ["UInt32"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forLocaleIdentifier", "localeIdentifier"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified locale identifier.", "return_value": {"return_description": ["The localized name of the locale."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forCountryCode", "countryCode"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified country code.", "return_value": {"return_description": ["The localized name of the country for the given code."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forLanguageCode", "languageCode"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified language code.", "return_value": {"return_description": ["The localized name of the language."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forScriptCode", "scriptCode"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified script code.", "return_value": {"return_description": ["The localized name of the script."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forVariantCode", "variantCode"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified variant code.", "return_value": {"return_description": ["The localized name of the variant."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forCollationIdentifier", "collationIdentifier"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified collation identifier.", "return_value": {"return_description": ["The localized name for the collation."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forCollatorIdentifier", "collatorIdentifier"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified collator identifier.", "return_value": {"return_description": ["The localized name of the collator."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forCurrencyCode", "currencyCode"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified currency code.", "return_value": {"return_description": ["The localized name of the currency."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forCalendarIdentifier", "calendarIdentifier"], "param_description": "", "param_type": "String"}], "method_name": "localizedString", "method_description": "Returns the localized string for the specified calendar identifier.", "return_value": {"return_description": ["A human readable string suitable for display to the user corresponding to the given calendar."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forKey", "key"], "param_description": "", "param_type": "NSLocale.Key"}], "method_name": "object", "method_description": "Returns the value of the component corresponding to the specified key.", "return_value": {"return_description": ["The object corresponding to key."], "return_name": [""], "return_type": ["Any"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forKey", "key"], "param_description": "", "param_type": "NSLocale.Key"}, {"param_name": ["value"], "param_description": "", "param_type": "Any"}], "method_name": "displayName", "method_description": "Returns the display name for the given locale component value.", "return_value": {"return_description": ["The display name for value."], "return_name": [""], "return_type": ["String"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forLanguage", "isoLangCode"], "param_description": "", "param_type": "String"}], "method_name": "characterDirection", "method_description": "Returns the direction of the sequence of characters in a line for the specified ISO language code.", "return_value": {"return_description": ["Returns the direction in which characters appear within a line in the specified language. See NSLocale.LanguageDirection for possible values. If the appropriate direction can\u2019t be determined NSLocale.LanguageDirection.unknown is returned."], "return_name": [""], "return_type": ["NSLocale.LanguageDirection"]}, "class_name": "NSLocale"}, {"params": [{"param_name": ["forLanguage", "isoLangCode"], "param_description": "", "param_type": "String"}], "method_name": "lineDirection", "method_description": "Returns the direction of the sequence of lines for the specified ISO language code.", "return_value": {"return_description": ["Returns the direction in which lines appear in the specified language. See NSLocale.LanguageDirection for possible values. If the appropriate direction can\u2019t be determined NSLocale.LanguageDirection.unknown is returned."], "return_name": [""], "return_type": ["NSLocale.LanguageDirection"]}, "class_name": "NSLocale"}], "Vars": [{"var_name": "autoupdatingCurrent", "var_description": "A locale which tracks the user\u2019s current preferences.", "var_type": "Locale"}, {"var_name": "current", "var_description": "A locale representing the user's region settings at the time the property is read.", "var_type": "Locale"}, {"var_name": "currentLocaleDidChangeNotification", "var_description": "A notification that indicates that the user\u2019s locale changed.", "var_type": "NSNotification.Name"}, {"var_name": "system", "var_description": "A locale representing the generic root values with little localization.", "var_type": "Locale"}, {"var_name": "availableLocaleIdentifiers", "var_description": "The list of locale identifiers available on the system.", "var_type": "[String]"}, {"var_name": "isoCountryCodes", "var_description": "The list of known country codes.", "var_type": "[String]"}, {"var_name": "isoLanguageCodes", "var_description": "The list of known language codes.", "var_type": "[String]"}, {"var_name": "isoCurrencyCodes", "var_description": "The list of known currency codes.", "var_type": "[String]"}, {"var_name": "commonISOCurrencyCodes", "var_description": "A list of commonly encountered currency codes.", "var_type": "[String]"}, {"var_name": "localeIdentifier", "var_description": "The identifier for the locale.", "var_type": "String"}, {"var_name": "countryCode", "var_description": "The country code for the locale.", "var_type": "String"}, {"var_name": "languageCode", "var_description": "The language code for the locale.", "var_type": "String"}, {"var_name": "scriptCode", "var_description": "The script code for the locale.", "var_type": "String"}, {"var_name": "variantCode", "var_description": "The variant code for the locale.", "var_type": "String"}, {"var_name": "exemplarCharacterSet", "var_description": "The exemplar character set for the locale.", "var_type": "CharacterSet"}, {"var_name": "collationIdentifier", "var_description": "The collation identifier for the locale.", "var_type": "String"}, {"var_name": "collatorIdentifier", "var_description": "The collator identifier for the locale.", "var_type": "String"}, {"var_name": "usesMetricSystem", "var_description": "A Boolean value that indicates whether the locale uses the metric system.", "var_type": "Bool"}, {"var_name": "decimalSeparator", "var_description": "The decimal separator for the locale.", "var_type": "String"}, {"var_name": "groupingSeparator", "var_description": "The grouping separator for the locale.", "var_type": "String"}, {"var_name": "currencyCode", "var_description": "The currency code for the locale.", "var_type": "String"}, {"var_name": "currencySymbol", "var_description": "The currency symbol for the locale.", "var_type": "String"}, {"var_name": "calendarIdentifier", "var_description": "The calendar identifier for the locale.", "var_type": "String"}, {"var_name": "quotationBeginDelimiter", "var_description": "The begin quotation symbol for the locale.", "var_type": "String"}, {"var_name": "quotationEndDelimiter", "var_description": "The end quotation symbol for the locale.", "var_type": "String"}, {"var_name": "alternateQuotationBeginDelimiter", "var_description": "The alternate begin quotation symbol for the locale.", "var_type": "String"}, {"var_name": "alternateQuotationEndDelimiter", "var_description": "The alternate end quotation symbol for the locale.", "var_type": "String"}, {"var_name": "NSGregorianCalendar", "var_description": "Identifier for the Gregorian calendar.DeprecatedUse gregorian instead.", "var_type": "String"}, {"var_name": "NSBuddhistCalendar", "var_description": "Identifier for the Buddhist calendar.DeprecatedUse buddhist instead.", "var_type": "String"}, {"var_name": "NSChineseCalendar", "var_description": "Identifier for the Chinese calendar.DeprecatedUse chinese instead.", "var_type": "String"}, {"var_name": "NSHebrewCalendar", "var_description": "Identifier for the Hebrew calendar.DeprecatedUse hebrew instead.", "var_type": "String"}, {"var_name": "NSIslamicCalendar", "var_description": "Identifier for the Islamic calendar.DeprecatedUse islamic instead.", "var_type": "String"}, {"var_name": "NSIslamicCivilCalendar", "var_description": "Identifier for the Islamic civil calendar.DeprecatedUse islamicCivil instead.", "var_type": "String"}, {"var_name": "NSJapaneseCalendar", "var_description": "Identifier for the Japanese calendar.DeprecatedUse japanese instead.", "var_type": "String"}, {"var_name": "NSRepublicOfChinaCalendar", "var_description": "Identifier for the Republic of China (Taiwan) calendar.DeprecatedUse republicOfChina instead.", "var_type": "String"}, {"var_name": "NSPersianCalendar", "var_description": "Identifier for the Persian calendar.DeprecatedUse persian instead.", "var_type": "String"}, {"var_name": "NSIndianCalendar", "var_description": "Identifier for the Indian calendar.DeprecatedUse indian instead.", "var_type": "String"}, {"var_name": "NSISO8601Calendar", "var_description": "Identifier for the ISO8601 calendar.DeprecatedUse ISO8601 instead.", "var_type": "String"}, {"var_name": "preferredLanguages", "var_description": "An ordered list of the user's preferred languages.", "var_type": "[String]"}], "class_name": "NSLocale", "class_inherit_list": ["NSObject"], "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSSecureCoding"], "class_description": "You typically use a locale to format and interpret information about and according to the user\u2019s customs and preferences.\nYou can initialize any number of locale instances with init(localeIdentifier:) using one of the locale identifiers found in the availableLocaleIdentifiers array. However, you usually use a locale configured to match the preferences of the current user. \nUse the current property to get the locale matching the current user's preferences. If you need to be alerted when the user does make changes to region settings, register for the currentLocaleDidChangeNotification notification. Alternatively, you can use the autoupdatingCurrent property to get a locale that automatically updates with the user's configuration settings:\nYou can inspect a locale by reading its properties, as listed in Getting Information About a Locale. For properties containing a code or identifier, you can then obtain a string suitable for presentation to the user with the methods listed in Getting Display Information About a Locale. For example, you can report the user's language as a string localized in that language using the autoupdating locale obtained in the previous example:\nYou frequently use a locale in conjunction with a formatter. For example, the DateFormatter class has a locale property that ensures dates are converted to strings that match the user's expectations about date formatting. By default, this property indicates the user's current locale, which is usually the behavior you want, but you can instead set it to another locale instance to obtain a different output. See Data Formatting Guide for more information about working with formatters.\nNSLocale is toll-free bridged with its Core Foundation counterpart, CFLocale. See Toll-Free Bridging for more information on toll-free bridging.\nImportant\nThe Swift overlay to the Foundation framework provides the Locale structure, which bridges to the NSLocale class. For more information about value types, see Working with Cocoa Frameworks in Using Swift with Cocoa and Objective-C (Swift 4.1).\n", "package_name": "foundation"}