{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NotificationCenter"], "Methods": [{"return_value": {"return_type": ["DistributedNotificationCenter"], "return_name": [""], "return_description": ["Default distributed notification center for the computer."]}, "method_name": "`default`", "class_name": "DistributedNotificationCenter", "method_description": "Returns the default distributed notification center, representing the local notification center for the computer.", "params": []}, {"return_value": {"return_type": ["DistributedNotificationCenter"], "return_name": [""], "return_description": ["Distributed notification center for notificationCenterType."]}, "method_name": "forType", "class_name": "DistributedNotificationCenter", "method_description": "Returns the distributed notification center for a particular notification center type.", "params": [{"param_type": "DistributedNotificationCenter.CenterType", "param_name": ["notificationCenterType"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "addObserver", "class_name": "DistributedNotificationCenter", "method_description": "Adds an entry to the notification center's dispatch table with an observer, a selector, and an optional notification name and sender.", "params": [{"param_type": "Any", "param_name": ["observer"], "param_description": ""}, {"param_type": "Selector", "param_name": ["selector", "aSelector"], "param_description": ""}, {"param_type": "NSNotification.Name", "param_name": ["name", "aName"], "param_description": ""}, {"param_type": "String", "param_name": ["object", "anObject"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "addObserver", "class_name": "DistributedNotificationCenter", "method_description": "Adds an entry to the receiver\u2019s dispatch table with a specific observer and suspended-notifications behavior, and optional notification name and sender.", "params": [{"param_type": "Any", "param_name": ["observer"], "param_description": ""}, {"param_type": "Selector", "param_name": ["selector"], "param_description": ""}, {"param_type": "NSNotification.Name", "param_name": ["name"], "param_description": ""}, {"param_type": "String", "param_name": ["object"], "param_description": ""}, {"param_type": "DistributedNotificationCenter.SuspensionBehavior", "param_name": ["suspensionBehavior"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "removeObserver", "class_name": "DistributedNotificationCenter", "method_description": "Removes matching entries from the receiver\u2019s dispatch table.", "params": [{"param_type": "Any", "param_name": ["observer"], "param_description": ""}, {"param_type": "NSNotification.Name", "param_name": ["name", "aName"], "param_description": ""}, {"param_type": "String", "param_name": ["object", "anObject"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "post", "class_name": "DistributedNotificationCenter", "method_description": "Creates a notification, and posts it to the receiver.", "params": [{"param_type": "NSNotification.Name", "param_name": ["name", "aName"], "param_description": ""}, {"param_type": "String", "param_name": ["object", "anObject"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "post", "class_name": "DistributedNotificationCenter", "method_description": "Creates a notification with information, and posts it to the receiver.", "params": [{"param_type": "NSNotification.Name", "param_name": ["name", "aName"], "param_description": ""}, {"param_type": "String", "param_name": ["object", "anObject"], "param_description": ""}, {"param_type": "Any]", "param_name": ["userInfo", "aUserInfo"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "postNotificationName", "class_name": "DistributedNotificationCenter", "method_description": "Creates a notification with information and an immediate-delivery specifier, and posts it to the receiver.", "params": [{"param_type": "NSNotification.Name", "param_name": ["name"], "param_description": ""}, {"param_type": "String", "param_name": ["object"], "param_description": ""}, {"param_type": "Any]", "param_name": ["userInfo"], "param_description": ""}, {"param_type": "Bool", "param_name": ["deliverImmediately"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "postNotificationName", "class_name": "DistributedNotificationCenter", "method_description": "Creates a notification with information, and posts it to the receiver.", "params": [{"param_type": "NSNotification.Name", "param_name": ["name"], "param_description": ""}, {"param_type": "String", "param_name": ["object"], "param_description": ""}, {"param_type": "Any]", "param_name": ["userInfo"], "param_description": ""}, {"param_type": "DistributedNotificationCenter.Options", "param_name": ["options"], "param_description": ""}]}], "Vars": [{"var_type": "Bool", "var_description": "Suspends or resumes notification delivery.", "var_name": "suspended"}], "subclass_list": [], "class_description": "A DistributedNotificationCenter instance broadcasts NSNotification objects to objects in other tasks that have registered for the notification with their task\u2019s default distributed notification center.\nNotification dispatch table. See \u201cClass at a Glance\u201d > \u201cPrincipal Attributes\u201d in NotificationCenter for information about the dispatch table.\nIn addition to the notification name and sender, dispatch table entries for distributed notification centers specify when the notification center delivers notifications to its observers. See the postNotificationName(_:object:userInfo:deliverImmediately:) method, Suspending and Resuming Notification Delivery, and DistributedNotificationCenter.SuspensionBehavior for details.\nAccesses the default distributed notification center.\nRegisters an object to receive a notification with a specified behavior when notification delivery is suspended.\nCreates and posts a notification.\nSpecifies that an object no longer wants to receive certain notifications.\nEach task has a default distributed notification center that you access with the default() class method. There may be different types of distributed notification centers. Currently there is a single type\u2014NSLocalNotificationCenterType. This type of distributed notification center handles notifications that can be sent between tasks on a single computer. For communication between tasks on different computers, use Distributed Objects Programming Topics.\nPosting a distributed notification is an expensive operation. The notification gets sent to a system-wide server that distributes it to all the tasks that have objects registered for distributed notifications. The latency between posting the notification and the notification\u2019s arrival in another task is unbounded. In fact, when too many notifications are posted and the server\u2019s queue fills up, notifications may be dropped.\nDistributed notifications are delivered via a task\u2019s run loop. A task must be running a run loop in one of the \u201ccommon\u201d modes, such as NSDefaultRunLoopMode, to receive a distributed notification. For multithreaded applications running in macOS 10.3 and later, distributed notifications are always delivered to the main thread. For multithreaded applications running in OS X v10.2.8 and earlier, notifications are delivered to the thread that first used the distributed notifications API, which in most cases is the main thread.\nImportant\nNSDistributedNotificationCenter does not implement a secure communications protocol. When using distributed notifications, your app should treat any data passed in the notification as untrusted. See Security Overview for general guidance on secure coding practices.\nNote\nNSDistributedNotificationCenter objects should not be used to send notifications between threads within the same task. Use Distributed Objects Programming Topics or the NSObject method performSelector(onMainThread:with:waitUntilDone:), instead. You can also setup an Port object to receive and distribute messages from other threads.\n", "class_name": "DistributedNotificationCenter"}