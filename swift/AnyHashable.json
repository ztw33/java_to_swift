{"class_inherit_list": [], "Vars": [{"var_description": "The value wrapped by this instance.", "var_type": "Any", "var_name": "base"}, {"var_description": "", "var_type": "Mirror", "var_name": "customMirror"}, {"var_description": "", "var_type": "String", "var_name": "debugDescription"}, {"var_description": "", "var_type": "String", "var_name": "description"}, {"var_description": "The hash value.", "var_type": "Int", "var_name": "hashValue"}], "class_name": "AnyHashable", "interface_list": ["CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable"], "subclass_list": [], "class_description": "The AnyHashable type forwards equality comparisons and hashing operations to an underlying hashable value, hiding its specific underlying type.\nYou can store mixed-type keys in dictionaries and other collections that require Hashable conformance by wrapping mixed-type keys in AnyHashable instances:\n", "Methods": [{"return_value": {"return_description": [], "return_name": [], "return_type": []}, "method_description": "Hashes the essential components of this value by feeding them into the given hasher.", "method_name": "hash", "class_name": "AnyHashable", "params": [{"param_description": "The hasher to use when combining the components of this instance.", "param_type": "inout Hasher", "param_name": ["into", "hasher"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether two values are not equal.", "method_name": "!=", "class_name": "AnyHashable", "params": [{"param_description": "A value to compare.", "param_type": "AnyHashable", "param_name": ["lhs"]}, {"param_description": "Another value to compare.", "param_type": "AnyHashable", "param_name": ["rhs"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether two type-erased hashable instances wrap the same type and value.", "method_name": "==", "class_name": "AnyHashable", "params": [{"param_description": "A type-erased hashable value.", "param_type": "AnyHashable", "param_name": ["lhs"]}, {"param_description": "Another type-erased hashable value.", "param_type": "AnyHashable", "param_name": ["rhs"]}]}], "package_name": "swift"}