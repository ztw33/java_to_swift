{"class_inherit_list": [], "Vars": [{"var_description": "The actual number of elements that can be stored in this object.", "var_type": "Int", "var_name": "capacity"}, {"var_description": "The stored Header instance.", "var_type": "Header", "var_name": "header"}, {"var_description": "Returns the object instance being used for storage.", "var_type": "AnyObject", "var_name": "buffer"}], "class_name": "ManagedBufferPointer", "interface_list": ["Equatable"], "subclass_list": [], "class_description": "For most purposes, the ManagedBuffer class works fine for this purpose, and can simply be used on its own.  However, in cases where objects of various different classes must serve as storage, ManagedBufferPointer is needed.\nA valid buffer class is non-@objc, with no declared stored properties.  Its deinit must destroy its stored Header and any constructed Elements.\n", "Methods": [{"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns true iff self holds the only strong reference to its buffer.", "method_name": "isUniqueReference", "class_name": "ManagedBufferPointer", "params": []}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["R rethrows -> R"]}, "method_description": "Call body with an UnsafeMutablePointer to the Element storage.", "method_name": "withUnsafeMutablePointerToElements", "class_name": "ManagedBufferPointer", "params": [{"param_description": "", "param_type": "(UnsafeMutablePointer<Element>", "param_name": ["body"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["R rethrows -> R"]}, "method_description": "Call body with an UnsafeMutablePointer to the stored Header.", "method_name": "withUnsafeMutablePointerToHeader", "class_name": "ManagedBufferPointer", "params": [{"param_description": "", "param_type": "(UnsafeMutablePointer<Header>", "param_name": ["body"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["R rethrows -> R"]}, "method_description": "Call body with UnsafeMutablePointers to the stored Header and raw Element storage.", "method_name": "withUnsafeMutablePointers", "class_name": "ManagedBufferPointer", "params": [{"param_description": "", "param_type": "(UnsafeMutablePointer<Header>", "param_name": ["body"]}, {"param_description": "", "param_type": "UnsafeMutablePointer<Element>", "param_name": ["UnsafeMutablePointer<Element>"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether two values are not equal.", "method_name": "!=", "class_name": "ManagedBufferPointer", "params": [{"param_description": "A value to compare.", "param_type": "ManagedBufferPointer<Header", "param_name": ["lhs"]}, {"param_description": "", "param_type": "Element>", "param_name": ["Element>"]}, {"param_description": "Another value to compare.", "param_type": "ManagedBufferPointer<Header", "param_name": ["rhs"]}, {"param_description": "", "param_type": "Element>", "param_name": ["Element>"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "method_description": "", "method_name": "==", "class_name": "ManagedBufferPointer", "params": [{"param_description": "", "param_type": "ManagedBufferPointer<Header", "param_name": ["lhs"]}, {"param_description": "", "param_type": "Element>", "param_name": ["Element>"]}, {"param_description": "", "param_type": "ManagedBufferPointer<Header", "param_name": ["rhs"]}, {"param_description": "", "param_type": "Element>", "param_name": ["Element>"]}]}], "package_name": "swift"}