{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCoding", "NSCopying"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "raise", "class_name": "NSException", "method_description": "Creates and raises an exception with the specified name, reason, and arguments.", "params": [{"param_type": "NSExceptionName", "param_name": ["name"], "param_description": ""}, {"param_type": "String", "param_name": ["format"], "param_description": ""}, {"param_type": "CVaListPointer", "param_name": ["arguments", "argList"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "raise", "class_name": "NSException", "method_description": "Raises the receiver, causing program flow to jump to the local exception handler.", "params": []}, {"return_value": {"return_type": ["NSException -> Void"], "return_name": [""], "return_description": ["A pointer to the top-level error-handling function where you can perform last-minute logging before the program terminates."]}, "method_name": "NSGetUncaughtExceptionHandler", "class_name": "NSException", "method_description": "Returns the top-level error handler.", "params": []}, {"return_value": {"return_type": ["Void"], "return_name": [""], "return_description": []}, "method_name": "NSSetUncaughtExceptionHandler", "class_name": "NSException", "method_description": "Changes the top-level error handler.", "params": [{"param_type": "((NSException", "param_name": [""], "param_description": ""}]}], "Vars": [{"var_type": "NSExceptionName", "var_description": "A string used to uniquely identify the receiver.", "var_name": "name"}, {"var_type": "String", "var_description": "A string containing a \u201chuman-readable\u201d reason for the receiver.", "var_name": "reason"}, {"var_type": "[AnyHashable", "var_description": "A dictionary containing application-specific data pertaining to the receiver.", "var_name": "userInfo"}, {"var_type": "[NSNumber]", "var_description": "The call return addresses related to a raised exception.", "var_name": "callStackReturnAddresses"}, {"var_type": "[String]", "var_description": "An array containing the current call stack symbols.", "var_name": "callStackSymbols"}], "subclass_list": [], "class_description": "Use NSException to implement exception handling. An exception is a special condition that interrupts the normal flow of program execution. Each application can interrupt the program for different reasons. For example, one application might interpret saving a file in a directory that is write-protected as an exception. In this sense, the exception is equivalent to an error. Another application might interpret the user\u2019s key-press (for example, Control-C) as an exception: an indication that a long-running process should abort.\n", "class_name": "NSException"}