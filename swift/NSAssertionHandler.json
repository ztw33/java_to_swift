{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSObject"], "Methods": [], "Vars": [{"var_type": "NSAssertionHandler", "var_description": "Returns the NSAssertionHandler object associated with the current thread.", "var_name": "current"}], "subclass_list": [], "class_description": "NSAssertionHandler objects are automatically created to handle false assertions. Assertion macros, such as NSAssert and NSCAssert, are used to evaluate a condition, and if the condition evaluates to false, the macros pass a string to an NSAssertionHandler object describing the failure. Each thread has its own NSAssertionHandler object. When invoked, an assertion handler prints an error message that includes the method and class (or function) containing the assertion and raises an NSInternalInconsistencyException.\nYou create assertions only using the assertion macros\u2014you rarely need to invoke NSAssertionHandler methods directly. The macros for use inside methods and functions send handleFailureInMethod:object:file:lineNumber:description: and handleFailureInFunction:file:lineNumber:description: messages respectively to the current assertion handler. The assertion handler for the current thread is obtained using the current class method. See NSAssertionHandlerKey if you need to customize the behavior of NSAssertionHandler.\n", "class_name": "NSAssertionHandler"}