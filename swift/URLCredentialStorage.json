{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["URLCredential"], "return_name": [""], "return_description": ["The default credential for space or nil if no default has been set."]}, "method_name": "defaultCredential", "class_name": "URLCredentialStorage", "method_description": "Returns the default credential for the specified protection space.", "params": [{"param_type": "URLProtectionSpace", "param_name": ["for", "space"], "param_description": ""}]}, {"return_value": {"return_type": ["Void"], "return_name": [""], "return_description": []}, "method_name": "getDefaultCredential", "class_name": "URLCredentialStorage", "method_description": "Gets the default credential for the specified protection space, which is being accessed by the given task, and passes it to the provided completion handler.", "params": [{"param_type": "URLProtectionSpace", "param_name": ["for", "space"], "param_description": ""}, {"param_type": "URLSessionTask", "param_name": ["task"], "param_description": ""}, {"param_type": "@escaping (URLCredential", "param_name": ["completionHandler"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "setDefaultCredential", "class_name": "URLCredentialStorage", "method_description": "Sets the default credential for a specified protection space.", "params": [{"param_type": "URLCredential", "param_name": ["credential"], "param_description": ""}, {"param_type": "URLProtectionSpace", "param_name": ["for", "space"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "setDefaultCredential", "class_name": "URLCredentialStorage", "method_description": "Sets the default credential for a given protection space, which is being accessed by the given task.", "params": [{"param_type": "URLCredential", "param_name": ["credential"], "param_description": ""}, {"param_type": "URLProtectionSpace", "param_name": ["for", "protectionSpace"], "param_description": ""}, {"param_type": "URLSessionTask", "param_name": ["task"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "remove", "class_name": "URLCredentialStorage", "method_description": "Removes the specified credential from the credential storage for the specified protection space.", "params": [{"param_type": "URLCredential", "param_name": ["credential"], "param_description": ""}, {"param_type": "URLProtectionSpace", "param_name": ["for", "space"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "remove", "class_name": "URLCredentialStorage", "method_description": "Removes the specified credential from the credential storage for the specified protection space using the given options.", "params": [{"param_type": "URLCredential", "param_name": ["credential"], "param_description": ""}, {"param_type": "URLProtectionSpace", "param_name": ["for", "space"], "param_description": ""}, {"param_type": "Any]", "param_name": ["options"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "remove", "class_name": "URLCredentialStorage", "method_description": "Removes the specified credential from the credential storage for the specified protection space, on behalf of the given task and using the given options.", "params": [{"param_type": "URLCredential", "param_name": ["credential"], "param_description": ""}, {"param_type": "URLProtectionSpace", "param_name": ["for", "protectionSpace"], "param_description": ""}, {"param_type": "Any]", "param_name": ["options"], "param_description": ""}, {"param_type": "URLSessionTask", "param_name": ["task"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "set", "class_name": "URLCredentialStorage", "method_description": "Adds a credential to the credential storage for the specified protection space. ", "params": [{"param_type": "URLCredential", "param_name": ["credential"], "param_description": ""}, {"param_type": "URLProtectionSpace", "param_name": ["for", "space"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "set", "class_name": "URLCredentialStorage", "method_description": "Adds a credential to the credential storage for the specified protection space, on behalf of the specified task.", "params": [{"param_type": "URLCredential", "param_name": ["credential"], "param_description": ""}, {"param_type": "URLProtectionSpace", "param_name": ["for", "protectionSpace"], "param_description": ""}, {"param_type": "URLSessionTask", "param_name": ["task"], "param_description": ""}]}, {"return_value": {"return_type": ["URLCredential]"], "return_name": [["[String"]], "return_description": ["A dictionary containing the credentials for the specified protection space. The dictionary\u2019s keys are user name strings, and each value is the corresponding URLCredential."]}, "method_name": "credentials", "class_name": "URLCredentialStorage", "method_description": "Returns a dictionary containing the credentials for the specified protection space.", "params": [{"param_type": "URLProtectionSpace", "param_name": ["for", "space"], "param_description": ""}]}, {"return_value": {"return_type": ["Void"], "return_name": [""], "return_description": []}, "method_name": "getCredentials", "class_name": "URLCredentialStorage", "method_description": "Gets a dictionary containing the credentials for the specified protection space, on behalf of the given task, and passes the dictionary to the provided completion handler.", "params": [{"param_type": "URLProtectionSpace", "param_name": ["for", "protectionSpace"], "param_description": ""}, {"param_type": "URLSessionTask", "param_name": ["task"], "param_description": ""}, {"param_type": "URLCredential]", "param_name": ["completionHandler"], "param_description": ""}]}], "Vars": [{"var_type": "URLCredentialStorage", "var_description": "The shared URL credential storage instance.", "var_name": "shared"}, {"var_type": "String", "var_description": "The corresponding value is an NSNumber object representing a Boolean value that indicates whether credentials which contain the URLCredential.Persistence.synchronizable attribute should be removed.", "var_name": "NSURLCredentialStorageRemoveSynchronizableCredentials"}, {"var_type": "[URLProtectionSpace", "var_description": "The credentials for all available protection spaces.", "var_name": "allCredentials"}, {"var_type": "NSNotification.Name", "var_description": "A notification posted when the set of stored credentials changes.", "var_name": "NSURLCredentialStorageChanged"}], "subclass_list": [], "class_description": "The shared cache stores and retrieves instances of URLCredential. You can store password-based credentials permanently, based on the URLCredential.Persistence they were created with. Certificate-based credentials are never stored permanently.\nThe URLCredentialStorage class is meant to be used as-is, but you can subclass it if you have specific needs, such as screening which credentials are stored.\nWhen overriding methods of this class, be aware that methods that take a task parameter are preferred to equivalent methods that do not. Therefore, you should override the task-based methods when subclassing, as follows:\nSetting credentials \u2014 Override set(_:for:task:) instead of or in addition to set(_:for:).\nGetting credentials \u2014 Override getCredentials(for:task:completionHandler:) instead of or in addition to credentials(for:).\nRemoving credentials \u2014 Override remove(_:for:options:task:) instead of or in addition to remove(_:for:options:) and remove(_:for:).\nSetting default credentials \u2014 Override setDefaultCredential(_:for:task:) instead of or in addition to setDefaultCredential(_:for:).\nGetting default credentials \u2014 Override getDefaultCredential(for:task:completionHandler:) instead of or in addition to defaultCredential(for:).\n\n", "class_name": "URLCredentialStorage"}