{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable", "NSCopying", "NSSecureCoding"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["ComparisonResult"], "return_name": [""], "return_description": ["ComparisonResult.orderedAscending if object1 is less than object2, ComparisonResult.orderedDescending if object1 is greater than object2, or ComparisonResult.orderedSame if object1 is equal to object2."]}, "method_name": "compare", "class_name": "NSSortDescriptor", "method_description": "Returns a comparison result value that indicates the sort order of two objects.", "params": [{"param_type": "Any", "param_name": ["object1"], "param_description": ""}, {"param_type": "Any", "param_name": ["to", "object2"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "allowEvaluation", "class_name": "NSSortDescriptor", "method_description": "Forces a sort descriptor that was securely decoded to allow evaluation.", "params": []}], "Vars": [{"var_type": "Bool", "var_description": "A Boolean value that indicates whether the receiver specifies sorting in ascending order.", "var_name": "ascending"}, {"var_type": "String", "var_description": "The key that specifies the property to be compared during sorting.", "var_name": "key"}, {"var_type": "AnyKeyPath", "var_description": "The key path that specifies the property to be compared during sorting.", "var_name": "keyPath"}, {"var_type": "Selector", "var_description": "The selector used when comparing objects.", "var_name": "selector"}, {"var_type": "Comparator", "var_description": "The comparator for the sort descriptor.", "var_name": "comparator"}, {"var_type": "Any", "var_description": "Returns a sort descriptor with the sort order reversed.", "var_name": "reversedSortDescriptor"}], "subclass_list": [], "class_description": "You construct instances of NSSortDescriptor by specifying the key path of the property to be compared and the order of the sort (ascending or descending). Optionally, you can also specify a selector to use to perform the comparison, which allows you to specify other comparison selectors such as localizedStandardCompare(_:) and localizedCaseInsensitiveCompare(_:). Sorting raises an exception if the objects to be sorted do not respond to the sort descriptor\u2019s comparison selector. \nYou can use sort descriptors to, for example:\nSorting an array (an instance of NSArray or NSMutableArray\u2014see sortedArray(using:) and sort(using:))\nComparing two objects directly (see compare(_:to:))\nSpecifying the order of objects returned from a Core Data fetch request (see sortDescriptors)\n", "class_name": "NSSortDescriptor"}