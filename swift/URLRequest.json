{"package_name": "foundation", "interface_list": ["CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable", "ReferenceConvertible"], "class_inherit_list": [], "Methods": [{"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "addValue", "class_name": "URLRequest", "method_description": "Adds one value to the header field.", "params": [{"param_type": "String", "param_name": ["value"], "param_description": ""}, {"param_type": "String", "param_name": ["forHTTPHeaderField", "field"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "setValue", "class_name": "URLRequest", "method_description": "Sets a value for a header field.", "params": [{"param_type": "String", "param_name": ["value"], "param_description": ""}, {"param_type": "String", "param_name": ["forHTTPHeaderField", "field"], "param_description": ""}]}, {"return_value": {"return_type": ["String"], "return_name": [""], "return_description": ["The value associated with the header field field,  or nil if there is no corresponding header field."]}, "method_name": "value", "class_name": "URLRequest", "method_description": "Retrieves a header value.", "params": [{"param_type": "String", "param_name": ["forHTTPHeaderField", "field"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "!=", "class_name": "URLRequest", "method_description": "Returns a Boolean value indicating whether two values are not equal.", "params": [{"param_type": "URLRequest", "param_name": ["lhs"], "param_description": ""}, {"param_type": "URLRequest", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "==", "class_name": "URLRequest", "method_description": "Indicates whether two URL requests are the same.", "params": [{"param_type": "URLRequest", "param_name": ["lhs"], "param_description": ""}, {"param_type": "URLRequest", "param_name": ["rhs"], "param_description": ""}]}], "Vars": [{"var_type": "URLRequest.CachePolicy", "var_description": "The request\u2019s cache policy.", "var_name": "cachePolicy"}, {"var_type": "String", "var_description": "The HTTP request method.", "var_name": "httpMethod"}, {"var_type": "URL", "var_description": "The URL of the request.", "var_name": "url"}, {"var_type": "Data", "var_description": "The data sent as the message body of a request, such as for an HTTP POST request.", "var_name": "httpBody"}, {"var_type": "InputStream", "var_description": "The stream used to deliver the HTTP body.", "var_name": "httpBodyStream"}, {"var_type": "URL", "var_description": "The main document URL associated with this request.", "var_name": "mainDocumentURL"}, {"var_type": "[String", "var_description": "A dictionary containing all the request\u2019s HTTP header fields.", "var_name": "allHTTPHeaderFields"}, {"var_type": "TimeInterval", "var_description": "The timeout interval of the request.", "var_name": "timeoutInterval"}, {"var_type": "Bool", "var_description": "A Boolean value indicating whether cookies will be sent with and set for this request.", "var_name": "httpShouldHandleCookies"}, {"var_type": "Bool", "var_description": "A Boolean value indicating whether the request should transmit before the previous response is received.", "var_name": "httpShouldUsePipelining"}, {"var_type": "Bool", "var_description": "A Boolean value indicating whether the request is allowed to use the built-in cellular radios to satisfy the request.", "var_name": "allowsCellularAccess"}, {"var_type": "URLRequest.NetworkServiceType", "var_description": "The service type associated with this request.", "var_name": "networkServiceType"}, {"var_type": "String", "var_description": "A textual description of the request.", "var_name": "description"}, {"var_type": "String", "var_description": "A textual description of the request suitable for debugging.", "var_name": "debugDescription"}, {"var_type": "Mirror", "var_description": "A mirror that reflects the request.", "var_name": "customMirror"}, {"var_type": "Int", "var_description": "The computed hash value for the request.", "var_name": "hashValue"}], "subclass_list": [], "class_description": "URLRequest encapsulates two basic data elements of a load request: the URL to load, and the policy to use when consulting the URL content cache made available by the implementation.\nImportant\nThis type serves only to encapsulate information about a URL request. You must use other classes such as URLSession to send these requests to a server. See Fetching Website Data into Memory and Uploading Data to a Website for an introduction to these techniques.\n\n\n\n", "class_name": "URLRequest"}