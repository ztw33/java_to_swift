{"package_name": "foundation", "interface_list": ["Comparable", "CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "ReferenceConvertible"], "class_inherit_list": [], "Methods": [{"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "convert", "class_name": "Measurement", "method_description": "Converts the measurement to the specified unit.", "params": [{"param_type": "UnitType", "param_name": ["to", "otherUnit"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": ["A converted measurement."]}, "method_name": "converted", "class_name": "Measurement", "method_description": "Returns a new measurement created by converting to the specified unit.", "params": [{"param_type": "UnitType", "param_name": ["to", "otherUnit"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "!=", "class_name": "Measurement", "method_description": "Returns a Boolean value indicating whether two values are not equal.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": ["A measurement of value lhs * rhs.value with the same unit as rhs."]}, "method_name": "*", "class_name": "Measurement", "method_description": "Multiply a scalar value by a measurement.", "params": [{"param_type": "Double", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": ["A measurement of value lhs.value * rhs with the same unit as lhs."]}, "method_name": "*", "class_name": "Measurement", "method_description": "Multiply a measurement by a scalar value.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Double", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["PartialRangeUpTo<Measurement<UnitType>>"], "return_name": [""], "return_description": []}, "method_name": "..", "class_name": "Measurement", "method_description": "Returns a partial range up to, but not including, its upper bound.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["maximum"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": ["A measurement of value lhs / rhs.value with the same unit as rhs."]}, "method_name": "/", "class_name": "Measurement", "method_description": "Divide a scalar value by a measurement.", "params": [{"param_type": "Double", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": ["A measurement of value lhs.value / rhs with the same unit as lhs."]}, "method_name": "/", "class_name": "Measurement", "method_description": "Divide a measurement by a scalar value.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Double", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the measurements can be compared and the lhs is less than the rhs converted value."]}, "method_name": "RightHandSideType>", "class_name": "Measurement", "method_description": "Compare two measurements of the same Unit.", "params": [{"param_type": "Measurement<Unit>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<Unit>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "", "class_name": "Measurement", "method_description": "Returns a Boolean value indicating whether the value of the first argument is less than or equal to that of the second argument.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the measurements are equal."]}, "method_name": "RightHandSideType>", "class_name": "Measurement", "method_description": "Compare two measurements of the same Dimension.", "params": [{"param_type": "Measurement<Unit>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<Unit>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": ">", "class_name": "Measurement", "method_description": "Returns a Boolean value indicating whether the value of the first argument is greater than that of the second argument.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if lhs is greater than or equal to rhs; otherwise, false."]}, "method_name": ">=", "class_name": "Measurement", "method_description": "Returns a Boolean value indicating whether the value of the first argument is greater than or equal to that of the second argument.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the measurements can be compared and the lhs is less than the rhs converted value."]}, "method_name": "RightHandSideType>", "class_name": "Measurement", "method_description": "Compare two measurements of the same Unit.", "params": [{"param_type": "Measurement<Unit>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<Unit>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the measurements are equal."]}, "method_name": "RightHandSideType>", "class_name": "Measurement", "method_description": "Compare two measurements of the same Dimension.", "params": [{"param_type": "Measurement<Unit>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<Unit>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "encode", "class_name": "Measurement", "method_description": "", "params": [{"param_type": "Encoder", "param_name": ["to", "encoder"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": []}, "method_name": "+", "class_name": "Measurement", "method_description": "", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": []}, "method_name": "+", "class_name": "Measurement", "method_description": "", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": []}, "method_name": "-", "class_name": "Measurement", "method_description": "", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Measurement<UnitType>"], "return_name": [""], "return_description": []}, "method_name": "-", "class_name": "Measurement", "method_description": "", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["lhs"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["PartialRangeFrom<Measurement<UnitType>>"], "return_name": [""], "return_description": []}, "method_name": "...", "class_name": "Measurement", "method_description": "Returns a partial range extending upward from a lower bound.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["minimum"], "param_description": ""}]}, {"return_value": {"return_type": ["PartialRangeThrough<Measurement<UnitType>>"], "return_name": [""], "return_description": []}, "method_name": "...", "class_name": "Measurement", "method_description": "Returns a partial range up to, and including, its upper bound.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["maximum"], "param_description": ""}]}, {"return_value": {"return_type": ["ClosedRange<Measurement<UnitType>>"], "return_name": [""], "return_description": []}, "method_name": "...", "class_name": "Measurement", "method_description": "Returns a closed range that contains both of its bounds.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["minimum"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["maximum"], "param_description": ""}]}, {"return_value": {"return_type": ["Range<Measurement<UnitType>>"], "return_name": [""], "return_description": []}, "method_name": "..", "class_name": "Measurement", "method_description": "Returns a half-open range that contains its lower bound but not its upper bound.", "params": [{"param_type": "Measurement<UnitType>", "param_name": ["minimum"], "param_description": ""}, {"param_type": "Measurement<UnitType>", "param_name": ["maximum"], "param_description": ""}]}], "Vars": [{"var_type": "UnitType", "var_description": "The unit component of the Measurement.", "var_name": "unit"}, {"var_type": "Double", "var_description": "The value component of the Measurement.", "var_name": "value"}, {"var_type": "String", "var_description": "A textual description of the measurement.", "var_name": "description"}, {"var_type": "String", "var_description": "A textual description of the measurement suitable for debugging.", "var_name": "debugDescription"}, {"var_type": "Mirror", "var_description": "A mirror that reflects the date interval.", "var_name": "customMirror"}, {"var_type": "Int", "var_description": "The computed hash value for the date interval.", "var_name": "hashValue"}], "subclass_list": [], "class_description": "Measurements support a large set of operators, including +, -, *, /, and a full set of comparison operators.\n", "class_name": "Measurement"}