{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSURLRequest"], "Methods": [{"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "addValue", "class_name": "NSMutableURLRequest", "method_description": "Adds an HTTP header to the request\u2019s HTTP header dictionary.", "params": [{"param_type": "String", "param_name": ["value"], "param_description": ""}, {"param_type": "String", "param_name": ["forHTTPHeaderField", "field"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "setValue", "class_name": "NSMutableURLRequest", "method_description": "Sets the specified HTTP header field.", "params": [{"param_type": "String", "param_name": ["value"], "param_description": ""}, {"param_type": "String", "param_name": ["forHTTPHeaderField", "field"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "bind", "class_name": "NSMutableURLRequest", "method_description": "Binds a URL request to the network interface associated with the hotspot helper command instance.", "params": [{"param_type": "NEHotspotHelperCommand", "param_name": ["to", "command"], "param_description": ""}]}], "Vars": [{"var_type": "NSURLRequest.CachePolicy", "var_description": "The request\u2019s cache policy.", "var_name": "cachePolicy"}, {"var_type": "String", "var_description": "The HTTP request method.", "var_name": "httpMethod"}, {"var_type": "URL", "var_description": "The URL being requested.", "var_name": "url"}, {"var_type": "Data", "var_description": "The request body.", "var_name": "httpBody"}, {"var_type": "InputStream", "var_description": "The request body as an input stream.", "var_name": "httpBodyStream"}, {"var_type": "URL", "var_description": "The main document URL.", "var_name": "mainDocumentURL"}, {"var_type": "[String", "var_description": "The request\u2019s header fields.", "var_name": "allHTTPHeaderFields"}, {"var_type": "TimeInterval", "var_description": "The request\u2019s timeout interval, in seconds.", "var_name": "timeoutInterval"}, {"var_type": "Bool", "var_description": "A Boolean value that indicates whether the request should use the default cookie handling for the request.", "var_name": "httpShouldHandleCookies"}, {"var_type": "Bool", "var_description": "A Boolean value that indicates whether the request can continue transmitting data before receiving a response from an earlier transmission.", "var_name": "httpShouldUsePipelining"}, {"var_type": "Bool", "var_description": "A Boolean value that indicates whether a connection can use the device\u2019s cellular network (if present).", "var_name": "allowsCellularAccess"}, {"var_type": "NSURLRequest.NetworkServiceType", "var_description": "The network service type of the connection.", "var_name": "networkServiceType"}], "subclass_list": [], "class_description": "NSMutableURLRequest is a subclass of NSURLRequest that enables you to mutate a single request object for a series of URL load requests instead of creating an immutable NSURLRequest object for each load.\nImportant\nThis class only encapsulates information about a URL request. You must use other classes such as URLSession to send these requests to a server. See Fetching Website Data into Memory and Uploading Data to a Website for an introduction to these techniques.\nNSMutableURLRequest, like NSURLRequest, is designed to be extended to support additional protocols by creating extensions that provide accessor methods for your own protocol-specific properties. Those methods can get and set the actual values by calling the URLProtocol methods property(forKey:in:) and setProperty(_:forKey:in:).\nThe URLSession, NSURLConnection, and NSURLDownload classes make a deep copy of each NSMutableURLRequest object passed to their initializers and task creation methods.\nImportant\nThe Swift overlay to the Foundation framework provides the URLRequest structure, which bridges to the NSMutableURLRequest class and its immutable superclass, NSURLRequest. For more information about value types, see Working with Cocoa Frameworks in Using Swift with Cocoa and Objective-C (Swift 4.1).\nThe URL Loading System is designed to handle various aspects of the HTTP protocol for you. As a result, you should not modify the following headers using the addValue(_:forHTTPHeaderField:) or setValue(_:forHTTPHeaderField:) methods:\nAuthorization\nConnection\nHost\nProxy-Authenticate\nProxy-Authorization\nWWW-Authenticate\n", "class_name": "NSMutableURLRequest"}