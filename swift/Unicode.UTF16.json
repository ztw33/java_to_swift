{"class_inherit_list": [], "Vars": [{"var_description": "", "var_type": "Unicode.UTF16.EncodedScalar", "var_name": "encodedReplacementCharacter"}], "class_name": "Unicode.UTF16", "interface_list": ["UnicodeCodec"], "subclass_list": [], "class_description": "", "Methods": [{"return_value": {"return_description": ["A UnicodeDecodingResult instance, representing the next Unicode scalar, an indication of an error, or an indication that the UTF sequence has been fully decoded."], "return_name": [""], "return_type": ["UnicodeDecodingResult"]}, "method_description": "Starts or continues decoding a UTF-16 sequence.", "method_name": "decode", "class_name": "Unicode.UTF16", "params": [{"param_description": "An iterator of code units to be decoded. input must be the same iterator instance in repeated calls to this method. Do not advance the iterator or any copies of the iterator outside this method.", "param_type": "inout IteratorProtocol", "param_name": ["input"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Unicode.Scalar"]}, "method_description": "", "method_name": "decode", "class_name": "Unicode.UTF16", "params": [{"param_description": "", "param_type": "Unicode.UTF16.EncodedScalar", "param_name": ["source"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Unicode.UTF16.EncodedScalar"]}, "method_description": "", "method_name": "encode", "class_name": "Unicode.UTF16", "params": [{"param_description": "", "param_type": "Unicode.Scalar", "param_name": ["source"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Void"]}, "method_description": "Encodes a Unicode scalar as a series of code units by calling the given closure on each code unit.", "method_name": "encode", "class_name": "Unicode.UTF16", "params": [{"param_description": "The Unicode scalar value to encode.", "param_type": "Unicode.Scalar", "param_name": ["input"]}, {"param_description": "A closure that processes one code unit argument at a time.", "param_type": "(Unicode.UTF16.CodeUnit", "param_name": ["into", "processCodeUnit"]}]}, {"return_value": {"return_description": ["true if x is a high-surrogate code unit; otherwise, false."], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the specified code unit is a high-surrogate code unit.", "method_name": "isLeadSurrogate", "class_name": "Unicode.UTF16", "params": [{"param_description": "A UTF-16 code unit.", "param_type": "Unicode.UTF16.CodeUnit", "param_name": ["x"]}]}, {"return_value": {"return_description": ["true if x is a low-surrogate code unit; otherwise, false."], "return_name": [""], "return_type": ["Bool"]}, "method_description": "Returns a Boolean value indicating whether the specified code unit is a low-surrogate code unit.", "method_name": "isTrailSurrogate", "class_name": "Unicode.UTF16", "params": [{"param_description": "A UTF-16 code unit.", "param_type": "Unicode.UTF16.CodeUnit", "param_name": ["x"]}]}, {"return_value": {"return_description": ["The leading surrogate code unit of x when encoded in UTF-16."], "return_name": [""], "return_type": ["UTF16.CodeUnit"]}, "method_description": "Returns the high-surrogate code unit of the surrogate pair representing the specified Unicode scalar.", "method_name": "leadSurrogate", "class_name": "Unicode.UTF16", "params": [{"param_description": "A Unicode scalar value. x must be represented by a surrogate pair when encoded in UTF-16. To check whether x is represented by a surrogate pair, use UTF16.width(x) == 2.", "param_type": "Unicode.Scalar", "param_name": ["x"]}]}, {"return_value": {"return_description": ["The trailing surrogate code unit of x when encoded in UTF-16."], "return_name": [""], "return_type": ["UTF16.CodeUnit"]}, "method_description": "Returns the low-surrogate code unit of the surrogate pair representing the specified Unicode scalar.", "method_name": "trailSurrogate", "class_name": "Unicode.UTF16", "params": [{"param_description": "A Unicode scalar value. x must be represented by a surrogate pair when encoded in UTF-16. To check whether x is represented by a surrogate pair, use UTF16.width(x) == 2.", "param_type": "Unicode.Scalar", "param_name": ["x"]}]}, {"return_value": {"return_description": [], "return_name": [""], "return_type": ["Unicode.UTF16.EncodedScalar"]}, "method_description": "", "method_name": "transcode", "class_name": "Unicode.UTF16", "params": [{"param_description": "", "param_type": "UnicodeEncoding.EncodedScalar", "param_name": ["content"]}, {"param_description": "", "param_type": "UnicodeEncoding.Type", "param_name": ["from"]}]}, {"return_value": {"return_description": ["A tuple containing the number of UTF-16 code units required to encode input and a Boolean value that indicates whether the input contained only ASCII characters. If repairingIllFormedSequences is false and an ill-formed sequence is detected, this method returns nil."], "return_name": [["count"], ["isASCII"]], "return_type": ["Int", "Bool"]}, "method_description": "Returns the number of UTF-16 code units required for the given code unit sequence when transcoded to UTF-16, and a Boolean value indicating whether the sequence was found to contain only ASCII characters.", "method_name": "Encoding>", "class_name": "Unicode.UTF16", "params": [{"param_description": "An iterator of code units to be translated, encoded as sourceEncoding. If repairingIllFormedSequences is true, the entire iterator will be exhausted. Otherwise, iteration will stop if an ill-formed sequence is detected.", "param_type": "IteratorProtocol", "param_name": ["of", "input"]}, {"param_description": "The Unicode encoding of input.", "param_type": "UnicodeEncoding.Type", "param_name": ["decodedAs", "sourceEncoding"]}, {"param_description": "Pass true to measure the length of input even when input contains ill-formed sequences. Each ill-formed sequence is replaced with a Unicode replacement character (\"\\u{FFFD}\") and is measured as such. Pass false to immediately stop measuring input when an ill-formed sequence is encountered.", "param_type": "Bool", "param_name": ["repairingIllFormedSequences"]}]}, {"return_value": {"return_description": ["The width of x when encoded in UTF-16, either 1 or 2."], "return_name": [""], "return_type": ["Int"]}, "method_description": "Returns the number of code units required to encode the given Unicode scalar.", "method_name": "width", "class_name": "Unicode.UTF16", "params": [{"param_description": "A Unicode scalar value.", "param_type": "Unicode.Scalar", "param_name": ["x"]}]}], "package_name": "swift"}