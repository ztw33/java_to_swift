{"package_name": "foundation", "interface_list": [], "class_inherit_list": [], "Methods": [{"return_value": {"return_type": ["Data"], "return_name": [""], "return_description": []}, "method_name": "encode", "class_name": "JSONEncoder", "method_description": "Returns a JSON-encoded representation of the value you supply.", "params": [{"param_type": "Encodable", "param_name": ["value"], "param_description": ""}]}], "Vars": [{"var_type": "JSONEncoder.OutputFormatting", "var_description": "A value that determines the readability, size, and element order of the encoded JSON object.", "var_name": "outputFormatting"}, {"var_type": "JSONEncoder.KeyEncodingStrategy", "var_description": "A value that determines how a type's coding keys are encoded as JSON keys.", "var_name": "keyEncodingStrategy"}, {"var_type": "[CodingUserInfoKey", "var_description": "A dictionary you use to customize the encoding process by providing contextual information.", "var_name": "userInfo"}, {"var_type": "JSONEncoder.DateEncodingStrategy", "var_description": "The strategy used when encoding dates as part of a JSON object.", "var_name": "dateEncodingStrategy"}, {"var_type": "JSONEncoder.DataEncodingStrategy", "var_description": "The strategy that an encoder uses to encode raw data.", "var_name": "dataEncodingStrategy"}, {"var_type": "JSONEncoder.NonConformingFloatEncodingStrategy", "var_description": "The strategy used by an encoder when it encounters exceptional floating-point values.", "var_name": "nonConformingFloatEncodingStrategy"}], "subclass_list": [], "class_description": "The example below shows how to encode an instance of a simple GroceryProduct type from a JSON object. The type adopts Codable so that it's encodable as JSON using a JSONEncoder instance.\n\n", "class_name": "JSONEncoder"}