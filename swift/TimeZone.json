{"package_name": "foundation", "interface_list": ["CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable", "ReferenceConvertible"], "class_inherit_list": [], "Methods": [{"return_value": {"return_type": ["String"], "return_name": [""], "return_description": []}, "method_name": "abbreviation", "class_name": "TimeZone", "method_description": "Returns the abbreviation for the time zone at a given date.", "params": [{"param_type": "Date", "param_name": ["for", "date"], "param_description": ""}]}, {"return_value": {"return_type": ["Int"], "return_name": [""], "return_description": []}, "method_name": "secondsFromGMT", "class_name": "TimeZone", "method_description": "The current difference in seconds between the time zone and Greenwich Mean Time.", "params": [{"param_type": "Date", "param_name": ["for", "date"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "isDaylightSavingTime", "class_name": "TimeZone", "method_description": "Returns a Boolean value that indicates whether the receiver uses daylight saving time at a given date.", "params": [{"param_type": "Date", "param_name": ["for", "date"], "param_description": ""}]}, {"return_value": {"return_type": ["TimeInterval"], "return_name": [""], "return_description": []}, "method_name": "daylightSavingTimeOffset", "class_name": "TimeZone", "method_description": "Returns the daylight saving time offset for a given date.", "params": [{"param_type": "Date", "param_name": ["for", "date"], "param_description": ""}]}, {"return_value": {"return_type": ["Date"], "return_name": [""], "return_description": ["The next daylight saving time transition after date. Depending on the time zone, this function may return a change of the time zone\u2019s offset from GMT. Returns nil if the time zone of the receiver does not observe daylight savings time as of date."]}, "method_name": "nextDaylightSavingTimeTransition", "class_name": "TimeZone", "method_description": "Returns the next daylight saving time transition after a given date.", "params": [{"param_type": "Date", "param_name": ["after", "date"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "!=", "class_name": "TimeZone", "method_description": "Returns a Boolean value indicating whether two values are not equal.", "params": [{"param_type": "TimeZone", "param_name": ["lhs"], "param_description": ""}, {"param_type": "TimeZone", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": []}, "method_name": "==", "class_name": "TimeZone", "method_description": "Indicates whether two time zones are the same.", "params": [{"param_type": "TimeZone", "param_name": ["lhs"], "param_description": ""}, {"param_type": "TimeZone", "param_name": ["rhs"], "param_description": ""}]}, {"return_value": {"return_type": ["String"], "return_name": [""], "return_description": []}, "method_name": "localizedName", "class_name": "TimeZone", "method_description": "Returns the name of the receiver localized for a given locale.", "params": [{"param_type": "NSTimeZone.NameStyle", "param_name": ["for", "style"], "param_description": ""}, {"param_type": "Locale", "param_name": ["locale"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "encode", "class_name": "TimeZone", "method_description": "", "params": [{"param_type": "Encoder", "param_name": ["to", "encoder"], "param_description": ""}]}], "Vars": [{"var_type": "TimeZone", "var_description": "The time zone currently used by the system, automatically updating to the user\u2019s current preference.", "var_name": "autoupdatingCurrent"}, {"var_type": "TimeZone", "var_description": "The time zone currently used by the system.", "var_name": "current"}, {"var_type": "[String]", "var_description": "Returns an array of strings listing the identifier of all the time zones known to the system.", "var_name": "knownTimeZoneIdentifiers"}, {"var_type": "[String", "var_description": "Returns the mapping of abbreviations to time zone identifiers.", "var_name": "abbreviationDictionary"}, {"var_type": "String", "var_description": "The geopolitical region identifier that identifies the time zone.", "var_name": "identifier"}, {"var_type": "String", "var_description": "Returns the time zone data version.", "var_name": "timeZoneDataVersion"}, {"var_type": "Date", "var_description": "The date of the next (after the current instant) daylight saving time transition for the time zone. ", "var_name": "nextDaylightSavingTimeTransition"}, {"var_type": "String", "var_description": "A textual description of the time zone.", "var_name": "description"}, {"var_type": "String", "var_description": "A textual description of the time zone suitable for debugging.", "var_name": "debugDescription"}, {"var_type": "Mirror", "var_description": "A mirror that reflects the time zone.", "var_name": "customMirror"}, {"var_type": "Int", "var_description": "The computed hash value of the time zone.", "var_name": "hashValue"}], "subclass_list": [], "class_description": "TimeZone defines the behavior of a time zone. Time zone values represent geopolitical regions. Consequently, these values have names for these regions. Time zone values also represent a temporal offset, either plus or minus, from Greenwich Mean Time (GMT) and an abbreviation (such as PST for Pacific Standard Time).\nTimeZone provides two static functions to get time zone values: current and autoupdatingCurrent. The autoupdatingCurrent time zone automatically tracks updates made by the user.\nNote that time zone database entries such as \u201cAmerica/Los_Angeles\u201d are IDs, not names. An example of a time zone name is \u201cPacific Daylight Time\u201d. Although many TimeZone functions include the word \u201cname\u201d, they refer to IDs.\nCocoa does not provide any API to change the time zone of the computer, or of other applications.\n", "class_name": "TimeZone"}