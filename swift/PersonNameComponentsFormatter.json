{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["Formatter"], "Methods": [{"return_value": {"return_type": ["String"], "return_name": [""], "return_description": ["A formatted string representation of the given name components."]}, "method_name": "localizedString", "class_name": "PersonNameComponentsFormatter", "method_description": "Returns a string formatted for a given NSPersonNameComponents object using the provided style and options.", "params": [{"param_type": "PersonNameComponents", "param_name": ["from", "components"], "param_description": ""}, {"param_type": "PersonNameComponentsFormatter.Style", "param_name": ["style", "nameFormatStyle"], "param_description": ""}, {"param_type": "PersonNameComponentsFormatter.Options", "param_name": ["options", "nameOptions"], "param_description": ""}]}, {"return_value": {"return_type": ["String"], "return_name": [""], "return_description": ["A formatted string representation of the given name components."]}, "method_name": "string", "class_name": "PersonNameComponentsFormatter", "method_description": "Returns a string formatted for a given NSPersonNameComponents object.", "params": [{"param_type": "PersonNameComponents", "param_name": ["from", "components"], "param_description": ""}]}, {"return_value": {"return_type": ["NSAttributedString"], "return_name": [""], "return_description": ["An attributed string representation of the given name components. You can determine the person component corresponding to a particular range of the attributed string by querying the NSPersonNameComponentKey attribute, providing one of the NSPersonNameComponent constant values defined below as the attribute value."]}, "method_name": "annotatedString", "class_name": "PersonNameComponentsFormatter", "method_description": "Returns an attributed string formatted for a given NSPersonNameComponents object, with attribute annotations for each component.", "params": [{"param_type": "PersonNameComponents", "param_name": ["from", "components"], "param_description": ""}]}, {"return_value": {"return_type": ["PersonNameComponents"], "return_name": [""], "return_description": ["An NSPersonNameComponents object parsing string using the receiver\u2019s format, or nil if no components could be parsed."]}, "method_name": "personNameComponents", "class_name": "PersonNameComponentsFormatter", "method_description": "Returns a person name components object from a given string.", "params": [{"param_type": "String", "param_name": ["from", "string"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if conversion succeeded; otherwise false."]}, "method_name": "getObjectValue", "class_name": "PersonNameComponentsFormatter", "method_description": "Returns by reference a person name components object after creating it from a given string.", "params": [{"param_type": "AutoreleasingUnsafeMutablePointer<AnyObject>", "param_name": ["obj"], "param_description": ""}, {"param_type": "String", "param_name": ["for", "string"], "param_description": ""}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSString>", "param_name": ["errorDescription", "error"], "param_description": ""}]}], "Vars": [{"var_type": "PersonNameComponentsFormatter.Style", "var_description": "The formatting style of the receiver.", "var_name": "style"}, {"var_type": "Bool", "var_description": "A Boolean value that specifies whether the receiver should use only the phonetic representations of name components. false by default.", "var_name": "isPhonetic"}, {"var_type": "String", "var_description": "", "var_name": "NSPersonNameComponentKey"}, {"var_type": "String", "var_description": "", "var_name": "NSPersonNameComponentGivenName"}, {"var_type": "String", "var_description": "", "var_name": "NSPersonNameComponentFamilyName"}, {"var_type": "String", "var_description": "", "var_name": "NSPersonNameComponentMiddleName"}, {"var_type": "String", "var_description": "", "var_name": "NSPersonNameComponentPrefix"}, {"var_type": "String", "var_description": "", "var_name": "NSPersonNameComponentSuffix"}, {"var_type": "String", "var_description": "", "var_name": "NSPersonNameComponentNickname"}, {"var_type": "String", "var_description": "", "var_name": "NSPersonNameComponentDelimiter"}], "subclass_list": [], "class_description": "Each locale has its own set of rules and conventions for how personal names are structured and represented. These rules vary widely across different locales in a several ways, including the sort and display order of given and family names, the use of salutations and honorifics, and other concerns related to the grammar, spelling, punctuation, and formatting. About the only thing that is consistent across all locales is that personal names are significant and meaningful. For this reason, names deserve careful and respectful treatment\u2014perhaps more than any other kind of information your app interacts with.\nFormatters can be configured to represent names in a variety of styles, which are described in detail below.\nDefault (PersonNameComponentsFormatter.Style.default)\nShort (PersonNameComponentsFormatter.Style.short)\nLong (PersonNameComponentsFormatter.Style.long)\nAbbreviated (PersonNameComponentsFormatter.Style.abbreviated)\nWhen determining how to represent a name in a particular style, a formatter takes a number of factors into consideration, in order of priority:\nScript derived behaviors Scripts may specify a strict sort or display order of given and family names, and the availability of styles.\nUser specified preferences Users can enable and configure the display of short names, as well as whether or not to display nicknames when available. Users can also override the default sort and display order of given and family names for their current locale.\nLocale derived defaults Locales specify a default sort and display order for given and family names.\nDeveloper specified configuration The style property value set for the NSPersonNameComponentsFormatter object.\nWhen the behavior specified in one factor conflicts with any other factors, the behavior specified by the factor with the most precedence is used. For example, the U.S. English (en-US) locale specifies that names be displayed in \u201cgiven name followed by the family name\u201d (for example,\u201cJohn Appleseed\u201d). This behavior would be overridden if the user changed their system preferences to have names displayed as family name followed by given name (for example, \u201cAppleseed, John\u201d), because user-specified preferences take precedence over locale-derived defaults. Furthermore, if the name to be formatted were Japanese (for example, given name: \u201c\u6cf0\u592b\u201d, family name: \u201c\u6728\u7530\u201d), the behavior derived for the name\u2019s script (CJK, for Chinese, Japanese, and Korean languages) would take precedence over any locale-derived defaults or user-specified preferences to have the name displayed as family name followed by given name (for example, \u201c\u6728\u7530 \u6cf0\u592b\u201d).\nThese considerations extend to the availability of certain formatter styles as well. Because developer-specified configurations have the lowest precedence in determining behavior, the value set for the formatter\u2019s style property can be invalidated if it\u2019s not supported for the locale, user preferences, or script. If the specified style is not available, the next longest valid style is used. For example, a name in Arabic script (for example, \u201c\u0623\u062d\u0645\u062f \u0627\u0644\u0631\u0627\u062c\u062d\u064a\u201d) does not support the Abbreviated style, so the Short style is used instead.\nNote\nA name that contains more than one script (for example, given name: \u201cJohn\u201d, family name: \u201c\u738b\u201d) is detected to have \u201cUnknown\u201d script, which has its own set of behaviors and characteristics.\nNSPersonNameComponentsFormatter can be configured to format names in the following styles:\nThe minimally necessary features for differentiation in a casual setting. Equivalent to PersonNameComponentsFormatter.Style.medium.\nRelies on user preferences and language defaults to display shortened form appropriate for display in space-constrained settings.\nThe fully qualified name complete with all known components.\nThe maximally abbreviated form of a name.\nName components used to demonstrate the display of each style for various names and locales. \n\nnamePrefix\ngivenName\nmiddleName\nfamilyName\nnameSuffix\nnickname\nArabic \n(ar-SA)\n.\u062f\n\u0623\u062d\u0645\u062f \n\n\u0645\u062d\u0645\u062f\u0627\u0644\u0645\u0635\u0631\u064a \n\n\nChinese \n(zh-Hans)\n\u7269\u7406\u5b66\u535a\u58eb\n\u632f\u5b81\n\n\u6768\n\u5148\u751f\n\nEnglish \n(en-US)\nDr.\nJonathan\nMaple\nAppleseed\nEsq.\nJohnny\nFrench \n(fr-FR)\nP\u00e8re\nJean-Philippe\n\nde Z\u00e9licourt\n\nJP\nGerman \n(de-DE)\nDr. med.\nMax\n\nMustermann\njunior, M.A.\n\nHindi \n(hi-IN)\n\u0921\u0949.\n\u0930\u093f\u092f\n\n\u0938\u093e\u0939\u093f\u0932\n\n\nJapanese \n(ja-JP)\n\n\u6cf0\u592b\n\n\u6728\u7530\n\u5148\u751f\n\nSpanish \n(es-ES)\nDr.\nJos\u00e9 Ramiro\n\nMart\u00edn Gonz\u00e1lez de Rivera\nj\u00fanior, PhD\nRamiro\nThai \n(th-TH)\n\u0e2f\u0e1e\u0e13\u0e2f\n\u0e2a\u0e21\u0e0a\u0e32\u0e22\n\u0e1b\u0e35\u0e40\u0e15\u0e2d\u0e23\u0e4c\n\u0e23\u0e31\u0e15\u0e19\u0e40\u0e23\u0e37\u0e2d\u0e07\u0e23\u0e2d\u0e07\u0e1a\u0e27\u0e23\u0e17\u0e34\u0e1e\u0e22\u0e4c\n\n\nThe Default, or Medium, style presents names in a way that is suitable for most contexts. It uses the given and family names, as well as a nickname, if provided and enabled by the user in System Preferences.\n\nDefault style\nArabic (ar-SA)\n\u0623\u062d\u0645\u062f \u0645\u062d\u0645\ufea9\ufe8d\u0644\u0645\u0635\ufead\ufef1\nChinese (zh-Hans)\n\u6768\u632f\u5b81\nEnglish (en-US)\nJonathan Appleseed\nFrench (fr-FR)\nJean-Philippe de Z\u00e9licourt\nGerman (de-DE)\nMax Mustermann\nHindi (hi-IN)\n\u0930\u093f\u092f \u0938\u093e\u0939\u093f\u0932\nJapanese (ja-JP)\n\u6728\u7530\u6cf0\u592b\nSpanish (es-ES)\nJos\u00e9 Ramiro Mart\u00edn Gonz\u00e1lez de Rivera\nThai (th-TH)\n\u0e2a\u0e21\u0e0a\u0e32\u0e22 \u0e23\u0e31\u0e15\u0e19\u0e40\u0e23\u0e37\u0e2d\u0e07\u0e23\u0e2d\u0e07 \u0e1a\u0e27\u0e23\u0e17\u0e34\u0e1e\u0e22\u0e4c\nThe Short style offers an alternative display method for names whose default representation may exceed a certain length constraint. It is only available if the user has enabled \u201cShort Names\u201d in System Preferences, and only for names with a script that supports Short style. Otherwise, a formatter configured to display with Short style is displayed with Medium style instead.\nIf a user has enabled the use of short names, the user can choose from one of four variations:\nGiven Name - Family Initial\nFamily Name - Given Initial\nGiven Name Only\nFamily Name Only\nShort style is not available for names in CJK script and is restricted to Given Name Only or Family Name Only for names in Arabic or Devanagari script. If the specified Short style is unavailable, the Medium style is used instead.\n\nGiven Name - Family Initial\nFamily Name - Given Initial\nGiven Name Only\nFamily Name Only\nArabic (ar-SA)\nN/A\nN/A\n\u0623\u062d\u0645\u062f\n\u0645\u062d\u0645\ufea9\ufe8d\u0644\u0645\u0635\ufead\ufef1\nChinese (zh-Hans)\nN/A\nN/A\nN/A\nN/A\nEnglish (en-US)\nJonathan A\nJ Appleseed\nJonathan\nAppleseed\nFrench (fr-FR)\nJean-Philippe d\nJ de Z\u00e9licourt\nJean-Philippe\nde Z\u00e9licourt\nGerman (de-DE)\nMax M\nM Mustermann\nMax\nMustermann\nHindi (hi-IN)\nN/A\nN/A\n\u0930\u093f\u092f\n\u0938\u093e\u0939\u093f\u0932\nJapanese (ja-JP)\nN/A\nN/A\nN/A\nN/A\nSpanish (es-ES)\nJos\u00e9 Ramiro M\nJ Mart\u00edn Gonz\u00e1lez de Rivera\nJos\u00e9 Ramiro\nMart\u00edn Gonz\u00e1lez de Rivera\nThai (th-TH)\n\u0e2a\u0e21\u0e0a\u0e32\u0e22 \u0e23\n\u0e2a \u0e23\u0e31\u0e15\u0e19\u0e40\u0e23\u0e37\u0e2d\u0e07\u0e23\u0e2d\u0e07\u0e1a\u0e27\u0e23\u0e17\u0e34\u0e1e\u0e22\u0e4c\n\u0e2a\u0e21\u0e0a\u0e32\u0e22\n\u0e23\u0e31\u0e15\u0e19\u0e40\u0e23\u0e37\u0e2d\u0e07\u0e23\u0e2d\u0e07\u0e1a\u0e27\u0e23\u0e17\u0e34\u0e1e\u0e22\u0e4c\nImportant\nNSPersonNameComponentsFormatter does not currently account for prepositional particles. Representations using the Short style that specify a family name initial naively use the first letter unit of the particle as the initial.\nThe Long style provides the most explicit representation of names. It uses all available name components, with the exception of nickname.\n\nLong style\nArabic (ar-SA)\n\ufea9. \u0623\u062d\u0645\u062f \u0645\u062d\u0645\ufea9\ufe8d\u0644\u0645\u0635\ufead\ufef1\nChinese (zh-Hans)\n\u7269\u7406\u5b66\u535a\u58eb\u6768\u632f\u5b81\u5148\u751f\nEnglish (en-US)\nDr. Jonathan Maple Appleseed Esq.\nFrench (fr-FR)\nP\u00e8re Jean-Philippe de Z\u00e9licourt\nGerman (de-DE)\nDr. med. Max Mustermann junior, M.A.\nHindi (hi-IN)\n\u0921\u0949. \u0930\u093f\u092f \u0938\u093e\u0939\u093f\u0932\nJapanese (ja-JP)\n\u6728\u7530\u6cf0\u592b\u5148\u751f\nSpanish (es-ES)\nDr. Jos\u00e9 Ramiro Mart\u00edn Gonz\u00e1lez de Rivera j\u00fanior, PhD\nThai (th-TH)\n\u0e2f\u0e1e\u0e13\u0e2f \u0e2a\u0e21\u0e0a\u0e32\u0e22 \u0e1b\u0e35\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e23\u0e31\u0e15\u0e19\u0e40\u0e23\u0e37\u0e2d\u0e07\u0e23\u0e2d\u0e07 \u0e1a\u0e27\u0e23\u0e17\u0e34\u0e1e\u0e22\u0e4c\nThe Abbreviated style offers the most compact representation of names, similar to a monogram.\nAbbreviated style is supported for names in several scripts, with the following general characteristics:\nFor names in Cyrillic, Greek, or Latin script, the first characters of givenName, middleName, and familyName may be used.\nFor names in Chinese or Japanese script, familyName may be used. If familyName is too long, or if the family name is nil, the Short or Medium style may be used instead.\nFor names in Korean script, givenName may be used. If givenName is too long, the first character of givenName may be used. If givenName is nil, the familyName may be used instead.\nFor names in Bengali, Devanagari, Gujarati, Gurmukhi, Kannada, Malayalam, Oriya, Sinhala, Tamil, Telugu, Tibetan, or Thai script, the first character of givenName may be used. If givenName is nil, the first character of familyName may be used instead.\nFor names that contain more than one script, the abbreviated style may use the familyName, givenName, or the first characters of givenName and/or familyName.\nIf the Abbreviated style is unavailable, the Short style is used instead\u2014unless that too is unsupported, in which case the Medium style is used instead.\n\nAbbreviated style\nArabic (ar-SA)\nN/A\nChinese (zh-Hans)\n\u6768\nEnglish (en-US)\nJMA\nFrench (fr-FR)\nJd\nGerman (de-DE)\nMM\nHindi (hi-IN)\n\u092e\u093f\nJapanese (ja-JP)\n\u6728\u7530\nSpanish (es-ES)\nJM\nThai (th-TH)\n\u0e2a\nImportant\nNSPersonNameComponentsFormatter doesn\u2019t currently account for prepositional particles or compound names. Representations using the Abbreviated style uses the first letter unit of each name component, regardless.\n", "class_name": "PersonNameComponentsFormatter"}