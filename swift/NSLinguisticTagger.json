{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["[NSLinguisticTagScheme]"], "return_name": [""], "return_description": ["The supported tag schemes. For possible values, see NSLinguisticTagScheme."]}, "method_name": "availableTagSchemes", "class_name": "NSLinguisticTagger", "method_description": "Returns the tag schemes available for a particular unit and language on the current device. ", "params": [{"param_type": "NSLinguisticTaggerUnit", "param_name": ["for", "unit"], "param_description": ""}, {"param_type": "String", "param_name": ["language"], "param_description": ""}]}, {"return_value": {"return_type": ["[NSLinguisticTagScheme]"], "return_name": [""], "return_description": ["The available tag schemes. For possible values, see NSLinguisticTagScheme."]}, "method_name": "availableTagSchemes", "class_name": "NSLinguisticTagger", "method_description": "Returns the tag schemes available for a particular language on the current device. ", "params": [{"param_type": "String", "param_name": ["forLanguage", "language"], "param_description": ""}]}, {"return_value": {"return_type": ["String"], "return_name": [""], "return_description": ["The BCP-47 tag identifying the dominant language of the string, or the tag \"und\" if a specific language cannot be determined."]}, "method_name": "dominantLanguage", "class_name": "NSLinguisticTagger", "method_description": "Returns the dominant language for the specified string.", "params": [{"param_type": "String", "param_name": ["for", "string"], "param_description": ""}]}, {"return_value": {"return_type": ["NSOrthography"], "return_name": [""], "return_description": ["The orthography for the location."]}, "method_name": "orthography", "class_name": "NSLinguisticTagger", "method_description": "Returns the orthography at the index and also returns the effective range.", "params": [{"param_type": "Int", "param_name": ["at", "charIndex"], "param_description": ""}, {"param_type": "NSRangePointer", "param_name": ["effectiveRange"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "setOrthography", "class_name": "NSLinguisticTagger", "method_description": "Sets the orthography for the specified range.", "params": [{"param_type": "NSOrthography", "param_name": ["orthography"], "param_description": ""}, {"param_type": "NSRange", "param_name": ["range"], "param_description": ""}]}, {"return_value": {"return_type": ["Void"], "return_name": [""], "return_description": []}, "method_name": "enumerateTags", "class_name": "NSLinguisticTagger", "method_description": "Enumerates over a given range of the string for a particular unit and calls the specified block for each tag.", "params": [{"param_type": "NSRange", "param_name": ["in", "range"], "param_description": ""}, {"param_type": "NSLinguisticTaggerUnit", "param_name": ["unit"], "param_description": ""}, {"param_type": "NSLinguisticTagScheme", "param_name": ["scheme"], "param_description": ""}, {"param_type": "NSLinguisticTagger.Options", "param_name": ["options"], "param_description": ""}, {"param_type": "(NSLinguisticTag", "param_name": ["using", "block"], "param_description": ""}, {"param_type": "NSRange", "param_name": ["NSRange"], "param_description": ""}, {"param_type": "UnsafeMutablePointer<ObjCBool>", "param_name": ["UnsafeMutablePointer<ObjCBool>"], "param_description": ""}]}, {"return_value": {"return_type": ["Void"], "return_name": [""], "return_description": []}, "method_name": "enumerateTags", "class_name": "NSLinguisticTagger", "method_description": "Enumerates over a given range of the string and calls the specified block for each tag.", "params": [{"param_type": "NSRange", "param_name": ["in", "range"], "param_description": ""}, {"param_type": "NSLinguisticTagScheme", "param_name": ["scheme", "tagScheme"], "param_description": ""}, {"param_type": "NSLinguisticTagger.Options", "param_name": ["options", "opts"], "param_description": ""}, {"param_type": "(NSLinguisticTag", "param_name": ["using", "block"], "param_description": ""}, {"param_type": "NSRange", "param_name": ["NSRange"], "param_description": ""}, {"param_type": "NSRange", "param_name": ["NSRange"], "param_description": ""}, {"param_type": "UnsafeMutablePointer<ObjCBool>", "param_name": ["UnsafeMutablePointer<ObjCBool>"], "param_description": ""}]}, {"return_value": {"return_type": ["Void"], "return_name": [""], "return_description": []}, "method_name": "enumerateTags", "class_name": "NSLinguisticTagger", "method_description": "Enumerates over a given string and calls the specified block for each tag.", "params": [{"param_type": "String", "param_name": ["for", "string"], "param_description": ""}, {"param_type": "NSRange", "param_name": ["range"], "param_description": ""}, {"param_type": "NSLinguisticTaggerUnit", "param_name": ["unit"], "param_description": ""}, {"param_type": "NSLinguisticTagScheme", "param_name": ["scheme"], "param_description": ""}, {"param_type": "NSLinguisticTagger.Options", "param_name": ["options"], "param_description": ""}, {"param_type": "NSOrthography", "param_name": ["orthography"], "param_description": ""}, {"param_type": "(NSLinguisticTag", "param_name": ["using", "block"], "param_description": ""}, {"param_type": "NSRange", "param_name": ["NSRange"], "param_description": ""}, {"param_type": "UnsafeMutablePointer<ObjCBool>", "param_name": ["UnsafeMutablePointer<ObjCBool>"], "param_description": ""}]}, {"return_value": {"return_type": ["NSLinguisticTag"], "return_name": [""], "return_description": ["Returns the tag for the requested tag scheme and linguistic unit, or nil. If a tag is returned, this function returns by reference the range of the token to tokenRange."]}, "method_name": "tag", "class_name": "NSLinguisticTagger", "method_description": "Returns a tag for a single scheme, for a given linguistic unit, at the specified character position.", "params": [{"param_type": "Int", "param_name": ["at", "charIndex"], "param_description": ""}, {"param_type": "NSLinguisticTaggerUnit", "param_name": ["unit"], "param_description": ""}, {"param_type": "NSLinguisticTagScheme", "param_name": ["scheme"], "param_description": ""}, {"param_type": "NSRangePointer", "param_name": ["tokenRange"], "param_description": ""}]}, {"return_value": {"return_type": ["NSLinguisticTag"], "return_name": [""], "return_description": ["Returns the tag for the requested tag scheme, or nil. If a tag is returned, this function returns by reference the range of the token to tokenRange, and the range of the enclosing sentence to sentenceRange, if applicable. "]}, "method_name": "tag", "class_name": "NSLinguisticTagger", "method_description": "Returns a tag for a single scheme at the specified character position.", "params": [{"param_type": "Int", "param_name": ["at", "charIndex"], "param_description": ""}, {"param_type": "NSLinguisticTagScheme", "param_name": ["scheme"], "param_description": ""}, {"param_type": "NSRangePointer", "param_name": ["tokenRange"], "param_description": ""}, {"param_type": "NSRangePointer", "param_name": ["sentenceRange"], "param_description": ""}]}, {"return_value": {"return_type": ["NSLinguisticTag"], "return_name": [""], "return_description": ["Returns the tag for the requested tag scheme and linguistic unit, or nil. If a tag is returned, this function returns by reference the range of the token to tokenRange."]}, "method_name": "tag", "class_name": "NSLinguisticTagger", "method_description": "Returns a tag for a single scheme, for a given linguistic unit, at the specified character position in a string.", "params": [{"param_type": "String", "param_name": ["for", "string"], "param_description": ""}, {"param_type": "Int", "param_name": ["at", "charIndex"], "param_description": ""}, {"param_type": "NSLinguisticTaggerUnit", "param_name": ["unit"], "param_description": ""}, {"param_type": "NSLinguisticTagScheme", "param_name": ["scheme"], "param_description": ""}, {"param_type": "NSOrthography", "param_name": ["orthography"], "param_description": ""}, {"param_type": "NSRangePointer", "param_name": ["tokenRange"], "param_description": ""}]}, {"return_value": {"return_type": ["[NSLinguisticTag]"], "return_name": [""], "return_description": ["An array of the tags in the requested range."]}, "method_name": "tags", "class_name": "NSLinguisticTagger", "method_description": "Returns an array of linguistic tags and token ranges for a given string range and linguistic unit.", "params": [{"param_type": "NSRange", "param_name": ["in", "range"], "param_description": ""}, {"param_type": "NSLinguisticTaggerUnit", "param_name": ["unit"], "param_description": ""}, {"param_type": "NSLinguisticTagScheme", "param_name": ["scheme"], "param_description": ""}, {"param_type": "NSLinguisticTagger.Options", "param_name": ["options"], "param_description": ""}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSArray>", "param_name": ["tokenRanges"], "param_description": ""}]}, {"return_value": {"return_type": ["[String]"], "return_name": [""], "return_description": ["An array of the tags in the requested range."]}, "method_name": "tags", "class_name": "NSLinguisticTagger", "method_description": "Returns an array of linguistic tags and token ranges for a given string range.", "params": [{"param_type": "NSRange", "param_name": ["in", "range"], "param_description": ""}, {"param_type": "String", "param_name": ["scheme", "tagScheme"], "param_description": ""}, {"param_type": "NSLinguisticTagger.Options", "param_name": ["options", "opts"], "param_description": ""}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSArray>", "param_name": ["tokenRanges"], "param_description": ""}]}, {"return_value": {"return_type": ["[NSLinguisticTag]"], "return_name": [""], "return_description": ["An array of the tags in the requested range."]}, "method_name": "tags", "class_name": "NSLinguisticTagger", "method_description": "Returns an array of linguistic tags and token ranges for a given string and linguistic unit.", "params": [{"param_type": "String", "param_name": ["for", "string"], "param_description": ""}, {"param_type": "NSRange", "param_name": ["range"], "param_description": ""}, {"param_type": "NSLinguisticTaggerUnit", "param_name": ["unit"], "param_description": ""}, {"param_type": "NSLinguisticTagScheme", "param_name": ["scheme"], "param_description": ""}, {"param_type": "NSLinguisticTagger.Options", "param_name": ["options"], "param_description": ""}, {"param_type": "NSOrthography", "param_name": ["orthography"], "param_description": ""}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSArray>", "param_name": ["tokenRanges"], "param_description": ""}]}, {"return_value": {"return_type": ["NSRange"], "return_name": [""], "return_description": ["The range of the substring for the linguistic unit."]}, "method_name": "tokenRange", "class_name": "NSLinguisticTagger", "method_description": "Returns the range of the linguistic unit containing the specified character index. ", "params": [{"param_type": "Int", "param_name": ["at", "charIndex"], "param_description": ""}, {"param_type": "NSLinguisticTaggerUnit", "param_name": ["unit"], "param_description": ""}]}, {"return_value": {"return_type": ["NSRange"], "return_name": [""], "return_description": ["Returns the range of the sentence."]}, "method_name": "sentenceRange", "class_name": "NSLinguisticTagger", "method_description": "Returns the range of a sentence containing the specified range.", "params": [{"param_type": "NSRange", "param_name": ["for", "range"], "param_description": ""}]}, {"return_value": {"return_type": ["[String]"], "return_name": [""], "return_description": ["Returns an array of possible tags for the tag scheme at the specified location, starting with the most likely tag scheme.  For some tag schemes only a single tag will be returned, but for others a list of possibilities will be provided."]}, "method_name": "possibleTags", "class_name": "NSLinguisticTagger", "method_description": "Returns an array of possible tags for the given scheme at the specified range, supplying matching scores.", "params": [{"param_type": "Int", "param_name": ["at", "charIndex"], "param_description": ""}, {"param_type": "String", "param_name": ["scheme", "tagScheme"], "param_description": ""}, {"param_type": "NSRangePointer", "param_name": ["tokenRange"], "param_description": ""}, {"param_type": "NSRangePointer", "param_name": ["sentenceRange"], "param_description": ""}, {"param_type": "AutoreleasingUnsafeMutablePointer<NSArray>", "param_name": ["scores"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "stringEdited", "class_name": "NSLinguisticTagger", "method_description": "Notifies the linguistic tagger that the string (if mutable) has changed as specified by the parameters.", "params": [{"param_type": "NSRange", "param_name": ["in", "newRange"], "param_description": ""}, {"param_type": "Int", "param_name": ["changeInLength", "delta"], "param_description": ""}]}], "Vars": [{"var_type": "String", "var_description": "The string being analyzed by the linguistic tagger.", "var_name": "string"}, {"var_type": "[NSLinguisticTagScheme]", "var_description": "Returns the tag schemes configured for this linguistic tagger. For possible values, see NSLinguisticTagScheme.", "var_name": "tagSchemes"}, {"var_type": "String", "var_description": "Returns the dominant language of the string set for the linguistic tagger.", "var_name": "dominantLanguage"}], "subclass_list": [], "class_description": "NSLinguisticTagger provides a uniform interface to a variety of natural language processing functionality with support for many different languages and scripts. You can use this class to segment natural language text into paragraphs, sentences, or words, and tag information about those segments, such as part of speech, lexical class, lemma, script, and language.\nWhen you create a linguistic tagger, you specify what kind of information you're interested in by passing one or more NSLinguisticTagScheme values. Set the string property to the natural language text you want to analyze, and the linguistic tagger processes it according to the specified tag schemes. You can then enumerate over the tags in a specified range, using the methods described in Enumerating Linguistic Tags, to get the information requested for a given scheme and unit.\nA single instance of NSLinguisticTagger should not be used simultaneously from multiple threads.\n", "class_name": "NSLinguisticTagger"}