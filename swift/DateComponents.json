{"subclass_list": [], "Methods": [{"params": [{"param_name": ["in", "calendar"], "param_description": "", "param_type": "Calendar"}], "method_name": "isValidDate", "method_description": "Indicates whether the current combination of properties represents a date which exists in the specified calendar.", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "class_name": "DateComponents"}, {"params": [{"param_name": ["for", "component"], "param_description": "", "param_type": "Calendar.Component"}], "method_name": "value", "method_description": "Returns the value of one of the properties, using an enumeration value instead of a property name.", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Int"]}, "class_name": "DateComponents"}, {"params": [{"param_name": ["value"], "param_description": "", "param_type": "Int"}, {"param_name": ["for", "component"], "param_description": "", "param_type": "Calendar.Component"}], "method_name": "setValue", "method_description": "Set the value of one of the properties, using an enumeration value instead of a property name.", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "DateComponents"}, {"params": [{"param_name": ["lhs"], "param_description": "", "param_type": "DateComponents"}, {"param_name": ["rhs"], "param_description": "", "param_type": "DateComponents"}], "method_name": "!=", "method_description": "Returns a Boolean value indicating whether two values are not equal.", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "class_name": "DateComponents"}, {"params": [{"param_name": ["lhs"], "param_description": "", "param_type": "DateComponents"}, {"param_name": ["rhs"], "param_description": "", "param_type": "DateComponents"}], "method_name": "==", "method_description": "Indicates whether two date component instances are the same.", "return_value": {"return_description": [], "return_name": [""], "return_type": ["Bool"]}, "class_name": "DateComponents"}, {"params": [{"param_name": ["to", "encoder"], "param_description": "", "param_type": "Encoder"}], "method_name": "encode", "method_description": "", "return_value": {"return_description": [], "return_name": [], "return_type": []}, "class_name": "DateComponents"}], "Vars": [{"var_name": "calendar", "var_description": "The calendar used to interpret the other values in this structure.", "var_type": "Calendar"}, {"var_name": "timeZone", "var_description": "A time zone.", "var_type": "TimeZone"}, {"var_name": "isValidDate", "var_description": "Indicates whether the current combination of properties represents a date which exists in the current calendar.", "var_type": "Bool"}, {"var_name": "date", "var_description": "The date calculated from the current components using the stored calendar.", "var_type": "Date"}, {"var_name": "era", "var_description": "An era or count of eras.", "var_type": "Int"}, {"var_name": "year", "var_description": "A year or count of years.", "var_type": "Int"}, {"var_name": "yearForWeekOfYear", "var_description": "The ISO 8601 week-numbering year of the receiver.", "var_type": "Int"}, {"var_name": "quarter", "var_description": "A quarter or count of quarters.", "var_type": "Int"}, {"var_name": "month", "var_description": "A month or count of months.", "var_type": "Int"}, {"var_name": "isLeapMonth", "var_description": "Set to true if these components represent a leap month.", "var_type": "Bool"}, {"var_name": "weekOfMonth", "var_description": "A week of the month or a count of weeks of the month.", "var_type": "Int"}, {"var_name": "weekOfYear", "var_description": "A week of the year or count of the weeks of the year.", "var_type": "Int"}, {"var_name": "weekday", "var_description": "A weekday or count of weekdays.", "var_type": "Int"}, {"var_name": "weekdayOrdinal", "var_description": "A weekday ordinal or count of weekday ordinals. ", "var_type": "Int"}, {"var_name": "day", "var_description": "A day or count of days.", "var_type": "Int"}, {"var_name": "hour", "var_description": "An hour or count of hours.", "var_type": "Int"}, {"var_name": "minute", "var_description": "A minute or count of minutes.", "var_type": "Int"}, {"var_name": "second", "var_description": "A second or count of seconds.", "var_type": "Int"}, {"var_name": "nanosecond", "var_description": "A nanosecond or count of nanoseconds.", "var_type": "Int"}, {"var_name": "description", "var_description": "A textual description of the date components.", "var_type": "String"}, {"var_name": "debugDescription", "var_description": "A textual description of the date components suitable for debugging.", "var_type": "String"}, {"var_name": "customMirror", "var_description": "A mirror that reflects the date.", "var_type": "Mirror"}, {"var_name": "hashValue", "var_description": "The computed hash value of the date.", "var_type": "Int"}], "class_name": "DateComponents", "class_inherit_list": [], "interface_list": ["CustomDebugStringConvertible", "CustomReflectable", "CustomStringConvertible", "Equatable", "Hashable", "ReferenceConvertible"], "class_description": "DateComponents encapsulates the components of a date in an extendable, structured manner.\nIt is used to specify a date by providing the temporal components that make up a date and time in a particular calendar: hour, minutes, seconds, day, month, year, and so on. It can also be used to specify a duration of time, for example, 5 hours and 16 minutes. A DateComponents is not required to define all the component fields.\nWhen a new instance of DateComponents is created, the date components are set to nil.\n", "package_name": "foundation"}