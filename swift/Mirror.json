{"class_inherit_list": [], "Vars": [{"var_description": "A collection of Child elements describing the structure of the reflected subject.", "var_type": "Mirror.Children", "var_name": "children"}, {"var_description": "", "var_type": "Mirror", "var_name": "customMirror"}, {"var_description": "", "var_type": "String", "var_name": "description"}, {"var_description": "A suggested display style for the reflected subject.", "var_type": "Mirror.DisplayStyle", "var_name": "displayStyle"}, {"var_description": "The static type of the subject being reflected.", "var_type": "Any.Type", "var_name": "subjectType"}, {"var_description": "A mirror of the subject\u2019s superclass, if one exists.", "var_type": "Mirror", "var_name": "superclassMirror"}], "class_name": "Mirror", "interface_list": ["CustomReflectable", "CustomStringConvertible"], "subclass_list": [], "class_description": "A mirror describes the parts that make up a particular instance, such as the instance\u2019s stored properties, collection or tuple elements, or its active enumeration case. Mirrors also provide a \u201cdisplay style\u201d property that suggests how this mirror might be rendered.\nPlaygrounds and the debugger use the Mirror type to display representations of values of any type. For example, when you pass an instance to the dump(_:_:_:_:) function, a mirror is used to render that instance\u2019s runtime contents.\nTo customize the mirror representation of a custom type, add conformance to the CustomReflectable protocol.\n", "Methods": [{"return_value": {"return_description": ["The descendant of this mirror specified by the given mirror path components if such a descendant exists; otherwise, nil."], "return_name": [""], "return_type": ["Any"]}, "method_description": "Returns a specific descendant of the reflected subject, or nil if no such descendant exists.", "method_name": "descendant", "class_name": "Mirror", "params": [{"param_description": "The first mirror path component to access.", "param_type": "MirrorPath", "param_name": ["first"]}, {"param_description": "Any remaining mirror path components.", "param_type": "MirrorPath...", "param_name": ["rest"]}]}], "package_name": "swift"}