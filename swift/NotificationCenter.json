{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": ["Void -> NSObjectProtocol"], "return_name": [""], "return_description": ["An opaque object to act as the observer."]}, "method_name": "addObserver", "class_name": "NotificationCenter", "method_description": "Adds an entry to the notification center's dispatch table that includes a notification queue and a block to add to the queue, and an optional notification name and sender.", "params": [{"param_type": "NSNotification.Name", "param_name": ["forName", "name"], "param_description": ""}, {"param_type": "Any", "param_name": ["object", "obj"], "param_description": ""}, {"param_type": "OperationQueue", "param_name": ["queue"], "param_description": ""}, {"param_type": "@escaping (Notification", "param_name": ["using", "block"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "addObserver", "class_name": "NotificationCenter", "method_description": "Adds an entry to the notification center's dispatch table with an observer and a notification selector, and an optional notification name and sender.", "params": [{"param_type": "Any", "param_name": ["observer"], "param_description": ""}, {"param_type": "Selector", "param_name": ["selector", "aSelector"], "param_description": ""}, {"param_type": "NSNotification.Name", "param_name": ["name", "aName"], "param_description": ""}, {"param_type": "Any", "param_name": ["object", "anObject"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "removeObserver", "class_name": "NotificationCenter", "method_description": "Removes matching entries from the notification center's dispatch table.", "params": [{"param_type": "Any", "param_name": ["observer"], "param_description": ""}, {"param_type": "NSNotification.Name", "param_name": ["name", "aName"], "param_description": ""}, {"param_type": "Any", "param_name": ["object", "anObject"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "removeObserver", "class_name": "NotificationCenter", "method_description": "Removes all entries specifying a given observer from the notification center's dispatch table.", "params": [{"param_type": "Any", "param_name": ["observer"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "post", "class_name": "NotificationCenter", "method_description": "Posts a given notification to the notification center.", "params": [{"param_type": "Notification", "param_name": ["notification"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "post", "class_name": "NotificationCenter", "method_description": "Creates a notification with a given name, sender, and information and posts it to the notification center.", "params": [{"param_type": "NSNotification.Name", "param_name": ["name", "aName"], "param_description": ""}, {"param_type": "Any", "param_name": ["object", "anObject"], "param_description": ""}, {"param_type": "Any]", "param_name": ["userInfo", "aUserInfo"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "post", "class_name": "NotificationCenter", "method_description": "Creates a notification with a given name and sender and posts it to the notification center.", "params": [{"param_type": "NSNotification.Name", "param_name": ["name", "aName"], "param_description": ""}, {"param_type": "Any", "param_name": ["object", "anObject"], "param_description": ""}]}], "Vars": [{"var_type": "NotificationCenter", "var_description": "The app\u2019s default notification center.", "var_name": "`default`"}], "subclass_list": [], "class_description": "Objects register with a notification center to receive notifications (NSNotification objects) using the addObserver(_:selector:name:object:) or addObserver(forName:object:queue:using:) methods. When an object adds itself as an observer, it specifies which notifications it should receive. An object may therefore call this method several times in order to register itself as an observer for several different notifications.\nEach running app has a default notification center, and you can create new notification centers to organize communications in particular contexts.\nA notification center can deliver notifications only within a single program; if you want to post a notification to other processes or receive notifications from other processes, use DistributedNotificationCenter instead.\n", "class_name": "NotificationCenter"}