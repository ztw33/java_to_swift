{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSCoder"], "Methods": [{"return_value": {"return_type": ["Data"], "return_name": [""], "return_description": ["A data object containing the encoded form of the object graph whose root object is rootObject."]}, "method_name": "archivedData", "class_name": "NSArchiver", "method_description": "Returns a data object containing the encoded form of the object graph whose root object is given.", "params": [{"param_type": "Any", "param_name": ["withRootObject", "rootObject"], "param_description": ""}]}, {"return_value": {"return_type": ["Bool"], "return_name": [""], "return_description": ["true if the archive was written successfully, otherwise false."]}, "method_name": "archiveRootObject", "class_name": "NSArchiver", "method_description": "Creates a temporary instance of NSArchiver and archives an object graph by encoding it into a data object and writing the resulting data object to a specified file.", "params": [{"param_type": "Any", "param_name": ["rootObject"], "param_description": ""}, {"param_type": "String", "param_name": ["toFile", "path"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "encodeRootObject", "class_name": "NSArchiver", "method_description": "Archives a given object along with all the objects to which it is connected.", "params": [{"param_type": "Any", "param_name": ["rootObject"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "encodeConditionalObject", "class_name": "NSArchiver", "method_description": "Conditionally archives a given object.", "params": [{"param_type": "Any", "param_name": ["object"], "param_description": ""}]}, {"return_value": {"return_type": ["String"], "return_name": [""], "return_description": ["The name of the class used to archive instances of the class trueName."]}, "method_name": "classNameEncoded", "class_name": "NSArchiver", "method_description": "Returns the name of the class used to archive instances of the class with a given true name.", "params": [{"param_type": "String", "param_name": ["forTrueClassName", "trueName"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "encodeClassName", "class_name": "NSArchiver", "method_description": "Encodes a substitute name for the class with a given true name.", "params": [{"param_type": "String", "param_name": ["trueName"], "param_description": ""}, {"param_type": "String", "param_name": ["intoClassName", "inArchiveName"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "replace", "class_name": "NSArchiver", "method_description": "Causes the receiver to treat subsequent requests to encode a given object as though they were requests to encode another given object.", "params": [{"param_type": "Any", "param_name": ["object"], "param_description": ""}, {"param_type": "Any", "param_name": ["with", "newObject"], "param_description": ""}]}], "Vars": [{"var_type": "NSMutableData", "var_description": "The receiver's archive data.", "var_name": "archiverData"}, {"var_type": "NSExceptionName", "var_description": "The name of an exception raised by NSArchiver if there are problems initializing or encoding.", "var_name": "inconsistentArchiveException"}], "subclass_list": [], "class_description": "NSArchiver, a concrete subclass of NSCoder, provides a way to encode objects into an architecture-independent format that can be stored in a file. When you archive a graph of objects, the class information and instance variables for each object are written to the archive. The companion class NSUnarchiver decodes the data in an archive and creates a graph of objects equivalent to the original set.\nNSArchiver stores the archive data in a mutable data object (NSMutableData). After encoding the objects, you can have the NSArchiver object write this mutable data object immediately to a file, or you can retrieve the mutable data object for some other use.\nIn macOS 10.2 and later, NSArchiver and NSUnarchiver have been replaced by NSKeyedArchiver and NSKeyedUnarchiver respectively\u2014see Archives and Serializations Programming Guide. \n", "class_name": "NSArchiver"}