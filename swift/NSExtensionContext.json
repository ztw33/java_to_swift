{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["NSObject"], "Methods": [{"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "cancelRequest", "class_name": "NSExtensionContext", "method_description": "Tells the host app to cancel the app extension request, with a supplied error.", "params": [{"param_type": "Error", "param_name": ["withError", "error"], "param_description": ""}]}, {"return_value": {"return_type": ["Void = nil"], "return_name": [""], "return_description": []}, "method_name": "completeRequest", "class_name": "NSExtensionContext", "method_description": "Tells the host app to complete the app extension request with an array of result items.", "params": [{"param_type": "[Any]", "param_name": ["returningItems", "items"], "param_description": ""}, {"param_type": "((Bool", "param_name": ["completionHandler"], "param_description": ""}]}, {"return_value": {"return_type": ["Void = nil"], "return_name": [""], "return_description": []}, "method_name": "open", "class_name": "NSExtensionContext", "method_description": "Asks the system to open a URL on behalf of the currently running app extension.", "params": [{"param_type": "URL", "param_name": ["URL"], "param_description": ""}, {"param_type": "((Bool", "param_name": ["completionHandler"], "param_description": ""}]}, {"return_value": {"return_type": ["CGSize"], "return_name": [""], "return_description": []}, "method_name": "widgetMaximumSize", "class_name": "NSExtensionContext", "method_description": "Returns the maximum size for the specified widget display mode.", "params": [{"param_type": "NCWidgetDisplayMode", "param_name": ["for", "displayMode"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "mediaPlayingStarted", "class_name": "NSExtensionContext", "method_description": "Tells the system that the Notification Content app extension began playing a media file.", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "mediaPlayingPaused", "class_name": "NSExtensionContext", "method_description": "Tells the system that the Notification Content app extension stopped playing a media file. ", "params": []}, {"return_value": {"return_type": ["String"], "return_name": [""], "return_description": []}, "method_name": "interfaceParametersDescription", "class_name": "NSExtensionContext", "method_description": "Returns a human-readable string describing the data that SiriKit displays to the user when you handle an intent. ", "params": []}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "completeRequest", "class_name": "NSExtensionContext", "method_description": "", "params": [{"param_type": "URL", "param_name": ["withBroadcast", "broadcastURL"], "param_description": ""}, {"param_type": "RPBroadcastConfiguration", "param_name": ["broadcastConfiguration"], "param_description": ""}, {"param_type": "NSCoding & NSObjectProtocol]", "param_name": ["setupInfo"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "completeRequest", "class_name": "NSExtensionContext", "method_description": "", "params": [{"param_type": "URL", "param_name": ["withBroadcast", "broadcastURL"], "param_description": ""}, {"param_type": "NSCoding & NSObjectProtocol]", "param_name": ["setupInfo"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "dismissNotificationContentExtension", "class_name": "NSExtensionContext", "method_description": "", "params": []}, {"return_value": {"return_type": ["Void"], "return_name": [""], "return_description": []}, "method_name": "loadBroadcastingApplicationInfo", "class_name": "NSExtensionContext", "method_description": "", "params": [{"param_type": "@escaping (String", "param_name": ["completion", "handler"], "param_description": ""}, {"param_type": "String", "param_name": ["String"], "param_description": ""}, {"param_type": "UIImage", "param_name": ["UIImage"], "param_description": ""}]}, {"return_value": {"return_type": [], "return_name": [], "return_description": []}, "method_name": "performNotificationDefaultAction", "class_name": "NSExtensionContext", "method_description": "", "params": []}], "Vars": [{"var_type": "NCWidgetDisplayMode", "var_description": "The largest display mode the widget supports.", "var_name": "widgetLargestAvailableDisplayMode"}, {"var_type": "NCWidgetDisplayMode", "var_description": "The active display mode of the widget.", "var_name": "widgetActiveDisplayMode"}, {"var_type": "[Any]", "var_description": "The list of input NSExtensionItem objects associated with the context.", "var_name": "inputItems"}, {"var_type": "CGSize", "var_description": "The minimum size for a Siri hosted view.", "var_name": "hostedViewMinimumAllowedSize"}, {"var_type": "CGSize", "var_description": "The maximum size for a Siri hosted view.", "var_name": "hostedViewMaximumAllowedSize"}, {"var_type": "String", "var_description": "", "var_name": "NSExtensionItemsAndErrorsKey"}, {"var_type": "NSNotification.Name", "var_description": "Posted when the extension\u2019s host app moves from the inactive to the active state.", "var_name": "NSExtensionHostDidBecomeActive"}, {"var_type": "NSNotification.Name", "var_description": "Posted when the extension\u2019s host app moves from the active to the inactive state.", "var_name": "NSExtensionHostWillResignActive"}, {"var_type": "NSNotification.Name", "var_description": "Posted when the extension\u2019s host app begins running in the background.", "var_name": "NSExtensionHostDidEnterBackground"}, {"var_type": "NSNotification.Name", "var_description": "Posted when the extension\u2019s host app begins running in the foreground.", "var_name": "NSExtensionHostWillEnterForeground"}, {"var_type": "[UNNotificationAction]", "var_description": "", "var_name": "notificationActions"}], "subclass_list": [], "class_description": "When a host app sends a request to an app extension, it provides an extension context. For many app extensions, the most important part of the context is the data the user wants to work with, which is contained in the inputItems property.\n", "class_name": "NSExtensionContext"}