{"package_name": "foundation", "interface_list": ["CVarArg", "Equatable", "Hashable"], "class_inherit_list": ["Port"], "Methods": [], "Vars": [{"var_type": "Data", "var_description": "The receiver\u2019s socket address structure stored inside an NSData object.", "var_name": "address"}, {"var_type": "Int32", "var_description": "The protocol that the receiver uses for communication.", "var_name": "`protocol`"}, {"var_type": "Int32", "var_description": "The protocol family that the receiver uses for communication.", "var_name": "protocolFamily"}, {"var_type": "SocketNativeHandle", "var_description": "The receiver\u2019s native socket identifier on the platform.", "var_name": "socket"}, {"var_type": "Int32", "var_description": "The receiver\u2019s socket type.", "var_name": "socketType"}], "subclass_list": [], "class_description": "A SocketPort object can be used as an endpoint for distributed object connections. Companion classes, NSMachPort and MessagePort, allow for local (on the same machine) communication only. The SocketPort class allows for both local and remote communication, but may be more expensive than the others for the local case.\nNote\nThe SocketPort class conforms to the NSCoding protocol, but only supports coding by an NSPortCoder. Port and its other subclasses do not support archiving.\n", "class_name": "SocketPort"}