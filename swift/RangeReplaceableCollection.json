{"class_description": "Range-replaceable collections provide operations that insert and remove elements. For example, you can add elements to an array of strings by calling any of the inserting or appending operations that the RangeReplaceableCollection protocol defines.\nLikewise, RangeReplaceableCollection types can remove one or more elements using a single operation.\nLastly, use the eponymous replaceSubrange(_:with:) method to replace a subrange of elements with the contents of another collection. Here, three elements in the middle of an array of integers are replaced by the five elements of a Repeated<Int> instance.\nTo add RangeReplaceableCollection conformance to your custom collection, add an empty initializer and the replaceSubrange(_:with:) method to your custom type. RangeReplaceableCollection provides default implementations of all its other methods using this initializer and method. For example, the removeSubrange(_:) method is implemented by calling replaceSubrange(_:with:) with an empty collection for the newElements parameter. You can override any of the protocol\u2019s required methods to provide your own custom implementation.\n", "package_name": "swift", "interface_list": [], "Methods": [{"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Inserts the elements of a sequence into the collection at the specified position.Required. Default implementation provided.", "method_name": "insert", "params": [{"param_type": "Collection", "param_name": ["contentsOf", "newElements"], "param_description": "The new elements to insert into the collection."}, {"param_type": "Collectionelf.Index", "param_name": ["at", "i"], "param_description": "The position at which to insert the new elements. index must be a valid index of the collection."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Replaces the specified subrange of elements with the given collection.Required. Default implementation provided.", "method_name": "replaceSubrange", "params": [{"param_type": "Range<Self.Index>", "param_name": ["subrange"], "param_description": "The subrange of the collection to replace. The bounds of the range must be valid indices of the collection."}, {"param_type": "Collection", "param_name": ["with", "newElements"], "param_description": "The new elements to add to the collection."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Adds an element to the end of the collection.Required. Default implementation provided.", "method_name": "append", "params": [{"param_type": "Self.Element", "param_name": ["newElement"], "param_description": "The element to append to the collection."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Adds the elements of a sequence or collection to the end of this collection.Required. Default implementation provided.", "method_name": "append", "params": [{"param_type": "Sequence", "param_name": ["contentsOf", "newElements"], "param_description": "The elements to append to the collection."}]}, {"return_value": {"return_name": [""], "return_description": ["A collection of the elements that isIncluded allowed."], "return_type": ["Bool rethrows -> Self"]}, "class_name": "RangeReplaceableCollection", "method_description": "Returns a new collection of the same type containing, in order, the elements of the original collection that satisfy the given predicate.", "method_name": "filter", "params": [{"param_type": "(Self.Element", "param_name": ["isIncluded"], "param_description": "A closure that takes an element of the sequence as its argument and returns a Boolean value indicating whether the element should be included in the returned collection."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Inserts a new element into the collection at the specified position.Required. Default implementation provided.", "method_name": "insert", "params": [{"param_type": "Self.Element", "param_name": ["newElement"], "param_description": "The new element to insert into the collection."}, {"param_type": "Self.Index", "param_name": ["at", "i"], "param_description": "The position at which to insert the new element. index must be a valid index into the collection."}]}, {"return_value": {"return_name": [""], "return_description": ["The last element of the collection if the collection is not empty; otherwise, nil."], "return_type": ["Self.Element"]}, "class_name": "RangeReplaceableCollection", "method_description": "Removes and returns the last element of the collection.", "method_name": "popLast", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The last element of the collection if the collection is not empty; otherwise, nil."], "return_type": ["Self.Element"]}, "class_name": "RangeReplaceableCollection", "method_description": "Removes and returns the last element of the collection.", "method_name": "popLast", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The removed element."], "return_type": ["Self.Element"]}, "class_name": "RangeReplaceableCollection", "method_description": "Removes and returns the element at the specified position.Required. Default implementation provided.", "method_name": "remove", "params": [{"param_type": "Self.Index", "param_name": ["at", "i"], "param_description": "The position of the element to remove. index must be a valid index of the collection that is not equal to the collection\u2019s end index."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Removes all elements from the collection.Required. Default implementation provided.", "method_name": "removeAll", "params": [{"param_type": "Bool", "param_name": ["keepingCapacity", "keepCapacity"], "param_description": "Pass true to request that the collection avoid releasing its storage. Retaining the collection\u2019s storage can be a useful optimization when you\u2019re planning to grow the collection again. The default value is false."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": [""]}, "class_name": "RangeReplaceableCollection", "method_description": "Removes from the collection all elements that satisfy the given predicate.Required. Default implementation provided.", "method_name": "removeAll", "params": [{"param_type": "(Self.Element", "param_name": ["where", "predicate"], "param_description": "A closure that takes an element of the sequence as its argument and returns a Boolean value indicating whether the element should be removed from the collection."}]}, {"return_value": {"return_name": [""], "return_description": ["The removed element."], "return_type": ["Self.Element"]}, "class_name": "RangeReplaceableCollection", "method_description": "Removes and returns the first element of the collection.Required. Default implementation provided.", "method_name": "removeFirst", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Removes the specified number of elements from the beginning of the collection.Required. Default implementation provided.", "method_name": "removeFirst", "params": [{"param_type": "Int", "param_name": ["k"], "param_description": "The number of elements to remove from the collection. k must be greater than or equal to zero and must not exceed the number of elements in the collection."}]}, {"return_value": {"return_name": [""], "return_description": ["The last element of the collection."], "return_type": ["Self.Element"]}, "class_name": "RangeReplaceableCollection", "method_description": "Removes and returns the last element of the collection.", "method_name": "removeLast", "params": []}, {"return_value": {"return_name": [""], "return_description": ["The last element of the collection."], "return_type": ["Self.Element"]}, "class_name": "RangeReplaceableCollection", "method_description": "Removes and returns the last element of the collection.", "method_name": "removeLast", "params": []}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Removes the specified number of elements from the end of the collection.", "method_name": "removeLast", "params": [{"param_type": "Int", "param_name": ["k"], "param_description": "The number of elements to remove from the collection. k must be greater than or equal to zero and must not exceed the number of elements in the collection."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Removes the specified number of elements from the end of the collection.", "method_name": "removeLast", "params": [{"param_type": "Int", "param_name": ["k"], "param_description": "The number of elements to remove from the collection. k must be greater than or equal to zero and must not exceed the number of elements in the collection."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Removes the specified subrange of elements from the collection.Required. Default implementation provided.", "method_name": "removeSubrange", "params": [{"param_type": "Range<Self.Index>", "param_name": ["bounds"], "param_description": "The subrange of the collection to remove. The bounds of the range must be valid indices of the collection."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Prepares the collection to store the specified number of elements, when doing so is appropriate for the underlying type.Required. Default implementation provided.", "method_name": "reserveCapacity", "params": [{"param_type": "Int", "param_name": ["n"], "param_description": "The requested number of elements to store."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Self"]}, "class_name": "RangeReplaceableCollection", "method_description": "Creates a new collection by concatenating the elements of a sequence and a collection.", "method_name": "", "params": [{"param_type": "Sequence", "param_name": ["lhs"], "param_description": "A collection or finite sequence."}, {"param_type": "Self", "param_name": ["rhs"], "param_description": "A range-replaceable collection."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Self"]}, "class_name": "RangeReplaceableCollection", "method_description": "Creates a new collection by concatenating the elements of a collection and a sequence.", "method_name": "", "params": [{"param_type": "Self", "param_name": ["lhs"], "param_description": "A range-replaceable collection."}, {"param_type": "Sequence", "param_name": ["rhs"], "param_description": "A collection or finite sequence."}]}, {"return_value": {"return_name": [""], "return_description": [], "return_type": ["Self"]}, "class_name": "RangeReplaceableCollection", "method_description": "Creates a new collection by concatenating the elements of two collections.", "method_name": "", "params": [{"param_type": "Self", "param_name": ["lhs"], "param_description": "A range-replaceable collection."}, {"param_type": "RangeReplaceableCollection", "param_name": ["rhs"], "param_description": "Another range-replaceable collection."}]}, {"return_value": {"return_name": [], "return_description": [], "return_type": []}, "class_name": "RangeReplaceableCollection", "method_description": "Appends the elements of a sequence to a range-replaceable collection.", "method_name": "", "params": [{"param_type": "inout Self", "param_name": ["lhs"], "param_description": "The array to append to."}, {"param_type": "Sequence", "param_name": ["rhs"], "param_description": "A collection or finite sequence."}]}], "class_inherit_list": ["Collection"], "Vars": [], "subclass_list": [], "class_name": "RangeReplaceableCollection"}