{"subclass_list": [], "Methods": [], "Vars": [{"var_name": "describe", "var_description": "Points to the function which produces an autoreleased NSString * describing the given element. If NULL, then the map table produces a generic string description.", "var_type": "((NSMapTable<AnyObject,"}, {"var_name": "hash", "var_description": "Points to the function which must produce hash code for key elements of the map table. If NULL, the pointer value is used as the hash code. Second parameter is the element for which hash code should be produced.", "var_type": "((NSMapTable<AnyObject,"}, {"var_name": "isEqual", "var_description": "Points to the function which compares second and third parameters. If NULL, then == is used for comparison.", "var_type": "((NSMapTable<AnyObject,"}, {"var_name": "notAKeyMarker", "var_description": "No key put in map table can be this value. An exception is raised if attempt is made to use this value as a key", "var_type": "UnsafeRawPointer"}, {"var_name": "release", "var_description": "Points to the function which decrements a reference count for the given element, and if the reference count becomes zero, frees the given element. If NULL, then nothing is done for reference counting or releasing.", "var_type": "((NSMapTable<AnyObject,"}, {"var_name": "retain", "var_description": "Points to the function which increments a reference count for the given element. If NULL, then nothing is done for reference counting.", "var_type": "((NSMapTable<AnyObject,"}], "class_name": "NSMapTableKeyCallBacks", "class_inherit_list": [], "interface_list": [], "class_description": "All functions must know the types of things in the map table to be able to operate on them. Sets of predefined call backs are described in NSMapTable.\nTwo predefined values to use for notAKeyMarker are NSNotAnIntMapKey and NSNotAPointerMapKey.\n", "package_name": "foundation"}