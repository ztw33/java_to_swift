{"package_name": ["foundat"], "class_name": ["ns", "regular", "express"], "class_description": ["fundament", "match", "method", "nsregularexpress", "block", "iter", "method", "allow", "client", "suppli", "block", "object", "invok", "time", "regular", "express", "match", "portion", "target", "string", "addit", "conveni", "method", "return", "match", "array", "total", "number", "match", "first", "match", "rang", "first", "matchan", "individu", "match", "repres", "instanc", "nstextcheckingresult", "class", "carri", "inform", "overal", "match", "rang", "via", "rang", "properti", "rang", "individu", "captur", "group", "via", "rangeat", "method", "basic", "nsregularexpress", "object", "match", "result", "type", "regularexpress", "subclass", "may", "use", "typesth", "icu", "regular", "express", "support", "nsregularexpress", "describ", "httpuserguideicuprojectorgstringsregexpwhat", "follow", "set", "graduat", "exampl", "use", "nsregularexpress", "class", "exampl", "use", "regular", "express", "babcdb", "regular", "expressionthi", "snippet", "creat", "regular", "express", "match", "twolett", "word", "first", "letter", "b", "second", "letter", "c", "specifi", "caseinsensit", "mean", "match", "caseinsensit", "match", "bc", "ad", "forth", "well", "lowercas", "equivalentsth", "numberofmatchesinoptionsrang", "method", "provid", "simpl", "mechan", "count", "number", "match", "given", "rang", "stringif", "interest", "overal", "rang", "first", "match", "rangeoffirstmatchinoptionsrang", "method", "provid", "regular", "express", "though", "exampl", "pattern", "success", "match", "zerolength", "rang", "comparison", "result", "rang", "nsnotfound", "0", "reliabl", "way", "determin", "whether", "match", "notth", "exampl", "regular", "express", "contain", "two", "captur", "group", "correspond", "two", "set", "parenthes", "one", "first", "letter", "one", "second", "interest", "overal", "match", "rang", "want", "obtain", "nstextcheckingresult", "object", "correspond", "given", "match", "object", "provid", "inform", "overal", "match", "rang", "via", "rang", "properti", "also", "suppli", "captur", "group", "rang", "via", "rangeat", "method", "first", "captur", "group", "rang", "given", "result", "rangeatindex1", "second", "result", "rangeatindex2", "send", "result", "rangeat", "messag", "pass", "0", "equival", "result", "rangeif", "result", "return", "nonnil", "result", "rang", "alway", "valid", "rang", "necessari", "compar", "nsnotfound", "0", "howev", "regular", "express", "though", "exampl", "pattern", "captur", "group", "may", "may", "particip", "given", "match", "given", "captur", "group", "particip", "given", "match", "result", "rangeatindexidx", "return", "nsnotfound", "0the", "matchesinoptionsrang", "return", "match", "resultsth", "firstmatchinoptionsrang", "method", "similar", "matchesinoptionsrang", "return", "first", "matchth", "block", "enumer", "method", "enumeratematchesinoptionsrangeus", "gener", "flexibl", "match", "method", "nsregularexpress", "allow", "iter", "match", "string", "perform", "arbitrari", "action", "specifi", "code", "block", "stop", "partway", "desir", "follow", "exampl", "case", "iter", "stop", "certain", "number", "match", "found", "neither", "special", "option", "reportprogress", "reportcomplet", "specifi", "result", "argument", "block", "guarante", "nonnil", "mention", "guarante", "valid", "overal", "rang", "see", "nsregularexpressionmatchingopt", "signific", "reportprogress", "reportcompletionnsregularexpress", "also", "provid", "simpl", "method", "perform", "findandreplac", "oper", "string", "follow", "exampl", "return", "modifi", "copi", "correspond", "method", "modifi", "mutabl", "string", "place", "templat", "specifi", "use", "replac", "match", "0", "repres", "content", "overal", "match", "rang", "1", "repres", "content", "first", "captur", "group", "case", "templat", "revers", "two", "letter", "wordnsregularexpress", "design", "immut", "thread", "safe", "singl", "instanc", "use", "match", "oper", "multipl", "thread", "howev", "string", "oper", "mutat", "cours", "match", "oper", "whether", "anoth", "thread", "within", "block", "use", "iterationth", "follow", "tabl", "describ", "charact", "express", "use", "regular", "express", "match", "pattern", "within", "string", "pattern", "oper", "specifi", "mani", "time", "pattern", "match", "addit", "match", "restrict", "last", "tabl", "specifi", "flag", "includ", "regular", "express", "pattern", "specifi", "search", "behavior", "multipl", "line", "flag", "also", "specifi", "use", "nsregularexpressionopt", "option", "flagstabl", "1", "describ", "charact", "sequenc", "use", "match", "charact", "within", "stringregular", "express", "metacharacterscharact", "expressiondescriptionamatch", "bell", "u0007amatch", "begin", "input", "differ", "match", "new", "line", "within", "inputb", "outsid", "setmatch", "current", "posit", "word", "boundari", "boundari", "occur", "transit", "word", "w", "nonword", "w", "charact", "combin", "mark", "ignor", "better", "word", "boundari", "see", "useunicodewordboundariesb", "within", "setmatch", "backspac", "u0008bmatch", "current", "posit", "word", "boundarycxmatch", "controlx", "characterdmatch", "charact", "unicod", "gener", "categori", "nd", "number", "decim", "digitdmatch", "charact", "decim", "digitematch", "escap", "u001betermin", "q", "e", "quot", "sequencefmatch", "form", "feed", "u000cgmatch", "current", "posit", "end", "previou", "matchnmatch", "line", "feed", "u000anunicod", "charact", "namematch", "name", "characterpunicod", "properti", "namematch", "charact", "specifi", "unicod", "propertypunicod", "properti", "namematch", "charact", "specifi", "unicod", "propertyqquot", "follow", "charact", "ermatch", "carriag", "return", "u000dsmatch", "white", "space", "charact", "white", "space", "defin", "tnfrpzsmatch", "nonwhit", "space", "charactertmatch", "horizont", "tabul", "u0009uhhhhmatch", "charact", "hex", "valu", "hhhhuhhhhhhhhmatch", "charact", "hex", "valu", "hhhhhhhh", "exactli", "eight", "hex", "digit", "must", "provid", "even", "though", "largest", "unicod", "code", "point", "u0010ffffwmatch", "word", "charact", "word", "charact", "pllplupltplopndwmatch", "nonword", "characterxhhhhmatch", "charact", "hex", "valu", "hhhh", "one", "six", "hex", "digit", "may", "suppliedxhhmatch", "charact", "two", "digit", "hex", "valu", "hhxmatch", "graphem", "clusterzmatch", "current", "posit", "end", "input", "final", "line", "termin", "one", "existszmatch", "current", "posit", "end", "inputnback", "refer", "match", "whatev", "nth", "captur", "group", "match", "n", "must", "number", "1", "total", "number", "captur", "group", "pattern0ooomatch", "octal", "charact", "ooo", "one", "three", "octal", "digit", "0377", "largest", "allow", "octal", "charact", "lead", "zero", "requir", "distinguish", "octal", "constant", "back", "referencespatternmatch", "one", "charact", "patternmatch", "charact", "see", "dotmatcheslinesepar", "charact", "express", "tabl", "4match", "begin", "line", "see", "anchorsmatchlin", "charact", "express", "tabl", "4match", "end", "line", "see", "anchorsmatchlin", "charact", "express", "tabl", "4quot", "follow", "charact", "charact", "must", "quot", "treat", "liter", "tabl", "2", "defin", "regular", "express", "operatorsregular", "express", "operatorsoperatordescriptionaltern", "ab", "match", "either", "bmatch", "0", "time", "match", "mani", "time", "possiblematch", "1", "time", "match", "mani", "time", "possiblematch", "zero", "one", "time", "prefer", "onenmatch", "exactli", "n", "timesnmatch", "least", "n", "time", "match", "mani", "time", "possiblenmmatch", "n", "time", "match", "mani", "time", "possibl", "mmatch", "0", "time", "match", "time", "possiblematch", "1", "time", "match", "time", "possiblematch", "zero", "one", "time", "prefer", "zeronmatch", "exactli", "n", "timesnmatch", "least", "n", "time", "requir", "overal", "pattern", "matchnmmatch", "n", "time", "match", "time", "possibl", "less", "nmatch", "0", "time", "match", "mani", "time", "possibl", "first", "encount", "retri", "fewer", "even", "overal", "match", "fail", "possess", "matchmatch", "1", "time", "possess", "matchmatch", "zero", "one", "time", "possess", "matchnmatch", "exactli", "n", "timesnmatch", "least", "n", "time", "possess", "matchnmmatch", "n", "time", "possess", "matchcaptur", "parenthes", "rang", "input", "match", "parenthes", "subexpress", "avail", "matchnoncaptur", "parenthes", "group", "includ", "pattern", "provid", "captur", "match", "text", "somewhat", "effici", "captur", "parenthesesatomicmatch", "parenthes", "first", "match", "parenthes", "subexpress", "one", "tri", "lead", "overal", "pattern", "match", "back", "search", "match", "posit", "freeformat", "comment", "comment", "lookahead", "assert", "true", "parenthes", "pattern", "match", "current", "input", "posit", "advanc", "input", "posit", "neg", "lookahead", "assert", "true", "parenthes", "pattern", "match", "current", "input", "posit", "advanc", "input", "posit", "lookbehind", "assert", "true", "parenthes", "pattern", "match", "text", "preced", "current", "input", "posit", "last", "charact", "match", "input", "charact", "current", "posit", "alter", "input", "posit", "length", "possibl", "string", "match", "lookbehind", "pattern", "must", "unbound", "oper", "neg", "lookbehind", "assert", "true", "parenthes", "pattern", "match", "text", "preced", "current", "input", "posit", "last", "charact", "match", "input", "charact", "current", "posit", "alter", "input", "posit", "length", "possibl", "string", "match", "lookbehind", "pattern", "must", "unbound", "operatorsismwxismwx", "flag", "set", "evalu", "parenthes", "express", "specifi", "flag", "enabl", "disabl", "flag", "defin", "flag", "optionsismwxismwxflag", "set", "chang", "flag", "set", "chang", "appli", "portion", "pattern", "follow", "set", "exampl", "chang", "case", "insensit", "matchth", "flag", "defin", "flag", "optionsth", "nsregularexpress", "class", "provid", "findandreplac", "method", "immut", "mutabl", "string", "use", "techniqu", "templat", "match", "tabl", "3", "describ", "syntaxtempl", "match", "formatcharacterdescriptionsnth", "text", "captur", "group", "n", "substitut", "n", "n", "must", "0", "greater", "number", "captur", "group", "follow", "digit", "special", "mean", "appear", "substitut", "text", "treat", "follow", "charact", "liter", "suppress", "special", "mean", "backslash", "escap", "substitut", "text", "requir", "may", "use", "charact", "without", "bad", "effectsth", "replac", "string", "treat", "templat", "0", "replac", "content", "match", "rang", "1", "content", "first", "captur", "group", "addit", "digit", "beyond", "maximum", "requir", "repres", "number", "captur", "group", "treat", "ordinari", "charact", "follow", "digit", "backslash", "escap", "follow", "flag", "control", "variou", "aspect", "regular", "express", "match", "flag", "valu", "may", "specifi", "within", "pattern", "use", "ismxismx", "pattern", "option", "equival", "behavior", "specifi", "entir", "pattern", "nsregularexpress", "initi", "use", "nsregularexpressionopt", "option", "flagsflag", "optionsflag", "patterndescriptioniif", "set", "match", "take", "place", "caseinsensit", "mannerxif", "set", "allow", "use", "white", "space", "comment", "within", "patternssif", "set", "pattern", "match", "line", "termin", "input", "text", "default", "note", "carriagereturn", "linefe", "pair", "text", "behav", "singl", "line", "termin", "match", "singl", "regular", "express", "patternmcontrol", "behavior", "pattern", "default", "match", "start", "end", "respect", "input", "text", "flag", "set", "also", "match", "start", "end", "line", "within", "input", "textwcontrol", "behavior", "b", "pattern", "set", "word", "boundari", "found", "accord", "definit", "word", "found", "unicod", "uax", "29", "text", "boundari", "default", "word", "boundari", "identifi", "mean", "simpl", "classif", "charact", "either", "word", "nonword", "approxim", "tradit", "regular", "express", "behavior", "result", "obtain", "two", "option", "quit", "differ", "run", "space", "nonword", "charactersnsregularexpress", "implement", "nondeterminist", "finit", "automaton", "match", "engin", "complex", "regular", "express", "pattern", "contain", "multipl", "oper", "may", "result", "poor", "perform", "attempt", "perform", "match", "particularli", "fail", "match", "given", "input", "inform", "see", "perform", "tip", "section", "icu", "user", "guidet", "1", "tabl", "2", "tabl", "3", "tabl", "4", "reproduc", "icu", "user", "guid", "copyright", "c", "2000", "2009", "ibm", "other", "licens", "follow", "termscopyright", "permiss", "noticecopyright", "c", "19952009", "intern", "busi", "machin", "corpor", "other", "right", "reservedpermiss", "herebi", "grant", "free", "charg", "person", "obtain", "copi", "softwar", "associ", "document", "file", "softwar", "deal", "softwar", "without", "restrict", "includ", "without", "limit", "right", "use", "copi", "modifi", "merg", "publish", "distribut", "andor", "sell", "copi", "softwar", "permit", "person", "softwar", "furnish", "provid", "copyright", "notic", "permiss", "notic", "appear", "copi", "softwar", "copyright", "notic", "permiss", "notic", "appear", "support", "documentationth", "softwar", "provid", "without", "warranti", "kind", "express", "impli", "includ", "limit", "warranti", "merchant", "fit", "particular", "purpos", "noninfring", "third", "parti", "right", "event", "shall", "copyright", "holder", "holder", "includ", "notic", "liabl", "claim", "special", "indirect", "consequenti", "damag", "damag", "whatsoev", "result", "loss", "use", "data", "profit", "whether", "action", "contract", "neglig", "tortiou", "action", "aris", "connect", "use", "perform", "softwareexcept", "contain", "notic", "name", "copyright", "holder", "shall", "use", "advertis", "otherwis", "promot", "sale", "use", "deal", "softwar", "without", "prior", "written", "author", "copyright", "holderal", "trademark", "regist", "trademark", "mention", "herein", "properti", "respect", "owner"], "class_inherit_list": [["ns", "object"]], "interface_list": [["c", "var", "arg"], ["equat"], ["hashabl"], ["ns", "copi"], ["ns", "secur", "code"]], "subclass_list": [], "Methods": [{"class_name": ["ns", "regular", "express"], "method_name": ["number", "of", "match"], "method_description": ["return", "number", "match", "regular", "express", "within", "specifi", "rang", "string"], "params": [{"param_type": ["string"], "param_name": [["in"], ["string"]], "param_description": []}, {"param_type": ["ns", "regular", "express", "match", "option"], "param_name": [["option"]], "param_description": []}, {"param_type": ["ns", "rang"], "param_name": [["rang"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [["number", "match", "regular", "express"]], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["enumer", "match"], "method_description": ["enumer", "string", "allow", "block", "handl", "regular", "express", "match"], "params": [{"param_type": ["string"], "param_name": [["in"], ["string"]], "param_description": []}, {"param_type": ["ns", "regular", "express", "match", "option"], "param_name": [["option"]], "param_description": []}, {"param_type": ["ns", "rang"], "param_name": [["rang"]], "param_description": []}, {"param_type": ["ns", "text", "check", "result"], "param_name": [["use"], ["block"]], "param_description": []}, {"param_type": ["ns", "regular", "express", "match", "flag"], "param_name": [["ns", "regular", "express", "match", "flag"]], "param_description": []}, {"param_type": ["unsaf", "mutabl", "pointer", "obj", "c", "bool"], "param_name": [["unsaf", "mutabl", "pointer", "obj", "c", "bool"]], "param_description": []}], "return_value": {"return_type": [["void"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["match"], "method_description": ["return", "array", "contain", "match", "regular", "express", "string"], "params": [{"param_type": ["string"], "param_name": [["in"], ["string"]], "param_description": []}, {"param_type": ["ns", "regular", "express", "match", "option"], "param_name": [["option"]], "param_description": []}, {"param_type": ["ns", "rang"], "param_name": [["rang"]], "param_description": []}], "return_value": {"return_type": [["ns", "text", "check", "result"]], "return_description": [["array", "nstextcheckingresult", "object", "result", "give", "overal", "match", "rang", "via", "rang", "properti", "rang", "individu", "captur", "group", "via", "rangeat", "method", "rang", "nsnotfound", "0", "return", "one", "captur", "group", "particip", "particular", "match"]], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["first", "match"], "method_description": ["return", "first", "match", "regular", "express", "within", "specifi", "rang", "string"], "params": [{"param_type": ["string"], "param_name": [["in"], ["string"]], "param_description": []}, {"param_type": ["ns", "regular", "express", "match", "option"], "param_name": [["option"]], "param_description": []}, {"param_type": ["ns", "rang"], "param_name": [["rang"]], "param_description": []}], "return_value": {"return_type": [["ns", "text", "check", "result"]], "return_description": [["nstextcheckingresult", "object", "result", "give", "overal", "match", "rang", "via", "rang", "properti", "rang", "individu", "captur", "group", "via", "rangeat", "method", "rang", "nsnotfound", "0", "return", "one", "captur", "group", "particip", "particular", "match"]], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["rang", "of", "first", "match"], "method_description": ["return", "rang", "first", "match", "regular", "express", "within", "specifi", "rang", "string"], "params": [{"param_type": ["string"], "param_name": [["in"], ["string"]], "param_description": []}, {"param_type": ["ns", "regular", "express", "match", "option"], "param_name": [["option"]], "param_description": []}, {"param_type": ["ns", "rang"], "param_name": [["rang"]], "param_description": []}], "return_value": {"return_type": [["ns", "rang"]], "return_description": [["rang", "first", "match", "return", "nsnotfound", "0", "match", "found"]], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["replac", "match"], "method_description": ["replac", "regular", "express", "match", "within", "mutabl", "string", "use", "templat", "string"], "params": [{"param_type": ["ns", "mutabl", "string"], "param_name": [["in"], ["string"]], "param_description": []}, {"param_type": ["ns", "regular", "express", "match", "option"], "param_name": [["option"]], "param_description": []}, {"param_type": ["ns", "rang"], "param_name": [["rang"]], "param_description": []}, {"param_type": ["string"], "param_name": [["with", "templat"], ["templ"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [["number", "match"]], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["string", "by", "replac", "match"], "method_description": ["return", "new", "string", "contain", "match", "regular", "express", "replac", "templat", "string"], "params": [{"param_type": ["string"], "param_name": [["in"], ["string"]], "param_description": []}, {"param_type": ["ns", "regular", "express", "match", "option"], "param_name": [["option"]], "param_description": []}, {"param_type": ["ns", "rang"], "param_name": [["rang"]], "param_description": []}, {"param_type": ["string"], "param_name": [["with", "templat"], ["templ"]], "param_description": []}], "return_value": {"return_type": [["string"]], "return_description": [["string", "match", "regular", "express", "replac", "templat", "string"]], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["escap", "templat"], "method_description": ["return", "templat", "string", "ad", "backslash", "escap", "necessari", "protect", "charact", "would", "match", "pattern", "metacharact"], "params": [{"param_type": ["string"], "param_name": [["for"], ["string"]], "param_description": []}], "return_value": {"return_type": [["string"]], "return_description": [["escap", "templat", "string"]], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["escap", "pattern"], "method_description": ["return", "string", "ad", "backslash", "escap", "necessari", "protect", "charact", "would", "match", "pattern", "metacharact"], "params": [{"param_type": ["string"], "param_name": [["for"], ["string"]], "param_description": []}], "return_value": {"return_type": [["string"]], "return_description": [["escap", "string"]], "return_name": [[]]}}, {"class_name": ["ns", "regular", "express"], "method_name": ["replac", "string"], "method_description": ["use", "perform", "templat", "substitut", "singl", "result", "client", "implement", "replac", "function"], "params": [{"param_type": ["ns", "text", "check", "result"], "param_name": [["for"], ["result"]], "param_description": []}, {"param_type": ["string"], "param_name": [["in"], ["string"]], "param_description": []}, {"param_type": ["int"], "param_name": [["offset"]], "param_description": []}, {"param_type": ["string"], "param_name": [["templat"], ["templ"]], "param_description": []}], "return_value": {"return_type": [["string"]], "return_description": [["replac", "string"]], "return_name": [[]]}}], "Vars": [{"var_name": ["pattern"], "var_type": ["string"], "var_description": ["return", "regular", "express", "pattern"]}, {"var_name": ["option"], "var_type": ["ns", "regular", "express", "option"], "var_description": ["return", "option", "use", "regular", "express", "option", "creat"]}, {"var_name": ["number", "of", "captur", "group"], "var_type": ["int"], "var_description": ["return", "number", "captur", "group", "regular", "express"]}]}