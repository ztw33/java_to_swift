{"package_name": ["foundat"], "class_name": ["decim"], "class_description": [], "class_inherit_list": [], "interface_list": [["compar"], ["custom", "string", "convert"], ["decod"], ["encod"], ["express", "by", "float", "liter"], ["express", "by", "integ", "liter"], ["hashabl"], ["sign", "numer"], ["strideabl"]], "subclass_list": [], "Methods": [{"class_name": ["decim"], "method_name": ["ns", "decim", "copi"], "method_description": ["copi", "valu", "decim", "number"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["destin"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["sourc"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "string"], "method_description": ["return", "string", "represent", "decim", "valu", "appropri", "specifi", "local"], "params": [{"param_type": ["unsaf", "pointer", "decim"], "param_name": [["dcm"]], "param_description": []}, {"param_type": ["ani"], "param_name": [["local"]], "param_description": []}], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": [], "method_description": ["multipli", "two", "decim", "number"], "params": [{"param_type": ["decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["decim"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": [], "method_description": ["multipli", "two", "decim", "number", "store", "result", "first", "number"], "params": [{"param_type": ["inout", "decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["decim"], "method_name": [], "method_description": ["add", "two", "decim", "number"], "params": [{"param_type": ["decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["decim"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": [], "method_description": ["add", "two", "decim", "number", "store", "result", "first", "number"], "params": [{"param_type": ["inout", "decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["decim"], "method_name": [], "method_description": ["subtract", "one", "decim", "number", "anoth"], "params": [{"param_type": ["decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["decim"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": [], "method_description": ["subtract", "one", "decim", "number", "anoth", "store", "result", "first", "number"], "params": [{"param_type": ["inout", "decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["decim"], "method_name": [], "method_description": ["divid", "one", "decim", "number", "anoth"], "params": [{"param_type": ["decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["decim"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": [], "method_description": ["divid", "one", "decim", "number", "anoth", "store", "result", "first", "number"], "params": [{"param_type": ["inout", "decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["decim"], "method_name": ["pow"], "method_description": ["return", "decim", "number", "rais", "given", "power"], "params": [{"param_type": ["decim"], "param_name": [["x"]], "param_description": []}, {"param_type": ["int"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["decim"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["negat"], "method_description": ["negat", "decim"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "compact"], "method_description": ["compact", "decim", "structur", "effici"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["number"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "add"], "method_description": ["add", "two", "decim", "valu"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["result"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["left", "operand"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["right", "operand"]], "param_description": []}, {"param_type": ["ns", "decim", "number", "round", "mode"], "param_name": [["round", "mode"]], "param_description": []}], "return_value": {"return_type": [["ns", "decim", "number", "calcul", "error"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "subtract"], "method_description": ["subtract", "one", "decim", "valu", "anoth"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["result"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["left", "operand"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["right", "operand"]], "param_description": []}, {"param_type": ["ns", "decim", "number", "round", "mode"], "param_name": [["round", "mode"]], "param_description": []}], "return_value": {"return_type": [["ns", "decim", "number", "calcul", "error"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "divid"], "method_description": ["divid", "one", "decim", "valu", "anoth"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["result"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["left", "operand"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["right", "operand"]], "param_description": []}, {"param_type": ["ns", "decim", "number", "round", "mode"], "param_name": [["round", "mode"]], "param_description": []}], "return_value": {"return_type": [["ns", "decim", "number", "calcul", "error"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "multipli"], "method_description": ["multipli", "two", "decim", "number", "togeth"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["result"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["left", "operand"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["right", "operand"]], "param_description": []}, {"param_type": ["ns", "decim", "number", "round", "mode"], "param_name": [["round", "mode"]], "param_description": []}], "return_value": {"return_type": [["ns", "decim", "number", "calcul", "error"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "multipli", "by", "power", "of10"], "method_description": ["multipli", "decim", "specifi", "power", "10"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["result"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["number"]], "param_description": []}, {"param_type": ["int16"], "param_name": [["power"]], "param_description": []}, {"param_type": ["ns", "decim", "number", "round", "mode"], "param_name": [["round", "mode"]], "param_description": []}], "return_value": {"return_type": [["ns", "decim", "number", "calcul", "error"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "round"], "method_description": ["round", "decim", "valu"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["result"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["number"]], "param_description": []}, {"param_type": ["int"], "param_name": [["scale"]], "param_description": []}, {"param_type": ["ns", "decim", "number", "round", "mode"], "param_name": [["round", "mode"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "power"], "method_description": ["rais", "decim", "valu", "specifi", "power"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["result"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["number"]], "param_description": []}, {"param_type": ["int"], "param_name": [["power"]], "param_description": []}, {"param_type": ["ns", "decim", "number", "round", "mode"], "param_name": [["round", "mode"]], "param_description": []}], "return_value": {"return_type": [["ns", "decim", "number", "calcul", "error"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "normal"], "method_description": ["normal", "intern", "format", "two", "decim", "number", "simplifi", "later", "oper"], "params": [{"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["number1"]], "param_description": []}, {"param_type": ["unsaf", "mutabl", "pointer", "decim"], "param_name": [["number2"]], "param_description": []}, {"param_type": ["ns", "decim", "number", "round", "mode"], "param_name": [["round", "mode"]], "param_description": []}], "return_value": {"return_type": [["ns", "decim", "number", "calcul", "error"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "one", "decim", "number", "strictli", "less", "anoth"], "params": [{"param_type": ["decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "decim", "number", "equal"], "params": [{"param_type": ["decim"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["decim"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["is", "equal"], "method_description": ["indic", "whether", "decim", "equal", "specifi", "one"], "params": [{"param_type": ["decim"], "param_name": [["to"], ["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["is", "less"], "method_description": ["indic", "whether", "decim", "less", "specifi", "one"], "params": [{"param_type": ["decim"], "param_name": [["than"], ["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["is", "less", "than", "or", "equal", "to"], "method_description": ["indic", "whether", "decim", "less", "equal", "specifi", "one"], "params": [{"param_type": ["decim"], "param_name": [["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["is", "total", "order"], "method_description": ["return", "boolean", "valu", "indic", "whether", "instanc", "preced", "given", "valu", "ascend", "sort"], "params": [{"param_type": ["decim"], "param_name": [["below", "or", "equal", "to"], ["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["distanc"], "method_description": ["return", "distanc", "valu", "specifi", "valu"], "params": [{"param_type": ["decim"], "param_name": [["to"], ["other"]], "param_description": []}], "return_value": {"return_type": [["decim"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["advanc"], "method_description": ["return", "new", "valu", "advanc", "given", "distanc"], "params": [{"param_type": ["decim"], "param_name": [["by"], ["n"]], "param_description": []}], "return_value": {"return_type": [["decim"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["ns", "decim", "compar"], "method_description": ["compar", "two", "decim", "valu"], "params": [{"param_type": ["unsaf", "pointer", "decim"], "param_name": [["left", "operand"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "decim"], "param_name": [["right", "operand"]], "param_description": []}], "return_value": {"return_type": [["comparison", "result"]], "return_description": [["nsordereddescend", "leftoperand", "bigger", "rightoperand", "nsorderedascend", "rightoperand", "bigger", "leftoperand", "nsorderedsam", "two", "operand", "equal"]], "return_name": [[]]}}, {"class_name": ["decim"], "method_name": ["encod"], "method_description": ["encod", "decim", "valu", "given", "encod"], "params": [{"param_type": ["encod"], "param_name": [["to"], ["encod"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}], "Vars": [{"var_name": ["sign"], "var_type": ["float", "point", "sign"], "var_description": ["sign", "decim"]}, {"var_name": ["expon"], "var_type": ["int"], "var_description": ["expon", "decim"]}, {"var_name": ["significand"], "var_type": ["decim"], "var_description": ["significand", "decim"]}, {"var_name": ["magnitud"], "var_type": ["decim"], "var_description": ["magnitud", "decim"]}, {"var_name": ["float", "point", "class"], "var_type": ["float", "point", "classif"], "var_description": ["ieee", "754", "class", "type"]}, {"var_name": ["is", "canon"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "represent", "decim", "canon"]}, {"var_name": ["is", "finit"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "decim", "zero", "subnorm", "normal", "infin", "nan"]}, {"var_name": ["is", "infinit"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "decim", "infin"]}, {"var_name": ["is", "na", "n"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "decim", "nan"]}, {"var_name": ["is", "normal"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "decim", "normal", "zero", "subnorm", "infin", "nan"]}, {"var_name": ["is", "sign", "minu"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "decim", "neg", "sign"]}, {"var_name": ["is", "signal"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "decim", "signal", "nan"]}, {"var_name": ["is", "signal", "na", "n"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "decim", "signal", "nan"]}, {"var_name": ["is", "subnorm"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "decim", "subnorm"]}, {"var_name": ["is", "zero"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "valu", "zero"]}, {"var_name": ["next", "down"], "var_type": ["decim"], "var_description": ["greatest", "represent", "valu", "less", "decim"]}, {"var_name": ["next", "up"], "var_type": ["decim"], "var_description": ["least", "represent", "valu", "greater", "decim"]}, {"var_name": ["ulp"], "var_type": ["decim"], "var_description": ["unit", "last", "place", "decim"]}, {"var_name": ["greatest", "finit", "magnitud"], "var_type": ["decim"], "var_description": ["decim", "contain", "largest", "possibl", "noninfinit", "magnitud", "underli", "represent"]}, {"var_name": ["least", "finit", "magnitud"], "var_type": ["decim"], "var_description": ["decim", "contain", "smallest", "possibl", "noninfinit", "magnitud", "underli", "represent"]}, {"var_name": ["least", "nonzero", "magnitud"], "var_type": ["decim"], "var_description": ["decim", "valu", "repres", "smallest", "possibl", "nonzero", "valu", "underli", "represent"]}, {"var_name": ["least", "normal", "magnitud"], "var_type": ["decim"], "var_description": ["decim", "valu", "repres", "smallest", "possibl", "normal", "magnitud", "underli", "represent"]}, {"var_name": ["pi"], "var_type": ["decim"], "var_description": ["mathemat", "constant", "pi"]}, {"var_name": ["nan"], "var_type": ["decim"], "var_description": ["valu", "repres", "number"]}, {"var_name": ["quiet", "na", "n"], "var_type": ["decim"], "var_description": ["quiet", "represent", "notanumb"]}, {"var_name": ["radix"], "var_type": ["int"], "var_description": ["radix", "use", "decim", "number"]}, {"var_name": ["ns", "decim", "max", "size"], "var_type": ["int32"], "var_description": ["maximum", "size", "decim"]}, {"var_name": ["ns", "decim", "no", "scale"], "var_type": ["int32"], "var_description": ["specifi", "number", "digit", "allow", "decim", "separ", "decim", "number", "limit"]}, {"var_name": ["descript"], "var_type": ["string"], "var_description": ["textual", "descript", "decim"]}, {"var_name": ["hash", "valu"], "var_type": ["int"], "var_description": ["comput", "hash", "valu", "decim"]}]}