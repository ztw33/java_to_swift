{"package_name": ["swift"], "class_name": ["unsaf", "pointer"], "class_description": ["use", "instanc", "unsafepoint", "type", "access", "data", "specif", "type", "memori", "type", "data", "pointer", "access", "pointer", "pointe", "type", "unsafepoint", "provid", "autom", "memori", "manag", "align", "guarante", "respons", "handl", "life", "cycl", "memori", "work", "unsaf", "pointer", "avoid", "leak", "undefin", "behaviormemori", "manual", "manag", "either", "untyp", "bound", "specif", "type", "use", "unsafepoint", "type", "access", "manag", "memori", "bound", "specif", "typeth", "memori", "referenc", "unsafepoint", "instanc", "one", "sever", "state", "mani", "pointer", "oper", "must", "appli", "pointer", "memori", "specif", "statey", "must", "keep", "track", "state", "memori", "work", "understand", "chang", "state", "differ", "oper", "perform", "memori", "untyp", "uniniti", "bound", "type", "uniniti", "bound", "type", "initi", "valu", "final", "memori", "alloc", "previous", "may", "dealloc", "leav", "exist", "pointer", "referenc", "unalloc", "memorymemori", "alloc", "type", "pointer", "deiniti", "uniniti", "state", "uniniti", "memori", "must", "initi", "access", "readinginiti", "memori", "valu", "read", "use", "pointer", "pointe", "properti", "subscript", "notat", "follow", "exampl", "ptr", "pointer", "memori", "initi", "valu", "23when", "access", "memori", "unsafepoint", "instanc", "pointe", "type", "must", "consist", "bound", "type", "memori", "need", "access", "memori", "bound", "one", "type", "differ", "type", "swift", "pointer", "type", "provid", "typesaf", "way", "temporarili", "perman", "chang", "bound", "type", "memori", "load", "type", "instanc", "directli", "raw", "memoryan", "unsafepointeruint8", "instanc", "alloc", "eight", "byte", "memori", "uint8point", "use", "exampl", "belowwhen", "need", "temporarili", "access", "pointer", "memori", "differ", "type", "use", "withmemoryreboundtocapac", "method", "exampl", "use", "method", "call", "api", "expect", "pointer", "differ", "type", "layout", "compat", "pointer", "pointe", "follow", "code", "temporarili", "rebind", "memori", "uint8point", "refer", "uint8", "int8", "call", "import", "c", "strlen", "functionwhen", "need", "perman", "rebind", "memori", "differ", "type", "first", "obtain", "raw", "pointer", "memori", "call", "bindmemorytocapac", "method", "raw", "pointer", "follow", "exampl", "bind", "memori", "referenc", "uint8point", "one", "instanc", "uint64", "typeaft", "rebind", "memori", "referenc", "uint8point", "uint64", "access", "pointer", "referenc", "memori", "uint8", "instanc", "undefinedaltern", "access", "memori", "differ", "type", "without", "rebind", "untyp", "memori", "access", "long", "bound", "type", "destin", "type", "trivial", "type", "convert", "pointer", "unsaferawpoint", "instanc", "use", "raw", "pointer", "loadfrombyteoffseta", "method", "read", "valuespoint", "arithmet", "type", "pointer", "count", "stride", "pointer", "pointe", "type", "add", "subtract", "unsafepoint", "instanc", "result", "new", "pointer", "type", "offset", "number", "instanc", "pointe", "typey", "also", "use", "subscript", "notat", "access", "valu", "memori", "specif", "offsetwhen", "call", "function", "method", "unsafepoint", "paramet", "pass", "instanc", "specif", "pointer", "type", "pass", "instanc", "compat", "pointer", "type", "use", "swift", "implicit", "bridg", "pass", "compat", "pointerfor", "exampl", "printintataddress", "function", "follow", "code", "sampl", "expect", "unsafepointerint", "instanc", "first", "parametera", "typic", "swift", "call", "printintataddress", "function", "unsafepoint", "instanc", "exampl", "pass", "intpoint", "pointer", "int", "valu", "printaddressbecaus", "mutabl", "type", "pointer", "implicitli", "cast", "immut", "pointer", "pointe", "type", "pass", "paramet", "also", "call", "printintataddress", "unsafemutablepoint", "instancealtern", "use", "swift", "implicit", "bridg", "pass", "pointer", "instanc", "element", "array", "follow", "exampl", "pass", "pointer", "valu", "variabl", "use", "inout", "syntaxan", "immut", "pointer", "element", "array", "implicitli", "creat", "pass", "array", "argument", "exampl", "use", "implicit", "bridg", "pass", "pointer", "element", "number", "call", "printintataddressy", "also", "use", "inout", "syntax", "pass", "mutabl", "pointer", "element", "array", "printintataddress", "requir", "immut", "pointer", "although", "syntact", "valid", "isnt", "necessaryno", "matter", "way", "call", "printintataddress", "swift", "type", "safeti", "guarante", "pass", "pointer", "type", "requir", "functionin", "case", "pointer", "intimportantth", "pointer", "creat", "implicit", "bridg", "instanc", "array", "element", "valid", "execut", "call", "function", "escap", "pointer", "use", "execut", "function", "undefin", "behavior", "particular", "use", "implicit", "bridg", "call", "unsafepoint", "initi"], "class_inherit_list": [], "interface_list": [["compar"], ["custom", "debug", "string", "convert"], ["custom", "playground", "quick", "lookabl"], ["custom", "reflect"], ["c", "var", "arg"], ["equat"], ["hashabl"], ["strideabl"]], "subclass_list": [], "Methods": [{"class_name": ["unsaf", "pointer"], "method_name": ["advanc"], "method_description": ["return", "pointer", "offset", "pointer", "specifi", "number", "instanc"], "params": [{"param_type": ["int"], "param_name": [["by"], ["n"]], "param_description": ["number", "stride", "pointer", "pointe", "type", "offset", "pointer", "access", "stride", "use", "memorylayoutpointeestrid", "n", "may", "posit", "neg", "zero"]}], "return_value": {"return_type": [["unsaf", "pointer", "pointe"]], "return_description": [["pointer", "offset", "pointer", "n", "instanc", "pointe", "type"]], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": ["dealloc"], "method_description": ["dealloc", "memori", "block", "previous", "alloc", "pointer"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["unsaf", "pointer"], "method_name": ["distanc"], "method_description": ["return", "distanc", "pointer", "given", "pointer", "count", "instanc", "pointer", "pointe", "type"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["to"], ["end"]], "param_description": ["pointer", "calcul", "distanc"]}], "return_value": {"return_type": [["int"]], "return_description": [["distanc", "pointer", "end", "stride", "pointer", "pointe", "type", "access", "stride", "use", "memorylayoutpointeestrid"]], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": ["hash"], "method_description": ["hash", "essenti", "compon", "valu", "feed", "given", "hasher"], "params": [{"param_type": ["inout", "hasher"], "param_name": [["into"], ["hasher"]], "param_description": ["hasher", "use", "combin", "compon", "instanc"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["unsaf", "pointer"], "method_name": ["predecessor"], "method_description": ["return", "pointer", "previou", "consecut", "instanc"], "params": [], "return_value": {"return_type": [["unsaf", "pointer", "pointe"]], "return_description": [["pointer", "shift", "backward", "pointer", "memorylayoutpointeestrid", "byte"]], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": ["successor"], "method_description": ["return", "pointer", "next", "consecut", "instanc"], "params": [], "return_value": {"return_type": [["unsaf", "pointer", "pointe"]], "return_description": [["pointer", "advanc", "pointer", "memorylayoutpointeestrid", "byte"]], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": ["result"], "method_description": ["execut", "given", "closur", "temporarili", "bind", "specifi", "number", "instanc", "given", "type"], "params": [{"param_type": ["t", "type"], "param_name": [["to"], ["type"]], "param_description": ["type", "temporarili", "bind", "memori", "referenc", "pointer", "type", "must", "size", "layout", "compat", "pointer", "pointe", "type"]}, {"param_type": ["int"], "param_name": [["capac"], ["count"]], "param_description": ["number", "instanc", "pointe", "bind", "type"]}, {"param_type": ["unsaf", "pointer", "t"], "param_name": [["bodi"]], "param_description": ["closur", "take", "type", "pointer", "memori", "pointer", "bound", "type", "closur", "pointer", "argument", "valid", "durat", "closur", "execut", "bodi", "return", "valu", "valu", "also", "use", "return", "valu", "withmemoryreboundtocapacity_", "method"]}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["return", "valu", "bodi", "closur", "paramet"]], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": [], "params": [{"param_type": ["int"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": [], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": [], "params": [{"param_type": ["inout", "unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": [], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": [], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": [], "params": [{"param_type": ["inout", "unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "partial", "rang", "extend", "upward", "lower", "bound"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "from", "unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "through", "unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "close", "rang", "contain", "bound"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["close", "rang", "unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "countabl", "close", "rang", "contain", "bound"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["minimum"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["maximum"]], "param_description": []}], "return_value": {"return_type": [["close", "rang", "unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "up", "to", "unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "halfopen", "rang", "contain", "lower", "bound", "upper", "bound"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["rang", "unsaf", "pointer", "pointe"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "first", "pointer", "refer", "earlier", "memori", "locat", "second", "pointer"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": ["pointer"]}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["rh"]], "param_description": ["anoth", "pointer"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "lh", "refer", "memori", "address", "earlier", "rh", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["x"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "pointer", "equal"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": ["pointer"]}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["rh"]], "param_description": ["anoth", "pointer"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "lh", "rh", "refer", "memori", "address", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["x"]], "param_description": []}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["unsaf", "pointer"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["unsaf", "pointer", "pointe"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "lh", "greater", "equal", "rh", "otherwis", "fals"]], "return_name": [[]]}}], "Vars": [{"var_name": ["custom", "mirror"], "var_type": ["mirror"], "var_description": []}, {"var_name": ["custom", "playground", "quick", "look"], "var_type": ["playground", "quick", "look"], "var_description": []}, {"var_name": ["debug", "descript"], "var_type": ["string"], "var_description": ["textual", "represent", "pointer", "suitabl", "debug"]}, {"var_name": ["pointe"], "var_type": ["pointe"], "var_description": ["access", "instanc", "referenc", "pointer"]}]}