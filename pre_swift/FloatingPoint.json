{"package_name": ["swift"], "class_name": ["float", "point"], "class_description": ["floatingpoint", "type", "use", "repres", "fraction", "number", "like", "55", "1000", "314159274", "floatingpoint", "type", "possibl", "rang", "precis", "floatingpoint", "type", "standard", "librari", "float", "doubl", "float80", "availablecr", "new", "instanc", "floatingpoint", "type", "use", "integ", "floatingpoint", "liter", "exampleth", "floatingpoint", "protocol", "declar", "common", "arithmet", "oper", "write", "function", "algorithm", "work", "floatingpoint", "type", "follow", "exampl", "declar", "function", "calcul", "length", "hypotenus", "right", "triangl", "given", "two", "perpendicular", "side", "hypotenuse__", "function", "use", "gener", "paramet", "constrain", "floatingpoint", "protocol", "call", "use", "floatingpoint", "typefloatingpoint", "valu", "repres", "sign", "magnitud", "magnitud", "calcul", "use", "type", "radix", "instanc", "significand", "expon", "magnitud", "calcul", "take", "follow", "form", "floatingpoint", "valu", "x", "type", "f", "exponentiationher", "exampl", "number", "85", "repres", "instanc", "doubl", "type", "defin", "radix", "2type", "conform", "floatingpoint", "protocol", "provid", "basic", "claus", "5", "oper", "ieee", "754", "specif", "base", "precis", "expon", "rang", "fix", "way", "protocol", "enforc", "basic", "requir", "ieee", "754", "floatingpoint", "typein", "addit", "repres", "specif", "number", "floatingpoint", "type", "also", "special", "valu", "work", "overflow", "nonnumer", "result", "calculationani", "valu", "whose", "magnitud", "great", "would", "round", "valu", "outsid", "rang", "represent", "number", "round", "infin", "type", "f", "posit", "neg", "infin", "repres", "finfin", "finfin", "respect", "posit", "infin", "compar", "greater", "everi", "finit", "valu", "neg", "infin", "neg", "infin", "compar", "less", "everi", "finit", "valu", "posit", "infin", "infinit", "valu", "sign", "equal", "otheroper", "infinit", "valu", "follow", "real", "arithmet", "much", "possibl", "ad", "subtract", "finit", "valu", "multipli", "divid", "infin", "nonzero", "finit", "valu", "result", "infinityfloatingpoint", "type", "repres", "valu", "neither", "finit", "number", "infin", "nan", "abbrevi", "number", "compar", "nan", "valu", "includ", "anoth", "nan", "result", "falsebecaus", "test", "whether", "one", "nan", "equal", "anoth", "nan", "result", "fals", "use", "isnan", "properti", "test", "whether", "valu", "nannan", "propag", "mani", "arithmet", "oper", "oper", "mani", "valu", "behavior", "valuabl", "oper", "nan", "simpli", "forward", "valu", "dont", "caus", "runtim", "error", "follow", "exampl", "show", "nan", "valu", "oper", "differ", "contextsimagin", "set", "temperatur", "data", "need", "report", "gener", "statist", "total", "number", "observ", "number", "valid", "observ", "averag", "temperatur", "first", "set", "observ", "celsiu", "pars", "string", "doubl", "valuesnot", "element", "temperaturedata", "array", "valid", "number", "invalid", "string", "pars", "doubl", "failabl", "initi", "exampl", "use", "nilcoalesc", "oper", "provid", "nan", "fallback", "valuenext", "observ", "celsiu", "convert", "fahrenheitth", "nan", "valu", "tempscelsiu", "array", "propag", "convers", "remain", "nan", "tempsfahrenheitbecaus", "calcul", "averag", "observ", "involv", "combin", "everi", "valu", "tempsfahrenheit", "array", "nan", "valu", "caus", "result", "also", "nan", "seen", "exampleinstead", "need", "oper", "specif", "numer", "result", "filter", "nan", "valu", "use", "isnan", "propertyfin", "report", "averag", "temperatur", "observ", "count"], "class_inherit_list": [["hashabl"], ["sign", "numer"], ["strideabl"]], "interface_list": [], "subclass_list": [["binari", "float", "point"]], "Methods": [{"class_name": ["float", "point"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["add", "product"], "method_description": ["add", "product", "two", "given", "valu", "valu", "place", "comput", "without", "intermedi", "roundingrequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["one", "valu", "multipli", "ad", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "multipli"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": ["ad", "product"], "method_description": ["return", "result", "ad", "product", "two", "given", "valu", "valu", "comput", "without", "intermedi", "roundingrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["one", "valu", "multipli", "ad", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "multipli"]}], "return_value": {"return_type": [["self"]], "return_description": [["product", "lh", "rh", "ad", "valu"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["form", "remaind"], "method_description": ["replac", "valu", "remaind", "divid", "given", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["divid", "by"], ["other"]], "param_description": ["valu", "use", "divid", "valu"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": ["form", "squar", "root"], "method_description": ["replac", "valu", "squar", "root", "round", "represent", "valuerequir"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": ["form", "truncat", "remaind"], "method_description": ["replac", "valu", "remaind", "divid", "given", "valu", "use", "truncat", "divisionrequir"], "params": [{"param_type": ["self"], "param_name": [["divid", "by"], ["other"]], "param_description": ["valu", "use", "divid", "valu"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": ["is", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "instanc", "equal", "given", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["to"], ["other"]], "param_description": ["valu", "compar", "valu"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "valu", "instanc", "otherwis", "fals", "either", "valu", "nan", "result", "method", "fals"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["is", "less"], "method_description": ["return", "boolean", "valu", "indic", "whether", "instanc", "less", "given", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["than"], ["other"]], "param_description": ["valu", "compar", "valu"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "valu", "less", "otherwis", "fals", "either", "valu", "nan", "result", "method", "fals"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["is", "less", "than", "or", "equal", "to"], "method_description": ["return", "boolean", "valu", "indic", "whether", "instanc", "less", "equal", "given", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["other"]], "param_description": ["valu", "compar", "valu"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "greater", "valu", "otherwis", "fals", "either", "valu", "nan", "result", "method", "fals"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["is", "total", "order"], "method_description": ["return", "boolean", "valu", "indic", "whether", "instanc", "preced", "tie", "posit", "given", "valu", "ascend", "sortrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["below", "or", "equal", "to"], ["other"]], "param_description": ["floatingpoint", "valu", "compar", "valu"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "valu", "order", "total", "order", "floatingpoint", "type", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["negat"], "method_description": ["replac", "valu", "addit", "inverserequir"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": ["remaind"], "method_description": ["return", "remaind", "valu", "divid", "given", "valuerequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["divid", "by"], ["other"]], "param_description": ["valu", "use", "divid", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [["remaind", "valu", "divid"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["round"], "method_description": ["round", "valu", "integr", "valu", "use", "schoolbook", "round"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": ["round"], "method_description": ["round", "valu", "integr", "valu", "use", "specifi", "round", "rulerequir"], "params": [{"param_type": ["float", "point", "round", "rule"], "param_name": [["rule"]], "param_description": ["round", "rule", "use"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": ["round"], "method_description": ["return", "valu", "round", "integr", "valu", "use", "schoolbook", "round"], "params": [], "return_value": {"return_type": [["self"]], "return_description": [["nearest", "integr", "valu", "two", "integr", "valu", "equal", "close", "integr", "valu", "greater", "magnitud"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["round"], "method_description": ["return", "valu", "round", "integr", "valu", "use", "specifi", "round", "rulerequir", "default", "implement", "provid"], "params": [{"param_type": ["float", "point", "round", "rule"], "param_name": [["rule"]], "param_description": ["round", "rule", "use"]}], "return_value": {"return_type": [["self"]], "return_description": [["integr", "valu", "found", "round", "use", "rule"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["squar", "root"], "method_description": ["return", "squar", "root", "valu", "round", "represent", "valuerequir", "default", "implement", "provid"], "params": [], "return_value": {"return_type": [["self"]], "return_description": [["squar", "root", "valu"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["truncat", "remaind"], "method_description": ["return", "remaind", "valu", "divid", "given", "valu", "use", "truncat", "divisionrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["divid", "by"], ["other"]], "param_description": ["valu", "use", "divid", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [["remaind", "valu", "divid", "use", "truncat", "divis"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["maximum"], "method_description": ["return", "greater", "two", "given", "valuesrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["x"]], "param_description": ["floatingpoint", "valu"]}, {"param_type": ["self"], "param_name": [["y"]], "param_description": ["anoth", "floatingpoint", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [["greater", "x", "whichev", "number", "nan"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["maximum", "magnitud"], "method_description": ["return", "valu", "greater", "magnituderequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["x"]], "param_description": ["floatingpoint", "valu"]}, {"param_type": ["self"], "param_name": [["y"]], "param_description": ["anoth", "floatingpoint", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [["whichev", "x", "greater", "magnitud", "whichev", "number", "nan"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["minimum"], "method_description": ["return", "lesser", "two", "given", "valuesrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["x"]], "param_description": ["floatingpoint", "valu"]}, {"param_type": ["self"], "param_name": [["y"]], "param_description": ["anoth", "floatingpoint", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [["minimum", "x", "whichev", "number", "nan"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": ["minimum", "magnitud"], "method_description": ["return", "valu", "lesser", "magnituderequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["x"]], "param_description": ["floatingpoint", "valu"]}, {"param_type": ["self"], "param_name": [["y"]], "param_description": ["anoth", "floatingpoint", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [["whichev", "x", "lesser", "magnitud", "whichev", "number", "nan"]], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["multipli", "two", "valu", "produc", "product", "round", "represent", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["first", "valu", "multipli"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["second", "valu", "multipli"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["multipli", "two", "valu", "store", "result", "lefthandsid", "variabl", "round", "represent", "valuerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["first", "valu", "multipli"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["second", "valu", "multipli"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["add", "two", "valu", "produc", "sum", "round", "represent", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["first", "valu", "add"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["second", "valu", "add"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["add", "two", "valu", "store", "result", "lefthandsid", "variabl", "round", "represent", "valuerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["first", "valu", "add"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["second", "valu", "add"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["calcul", "addit", "invers", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["operand"]], "param_description": ["valu", "negat"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["subtract", "one", "valu", "anoth", "produc", "differ", "round", "represent", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["numer", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "subtract", "lh"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["subtract", "second", "valu", "first", "store", "differ", "lefthandsid", "variabl", "round", "represent", "valuerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["numer", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "subtract", "lh"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["return", "quotient", "divid", "first", "valu", "second", "round", "represent", "valuerequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["divid", "first", "valu", "second", "store", "quotient", "lefthandsid", "variabl", "round", "represent", "valuerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["float", "point"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}], "Vars": [{"var_name": ["expon"], "var_type": ["self", "expon"], "var_description": ["expon", "floatingpoint", "valuerequir"]}, {"var_name": ["float", "point", "class"], "var_type": ["float", "point", "classif"], "var_description": ["classif", "valuerequir", "default", "implement", "provid"]}, {"var_name": ["is", "canon"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "instanc", "represent", "canon", "formrequir"]}, {"var_name": ["is", "finit"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "instanc", "finiterequir"]}, {"var_name": ["is", "infinit"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "instanc", "infiniterequir"]}, {"var_name": ["is", "na", "n"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "instanc", "nan", "numberrequir"]}, {"var_name": ["is", "normal"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "instanc", "normalrequir"]}, {"var_name": ["is", "signal", "na", "n"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "instanc", "signal", "nanrequir"]}, {"var_name": ["is", "subnorm"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "instanc", "subnormalrequir"]}, {"var_name": ["is", "zero"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "instanc", "equal", "zerorequir"]}, {"var_name": ["next", "down"], "var_type": ["self"], "var_description": ["greatest", "represent", "valu", "compar", "less", "valuerequir", "default", "implement", "provid"]}, {"var_name": ["next", "up"], "var_type": ["self"], "var_description": ["least", "represent", "valu", "compar", "greater", "valuerequir"]}, {"var_name": ["sign"], "var_type": ["float", "point", "sign"], "var_description": ["sign", "floatingpoint", "valuerequir"]}, {"var_name": ["significand"], "var_type": ["self"], "var_description": ["significand", "floatingpoint", "valuerequir"]}, {"var_name": ["ulp"], "var_type": ["self"], "var_description": ["unit", "last", "place", "valuerequir"]}, {"var_name": ["greatest", "finit", "magnitud"], "var_type": ["self"], "var_description": ["greatest", "finit", "number", "represent", "typerequir"]}, {"var_name": ["infin"], "var_type": ["self"], "var_description": ["posit", "infinityrequir"]}, {"var_name": ["least", "nonzero", "magnitud"], "var_type": ["self"], "var_description": ["least", "posit", "numberrequir"]}, {"var_name": ["least", "normal", "magnitud"], "var_type": ["self"], "var_description": ["least", "posit", "normal", "numberrequir"]}, {"var_name": ["nan"], "var_type": ["self"], "var_description": ["quiet", "nan", "numberrequir"]}, {"var_name": ["pi"], "var_type": ["self"], "var_description": ["mathemat", "constant", "pirequir"]}, {"var_name": ["radix"], "var_type": ["int"], "var_description": ["radix", "base", "exponenti", "floatingpoint", "typerequir", "default", "implement", "provid"]}, {"var_name": ["signal", "na", "n"], "var_type": ["self"], "var_description": ["signal", "nan", "numberrequir"]}, {"var_name": ["ulp", "of", "one"], "var_type": ["self"], "var_description": ["unit", "last", "place", "10requir", "default", "implement", "provid"]}]}