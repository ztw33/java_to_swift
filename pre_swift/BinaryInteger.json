{"package_name": ["swift"], "class_name": ["binari", "integ"], "class_description": ["binaryinteg", "protocol", "basi", "integ", "type", "provid", "standard", "librari", "standard", "librari", "integ", "type", "int", "uint32", "conform", "binaryintegery", "creat", "new", "instanc", "type", "conform", "binaryinteg", "protocol", "floatingpoint", "number", "anoth", "binari", "integ", "type", "binaryinteg", "protocol", "provid", "initi", "four", "differ", "kind", "conversiony", "use", "default", "init_", "initi", "creat", "new", "instanc", "your", "sure", "valu", "pass", "represent", "new", "type", "exampl", "instanc", "int16", "repres", "valu", "500", "first", "convers", "code", "sampl", "succe", "valu", "larg", "repres", "int8", "instanc", "second", "convers", "fail", "trigger", "runtim", "errorwhen", "creat", "binari", "integ", "floatingpoint", "valu", "use", "default", "initi", "valu", "round", "toward", "zero", "rang", "check", "follow", "exampl", "valu", "12775", "round", "127", "represent", "int8", "type", "12825", "round", "128", "represent", "int8", "instanc", "trigger", "runtim", "errorus", "initexactli", "initi", "creat", "new", "instanc", "check", "whether", "pass", "valu", "represent", "instead", "trap", "outofrang", "valu", "use", "failabl", "exact", "initi", "result", "nilwhen", "convert", "floatingpoint", "valu", "initexact", "initi", "check", "pass", "valu", "fraction", "part", "valu", "represent", "result", "typeus", "initclamp", "initi", "creat", "new", "instanc", "binari", "integ", "type", "outofrang", "valu", "clamp", "represent", "rang", "type", "type", "result", "valu", "rang", "tmintmaxus", "inittruncatingifneed", "initi", "creat", "new", "instanc", "bit", "pattern", "pass", "valu", "extend", "truncat", "valu", "represent", "necessari", "note", "valu", "may", "preserv", "particularli", "convert", "sign", "unsign", "integ", "type", "destin", "type", "smaller", "bit", "width", "sourc", "type", "follow", "exampl", "show", "extend", "truncat", "work", "nonneg", "integersani", "pad", "perform", "signextend", "pass", "valu", "nonneg", "integ", "extend", "result", "pad", "zero", "neg", "integ", "extend", "result", "pad", "one", "exampl", "show", "sever", "extend", "convers", "neg", "valuenot", "neg", "valu", "signextend", "even", "convert", "unsign", "typey", "use", "relat", "oper", "lessthan", "equalto", "oper", "compar", "instanc", "differ", "binari", "integ", "type", "follow", "exampl", "compar", "instanc", "int", "uint", "uint8", "type"], "class_inherit_list": [["custom", "string", "convert"], ["hashabl"], ["numer"], ["strideabl"]], "interface_list": [], "subclass_list": [["fix", "width", "integ"], ["sign", "integ"], ["unsign", "integ"]], "Methods": [{"class_name": ["binari", "integ"], "method_name": ["quotient", "and", "remaind"], "method_description": ["return", "quotient", "remaind", "valu", "divid", "given", "valuerequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["divid", "by"], ["rh"]], "param_description": ["valu", "divid", "valu"]}], "return_value": {"return_type": [["self"], ["self"]], "return_description": [["tupl", "contain", "quotient", "remaind", "valu", "divid", "rh", "remaind", "sign", "rh"]], "return_name": [[["quotient"]], [["remaind"]]]}}, {"class_name": ["binari", "integ"], "method_name": ["signum"], "method_description": ["return", "1", "valu", "neg", "1", "posit", "otherwis", "0requir", "default", "implement", "provid"], "params": [], "return_value": {"return_type": [["self"]], "return_description": [["sign", "number", "express", "integ", "type"]], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "given", "valu", "equal"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": [], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "remaind", "divid", "first", "valu", "secondrequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh", "rh", "must", "zero"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["divid", "first", "valu", "second", "store", "remaind", "lefthandsid", "variablerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh", "rh", "must", "zero"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "oper", "two", "given", "valuesrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["store", "result", "perform", "bitwis", "oper", "two", "given", "valu", "lefthandsid", "variablerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["multipli", "two", "valu", "produc", "productrequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["first", "valu", "multipli"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["second", "valu", "multipli"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["multipli", "two", "valu", "store", "result", "lefthandsid", "variablerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["first", "valu", "multipli"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["second", "valu", "multipli"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["add", "two", "valu", "produc", "sumrequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["first", "valu", "add"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["second", "valu", "add"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["add", "two", "valu", "store", "result", "lefthandsid", "variablerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["first", "valu", "add"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["second", "valu", "add"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["subtract", "one", "valu", "anoth", "produc", "differencerequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["numer", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "subtract", "lh"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["subtract", "second", "valu", "first", "store", "differ", "lefthandsid", "variablerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["numer", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "subtract", "lh"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "quotient", "divid", "first", "valu", "secondrequir"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh", "rh", "must", "zero"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["divid", "first", "valu", "second", "store", "quotient", "lefthandsid", "variablerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh", "rh", "must", "zero"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "leftrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["store", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left", "lefthandsid", "variablerequir", "default", "implement", "provid"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "given", "valu", "equal"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "rightrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["store", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right", "lefthandsid", "variablerequir", "default", "implement", "provid"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "xor", "oper", "two", "given", "valuesrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["store", "result", "perform", "bitwis", "xor", "oper", "two", "given", "valu", "lefthandsid", "variablerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "oper", "two", "given", "valuesrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["store", "result", "perform", "bitwis", "oper", "two", "given", "valu", "lefthandsid", "variablerequir"], "params": [{"param_type": ["inout", "self"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["self"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["binari", "integ"], "method_name": [], "method_description": ["return", "invers", "bit", "set", "argumentrequir", "default", "implement", "provid"], "params": [{"param_type": ["self"], "param_name": [["x"]], "param_description": []}], "return_value": {"return_type": [["self"]], "return_description": [], "return_name": [[]]}}], "Vars": [{"var_name": ["bit", "width"], "var_type": ["int"], "var_description": ["number", "bit", "current", "binari", "represent", "valuerequir"]}, {"var_name": ["trail", "zero", "bit", "count"], "var_type": ["int"], "var_description": ["number", "trail", "zero", "valu", "binari", "representationrequir"]}, {"var_name": ["word"], "var_type": ["self", "word"], "var_description": ["collect", "contain", "word", "valu", "binari", "represent", "order", "least", "signific", "significantrequir"]}, {"var_name": ["is", "sign"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "type", "sign", "integ", "typerequir", "default", "implement", "provid"]}]}