{"package_name": ["foundat"], "class_name": ["cg", "float"], "class_description": ["size", "precis", "type", "depend", "cpu", "architectur", "build", "64bit", "cpu", "cgfloat", "type", "64bit", "ieee", "doubleprecis", "float", "point", "type", "equival", "doubl", "type", "build", "32bit", "cpu", "cgfloat", "type", "32bit", "ieee", "singleprecis", "float", "point", "type", "equival", "float", "type"], "class_inherit_list": [], "interface_list": [["binari", "float", "point"], ["custom", "reflect"], ["custom", "string", "convert"], ["hashabl"], ["sign", "numer"], ["strideabl"]], "subclass_list": [], "Methods": [{"class_name": ["cg", "float"], "method_name": ["add", "product"], "method_description": [], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["ad", "product"], "method_description": ["return", "result", "ad", "product", "two", "given", "valu", "valu", "comput", "without", "intermedi", "round"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["product", "lh", "rh", "ad", "valu"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["advanc"], "method_description": ["return", "self", "x", "selfdistanceto", "x", "approxim", "n"], "params": [{"param_type": ["cg", "float"], "param_name": [["by"], ["amount"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["distanc"], "method_description": ["return", "stride", "x", "selfadvancedbi", "x", "approxim"], "params": [{"param_type": ["cg", "float"], "param_name": [["to"], ["other"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["encod"], "method_description": [], "params": [{"param_type": ["encod"], "param_name": [["to"], ["encod"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["form", "remaind"], "method_description": [], "params": [{"param_type": ["cg", "float"], "param_name": [["divid", "by"], ["other"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["form", "squar", "root"], "method_description": [], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["form", "truncat", "remaind"], "method_description": ["replac", "self", "remaind", "self", "divid", "use", "truncat", "divis", "similar", "c", "standard", "librari", "function", "fmod"], "params": [{"param_type": ["cg", "float"], "param_name": [["divid", "by"], ["other"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["is", "equal"], "method_description": ["ieee", "754", "equal", "predic"], "params": [{"param_type": ["cg", "float"], "param_name": [["to"], ["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["is", "less"], "method_description": ["ieee", "754", "lessthan", "predic"], "params": [{"param_type": ["cg", "float"], "param_name": [["than"], ["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["is", "less", "than", "or", "equal", "to"], "method_description": ["ieee", "754", "lessthanorequ", "predic"], "params": [{"param_type": ["cg", "float"], "param_name": [["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["is", "total", "order"], "method_description": ["return", "boolean", "valu", "indic", "whether", "instanc", "preced", "tie", "posit", "given", "valu", "ascend", "sort"], "params": [{"param_type": ["cg", "float"], "param_name": [["below", "or", "equal", "to"], ["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "valu", "order", "total", "order", "floatingpoint", "type", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["negat"], "method_description": ["replac", "self", "addit", "invers"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["negat"], "method_description": ["replac", "valu", "addit", "invers"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["remaind"], "method_description": ["return", "remaind", "valu", "divid", "given", "valu"], "params": [{"param_type": ["cg", "float"], "param_name": [["divid", "by"], ["other"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["remaind", "valu", "divid"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["round"], "method_description": ["round", "valu", "integr", "valu", "use", "schoolbook", "round"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["round"], "method_description": [], "params": [{"param_type": ["float", "point", "round", "rule"], "param_name": [["rule"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": ["round"], "method_description": ["return", "valu", "round", "integr", "valu", "use", "schoolbook", "round"], "params": [], "return_value": {"return_type": [["cg", "float"]], "return_description": [["nearest", "integr", "valu", "two", "integr", "valu", "equal", "close", "integr", "valu", "greater", "magnitud"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["round"], "method_description": ["return", "valu", "round", "integr", "valu", "use", "specifi", "round", "rule"], "params": [{"param_type": ["float", "point", "round", "rule"], "param_name": [["rule"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["integr", "valu", "found", "round", "use", "rule"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["squar", "root"], "method_description": ["return", "squar", "root", "valu", "round", "represent", "valu"], "params": [], "return_value": {"return_type": [["cg", "float"]], "return_description": [["squar", "root", "valu"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["truncat", "remaind"], "method_description": ["return", "remaind", "valu", "divid", "given", "valu", "use", "truncat", "divis"], "params": [{"param_type": ["cg", "float"], "param_name": [["divid", "by"], ["other"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["remaind", "valu", "divid", "use", "truncat", "divis"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["maximum"], "method_description": ["return", "greater", "two", "given", "valu"], "params": [{"param_type": ["cg", "float"], "param_name": [["x"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["greater", "x", "whichev", "number", "nan"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["maximum", "magnitud"], "method_description": ["return", "valu", "greater", "magnitud"], "params": [{"param_type": ["cg", "float"], "param_name": [["x"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["whichev", "x", "greater", "magnitud", "whichev", "number", "nan"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["minimum"], "method_description": ["return", "lesser", "two", "given", "valu"], "params": [{"param_type": ["cg", "float"], "param_name": [["x"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["minimum", "x", "whichev", "number", "nan"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["minimum", "magnitud"], "method_description": ["return", "valu", "lesser", "magnitud"], "params": [{"param_type": ["cg", "float"], "param_name": [["x"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["whichev", "x", "lesser", "magnitud", "whichev", "number", "nan"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["random"], "method_description": ["return", "random", "valu", "within", "specifi", "rang"], "params": [{"param_type": ["close", "rang", "cg", "float"], "param_name": [["in"], ["rang"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["random", "valu", "within", "bound", "rang"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["random"], "method_description": ["return", "random", "valu", "within", "specifi", "rang"], "params": [{"param_type": ["rang", "cg", "float"], "param_name": [["in"], ["rang"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["random", "valu", "within", "bound", "rang"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["random"], "method_description": ["return", "random", "valu", "within", "specifi", "rang", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["close", "rang", "cg", "float"], "param_name": [["in"], ["rang"]], "param_description": []}, {"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["random", "valu", "within", "bound", "rang"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": ["random"], "method_description": ["return", "random", "valu", "within", "specifi", "rang", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["rang", "cg", "float"], "param_name": [["in"], ["rang"]], "param_description": []}, {"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["random", "valu", "within", "bound", "rang"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": [], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": [], "params": [{"param_type": ["inout", "cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "given", "number", "unchang"], "params": [{"param_type": ["cg", "float"], "param_name": [["x"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["given", "argument", "without", "chang"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": [], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": [], "params": [{"param_type": ["inout", "cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "addit", "invers", "specifi", "valu"], "params": [{"param_type": ["cg", "float"], "param_name": [["operand"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [["addit", "invers", "argument"]], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": [], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": [], "params": [{"param_type": ["inout", "cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "partial", "rang", "extend", "upward", "lower", "bound"], "params": [{"param_type": ["cg", "float"], "param_name": [["minimum"]], "param_description": []}], "return_value": {"return_type": [["partial", "rang", "from", "cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["cg", "float"], "param_name": [["maximum"]], "param_description": []}], "return_value": {"return_type": [["partial", "rang", "through", "cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "close", "rang", "contain", "bound"], "params": [{"param_type": ["cg", "float"], "param_name": [["minimum"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["maximum"]], "param_description": []}], "return_value": {"return_type": [["close", "rang", "cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["cg", "float"], "param_name": [["maximum"]], "param_description": []}], "return_value": {"return_type": [["partial", "rang", "up", "to", "cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "halfopen", "rang", "contain", "lower", "bound", "upper", "bound"], "params": [{"param_type": ["cg", "float"], "param_name": [["minimum"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["maximum"]], "param_description": []}], "return_value": {"return_type": [["rang", "cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": [], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["cg", "float"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": [], "params": [{"param_type": ["inout", "cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["cg", "float"], "param_name": [["x"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["cg", "float"], "param_name": [["x"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["cg", "float"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["cg", "float"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["cg", "float"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "lh", "greater", "equal", "rh", "otherwis", "fals"]], "return_name": [[]]}}], "Vars": [{"var_name": ["binad"], "var_type": ["cg", "float"], "var_description": ["leastmagnitud", "member", "binad", "self"]}, {"var_name": ["bit", "pattern"], "var_type": ["u", "int"], "var_description": []}, {"var_name": ["custom", "mirror"], "var_type": ["mirror"], "var_description": ["mirror", "reflect", "cgfloat", "instanc"]}, {"var_name": ["descript"], "var_type": ["string"], "var_description": ["textual", "represent", "self"]}, {"var_name": ["expon"], "var_type": ["int"], "var_description": ["integ", "part", "baser", "logarithm", "magnitud", "self", "r", "radix", "2", "binari", "10", "decim", "implement", "ieee", "754", "logb", "oper"]}, {"var_name": ["expon", "bit", "pattern"], "var_type": ["u", "int"], "var_description": ["raw", "encod", "expon", "field", "floatingpoint", "valu"]}, {"var_name": ["float", "point", "class"], "var_type": ["float", "point", "classif"], "var_description": []}, {"var_name": ["float", "point", "class"], "var_type": ["float", "point", "classif"], "var_description": ["classif", "valu"]}, {"var_name": ["hash", "valu"], "var_type": ["int"], "var_description": ["hash", "valu"]}, {"var_name": ["is", "canon"], "var_type": ["bool"], "var_description": ["true", "self", "canon"]}, {"var_name": ["is", "finit"], "var_type": ["bool"], "var_description": ["true", "iff", "self", "zero", "subnorm", "normal", "infin", "nan"]}, {"var_name": ["is", "infinit"], "var_type": ["bool"], "var_description": ["true", "iff", "self", "infin"]}, {"var_name": ["is", "na", "n"], "var_type": ["bool"], "var_description": ["true", "iff", "self", "nan"]}, {"var_name": ["is", "normal"], "var_type": ["bool"], "var_description": ["true", "iff", "self", "normal", "zero", "subnorm", "infin", "nan"]}, {"var_name": ["is", "signal", "na", "n"], "var_type": ["bool"], "var_description": ["true", "self", "signal", "nan"]}, {"var_name": ["is", "subnorm"], "var_type": ["bool"], "var_description": ["true", "iff", "self", "subnorm"]}, {"var_name": ["is", "zero"], "var_type": ["bool"], "var_description": ["true", "iff", "self", "00", "00"]}, {"var_name": ["magnitud"], "var_type": ["cg", "float"], "var_description": []}, {"var_name": ["nativ"], "var_type": ["cg", "float", "nativ", "type"], "var_description": ["nativ", "valu"]}, {"var_name": ["nativ"], "var_type": ["cg", "float", "nativ", "type"], "var_description": ["nativ", "valu"]}, {"var_name": ["next", "down"], "var_type": ["cg", "float"], "var_description": ["greatest", "represent", "valu", "compar", "less", "valu"]}, {"var_name": ["next", "up"], "var_type": ["cg", "float"], "var_description": ["least", "represent", "valu", "compar", "greater", "self"]}, {"var_name": ["sign"], "var_type": ["float", "point", "sign"], "var_description": ["minu", "sign", "bit", "self", "set", "plu", "otherwis", "implement", "ieee", "754", "signbit", "oper"]}, {"var_name": ["significand"], "var_type": ["cg", "float"], "var_description": ["signific", "digit", "mantissa", "floatingpoint", "number"]}, {"var_name": ["significand", "bit", "pattern"], "var_type": ["u", "int"], "var_description": ["raw", "encod", "significand", "field", "floatingpoint", "valu"]}, {"var_name": ["significand", "width"], "var_type": ["int"], "var_description": ["number", "bit", "requir", "repres", "significand"]}, {"var_name": ["ulp"], "var_type": ["cg", "float"], "var_description": ["unit", "last", "place", "self"]}, {"var_name": ["expon", "bit", "count"], "var_type": ["int"], "var_description": ["number", "bit", "use", "repres", "expon"]}, {"var_name": ["greatest", "finit", "magnitud"], "var_type": ["cg", "float"], "var_description": ["greatest", "finit", "number"]}, {"var_name": ["infin"], "var_type": ["cg", "float"], "var_description": ["posit", "infin"]}, {"var_name": ["least", "nonzero", "magnitud"], "var_type": ["cg", "float"], "var_description": ["least", "posit", "number"]}, {"var_name": ["least", "normal", "magnitud"], "var_type": ["cg", "float"], "var_description": ["least", "posit", "normal", "number"]}, {"var_name": ["nan"], "var_type": ["cg", "float"], "var_description": ["quiet", "nan"]}, {"var_name": ["pi"], "var_type": ["cg", "float"], "var_description": ["mathemat", "constant", "314159"]}, {"var_name": ["radix"], "var_type": ["int"], "var_description": ["radix", "base", "exponenti", "floatingpoint", "type"]}, {"var_name": ["signal", "na", "n"], "var_type": ["cg", "float"], "var_description": ["signal", "nan", "notanumb"]}, {"var_name": ["significand", "bit", "count"], "var_type": ["int"], "var_description": ["fixedwidth", "floatingpoint", "type", "number", "fraction", "significand", "bit"]}, {"var_name": ["ulp", "of", "one"], "var_type": ["cg", "float"], "var_description": ["unit", "last", "place", "10"]}]}