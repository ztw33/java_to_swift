{"package_name": ["swift"], "class_name": ["substr"], "class_description": ["creat", "slice", "string", "substr", "instanc", "result", "oper", "substr", "fast", "effici", "substr", "share", "storag", "origin", "string", "substr", "type", "present", "interfac", "string", "avoid", "defer", "copi", "string", "contentsth", "follow", "exampl", "creat", "greet", "string", "find", "substr", "first", "sentencey", "perform", "mani", "string", "oper", "substr", "find", "length", "first", "sentenc", "creat", "uppercas", "versionthi", "exampl", "defin", "rawdata", "string", "unstructur", "data", "use", "string", "prefixwhil", "method", "creat", "substr", "numer", "prefixwhen", "need", "store", "substr", "pass", "function", "requir", "string", "instanc", "convert", "string", "use", "string_", "initi", "call", "initi", "copi", "content", "substr", "new", "stringaltern", "convert", "function", "take", "string", "one", "gener", "stringprotocol", "protocol", "follow", "code", "declar", "gener", "version", "parseandaddone_", "functiony", "call", "gener", "function", "instanc", "either", "string", "substringimportantdont", "store", "substr", "longer", "need", "perform", "specif", "oper", "substr", "hold", "refer", "entir", "storag", "string", "come", "portion", "present", "even", "refer", "origin", "string", "store", "substr", "may", "therefor", "prolong", "lifetim", "string", "data", "longer", "otherwis", "access", "appear", "memori", "leakag"], "class_inherit_list": [], "interface_list": [["custom", "debug", "string", "convert"], ["custom", "playground", "quick", "lookabl"], ["custom", "reflect"], ["custom", "string", "convert"], ["express", "by", "extend", "graphem", "cluster", "liter"], ["express", "by", "string", "liter"], ["express", "by", "unicod", "scalar", "liter"], ["lossless", "string", "convert"], ["rang", "replac", "collect"], ["string", "protocol"], ["text", "output", "stream"], ["text", "output", "streamabl"]], "subclass_list": [], "Methods": [{"class_name": ["substr"], "method_name": ["all", "satisfi"], "method_description": ["return", "boolean", "valu", "indic", "whether", "everi", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "satisfi", "condit"]}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "contain", "element", "satisfi", "predic", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["append"], "method_description": ["add", "element", "end", "collect"], "params": [{"param_type": ["charact"], "param_name": [["new", "element"]], "param_description": ["element", "append", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["append"], "method_description": ["add", "element", "sequenc", "collect", "end", "collect"], "params": [{"param_type": ["sequenc"], "param_name": [["content", "of"], ["new", "element"]], "param_description": ["element", "append", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["append"], "method_description": [], "params": [{"param_type": ["sequenc"], "param_name": [["content", "of"], ["element"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["compact", "map"], "method_description": ["return", "array", "contain", "nonnil", "result", "call", "given", "transform", "element", "sequenc"], "params": [{"param_type": ["charact"], "param_name": [["transform"]], "param_description": ["closur", "accept", "element", "sequenc", "argument", "return", "option", "valu"]}], "return_value": {"return_type": [["element", "of", "result", "rethrow", "element", "of", "result"]], "return_description": [["array", "nonnil", "result", "call", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["contain"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "contain", "given", "element"], "params": [{"param_type": ["charact"], "param_name": [["element"]], "param_description": ["element", "find", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "element", "found", "sequenc", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["contain"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "contain", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "repres", "match"]}], "return_value": {"return_type": [[]], "return_description": [["true", "sequenc", "contain", "element", "satisfi", "predic", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["distanc"], "method_description": [], "params": [{"param_type": ["substr", "index"], "param_name": [["from"], ["start"]], "param_description": []}, {"param_type": ["substr", "index"], "param_name": [["to"], ["end"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["drop"], "method_description": ["return", "subsequ", "skip", "element", "predic", "return", "true", "return", "remain", "element"], "params": [{"param_type": ["charact"], "param_name": [["while"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "true", "element", "skip", "fals", "includ", "predic", "return", "fals", "call"]}], "return_value": {"return_type": [["bool", "rethrow", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "first", "element", "sequenc"], "params": [], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "start", "first", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "given", "number", "initi", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "drop", "begin", "collect", "k", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "start", "specifi", "number", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "last", "element", "sequenc"], "params": [], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "leav", "last", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "specifi", "number", "final", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "drop", "end", "collect", "k", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "leav", "k", "element", "end"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["element", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "anoth", "sequenc", "contain", "element", "order"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "sequenc", "contain", "element", "order"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["element", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "anoth", "sequenc", "contain", "equival", "element", "order", "use", "given", "predic", "equival", "test"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["charact"], "param_name": [["by"], ["are", "equival"]], "param_description": ["predic", "return", "true", "two", "argument", "equival", "otherwis", "fals"]}, {"param_type": ["sequenc", "element"], "param_name": [["sequenc", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "contain", "equival", "item", "use", "areequival", "equival", "test", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["enumer"], "method_description": ["return", "sequenc", "pair", "n", "x", "n", "repres", "consecut", "integ", "start", "zero", "x", "repres", "element", "sequenc"], "params": [], "return_value": {"return_type": [["enumer", "sequenc", "substr"]], "return_description": [["sequenc", "pair", "enumer", "sequenc"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["filter"], "method_description": [], "params": [{"param_type": ["substr", "element"], "param_name": [["is", "includ"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["first"], "method_description": ["return", "first", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "element", "match"]}], "return_value": {"return_type": [[]], "return_description": [["first", "element", "sequenc", "satisfi", "predic", "nil", "element", "satisfi", "predic"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["first", "index"], "method_description": ["return", "first", "index", "specifi", "valu", "appear", "collect"], "params": [{"param_type": ["charact"], "param_name": [["of"], ["element"]], "param_description": ["element", "search", "collect"]}], "return_value": {"return_type": [["string", "index"]], "return_description": [["first", "index", "element", "found", "element", "found", "collect", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["first", "index"], "method_description": ["return", "first", "index", "element", "collect", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "repres", "match"]}], "return_value": {"return_type": [[]], "return_description": [["index", "first", "element", "predic", "return", "true", "element", "collect", "satisfi", "given", "predic", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["flat", "map"], "method_description": [], "params": [{"param_type": ["charact"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["string", "rethrow", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["for", "each"], "method_description": ["call", "given", "closur", "element", "sequenc", "order", "forin", "loop"], "params": [{"param_type": ["charact"], "param_name": [["bodi"]], "param_description": ["closur", "take", "element", "sequenc", "paramet"]}], "return_value": {"return_type": [["void", "rethrow"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["form", "index"], "method_description": ["offset", "given", "index", "specifi", "distanc"], "params": [{"param_type": ["inout", "string", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset", "distanc", "must", "neg", "unless", "collect", "conform", "bidirectionalcollect", "protocol"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["form", "index"], "method_description": ["offset", "given", "index", "specifi", "distanc", "equal", "given", "limit", "index"], "params": [{"param_type": ["inout", "string", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset", "distanc", "must", "neg", "unless", "collect", "conform", "bidirectionalcollect", "protocol"]}, {"param_type": ["string", "index"], "param_name": [["limit", "by"], ["limit"]], "param_description": ["valid", "index", "collect", "use", "limit", "distanc", "0", "limit", "less", "effect", "likewis", "distanc", "0", "limit", "greater", "effect"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "offset", "exactli", "distanc", "step", "without", "go", "beyond", "limit", "otherwis", "fals", "return", "valu", "fals", "valu", "equal", "limit"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["form", "index"], "method_description": ["replac", "given", "index", "successor"], "params": [{"param_type": ["inout", "string", "index"], "param_name": [["after"], ["i"]], "param_description": ["valid", "index", "collect", "must", "less", "endindex"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["form", "index"], "method_description": ["replac", "given", "index", "predecessor"], "params": [{"param_type": ["inout", "string", "index"], "param_name": [["befor"], ["i"]], "param_description": ["valid", "index", "collect", "must", "greater", "startindex"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["ha", "prefix"], "method_description": ["return", "boolean", "valu", "indic", "whether", "string", "begin", "specifi", "prefix"], "params": [{"param_type": ["string", "protocol"], "param_name": [["prefix"]], "param_description": ["possibl", "prefix", "test", "string"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "string", "begin", "prefix", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["ha", "suffix"], "method_description": ["return", "boolean", "valu", "indic", "whether", "string", "end", "specifi", "suffix"], "params": [{"param_type": ["string", "protocol"], "param_name": [["suffix"]], "param_description": ["possibl", "suffix", "test", "string"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "string", "end", "suffix", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["hash"], "method_description": ["hash", "essenti", "compon", "valu", "feed", "given", "hasher"], "params": [{"param_type": ["inout", "hasher"], "param_name": [["into"], ["hasher"]], "param_description": ["hasher", "use", "combin", "compon", "instanc"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["index"], "method_description": [], "params": [{"param_type": ["substr", "index"], "param_name": [["i"]], "param_description": []}, {"param_type": ["int"], "param_name": [["offset", "by"], ["n"]], "param_description": []}], "return_value": {"return_type": [["substr", "index"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["index"], "method_description": [], "params": [{"param_type": ["substr", "index"], "param_name": [["i"]], "param_description": []}, {"param_type": ["int"], "param_name": [["offset", "by"], ["n"]], "param_description": []}, {"param_type": ["substr", "index"], "param_name": [["limit", "by"], ["limit"]], "param_description": []}], "return_value": {"return_type": [["substr", "index"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["index"], "method_description": [], "params": [{"param_type": ["substr", "index"], "param_name": [["after"], ["i"]], "param_description": []}], "return_value": {"return_type": [["substr", "index"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["index"], "method_description": [], "params": [{"param_type": ["substr", "index"], "param_name": [["befor"], ["i"]], "param_description": []}], "return_value": {"return_type": [["substr", "index"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["insert"], "method_description": ["insert", "new", "element", "collect", "specifi", "posit"], "params": [{"param_type": ["charact"], "param_name": [["new", "element"]], "param_description": ["new", "element", "insert", "collect"]}, {"param_type": ["string", "index"], "param_name": [["at"], ["i"]], "param_description": ["posit", "insert", "new", "element", "index", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["insert"], "method_description": ["insert", "element", "sequenc", "collect", "specifi", "posit"], "params": [{"param_type": ["collect"], "param_name": [["content", "of"], ["new", "element"]], "param_description": ["new", "element", "insert", "collect"]}, {"param_type": ["string", "index"], "param_name": [["at"], ["i"]], "param_description": ["posit", "insert", "new", "element", "index", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["last"], "method_description": ["return", "last", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "element", "match"]}], "return_value": {"return_type": [[]], "return_description": [["last", "element", "sequenc", "satisfi", "predic", "nil", "element", "satisfi", "predic"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["last", "index"], "method_description": ["return", "last", "index", "specifi", "valu", "appear", "collect"], "params": [{"param_type": ["charact"], "param_name": [["of"], ["element"]], "param_description": ["element", "search", "collect"]}], "return_value": {"return_type": [["string", "index"]], "return_description": [["last", "index", "element", "found", "element", "found", "collect", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["last", "index"], "method_description": ["return", "index", "last", "element", "collect", "match", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "repres", "match"]}], "return_value": {"return_type": [[]], "return_description": [["index", "last", "element", "collect", "match", "predic", "nil", "element", "match"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["lexicograph", "preced"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "preced", "anoth", "sequenc", "lexicograph", "dictionari", "order", "use", "lessthan", "oper", "compar", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "sequenc", "preced", "dictionari", "order", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["lexicograph", "preced"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "preced", "anoth", "sequenc", "lexicograph", "dictionari", "order", "use", "given", "predic", "compar", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["charact"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "preced", "dictionari", "order", "order", "areinincreasingord", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["lowercas"], "method_description": [], "params": [], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["make", "iter"], "method_description": ["return", "iter", "element", "collect"], "params": [], "return_value": {"return_type": [["index", "iter", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["map"], "method_description": ["return", "array", "contain", "result", "map", "given", "closur", "sequenc", "element"], "params": [{"param_type": ["charact"], "param_name": [["transform"]], "param_description": ["map", "closur", "transform", "accept", "element", "sequenc", "paramet", "return", "transform", "valu", "differ", "type"]}], "return_value": {"return_type": [["t", "rethrow", "t"]], "return_description": [["array", "contain", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["map"], "method_description": ["return", "array", "contain", "result", "map", "given", "closur", "sequenc", "element"], "params": [{"param_type": ["charact"], "param_name": [["transform"]], "param_description": ["map", "closur", "transform", "accept", "element", "sequenc", "paramet", "return", "transform", "valu", "differ", "type"]}], "return_value": {"return_type": [["t", "rethrow", "t"]], "return_description": [["array", "contain", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["max"], "method_description": ["return", "maximum", "element", "sequenc"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["sequenc", "maximum", "element", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["max"], "method_description": ["return", "maximum", "element", "sequenc", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["charact"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "charact"]], "return_description": [["sequenc", "maximum", "element", "sequenc", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["min"], "method_description": ["return", "minimum", "element", "sequenc"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["sequenc", "minimum", "element", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["min"], "method_description": ["return", "minimum", "element", "sequenc", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["charact"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "charact"]], "return_description": [["sequenc", "minimum", "element", "accord", "areinincreasingord", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["pop", "first"], "method_description": ["remov", "return", "first", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["first", "element", "collect", "collect", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["pop", "last"], "method_description": ["remov", "return", "last", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["last", "element", "collect", "collect", "one", "element", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["pop", "last"], "method_description": ["remov", "return", "last", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["last", "element", "collect", "collect", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["pop", "last"], "method_description": ["remov", "return", "last", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["last", "element", "collect", "collect", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "specifi", "maximum", "length", "contain", "initi", "element", "collect"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": ["maximum", "number", "element", "return", "maxlength", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "start", "begin", "collect", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "specifi", "posit"], "params": [{"param_type": ["string", "index"], "param_name": [["through"], ["posit"]], "param_description": []}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "includ", "specifi", "posit"], "params": [{"param_type": ["string", "index"], "param_name": [["up", "to"], ["end"]], "param_description": ["past", "end", "index", "result", "subsequ", "end", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "contain", "initi", "element", "predic", "return", "fals", "skip", "remain", "element"], "params": [{"param_type": ["charact"], "param_name": [["while"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "true", "element", "includ", "fals", "exclud", "predic", "return", "fals", "call"]}], "return_value": {"return_type": [["bool", "rethrow", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["random", "element"], "method_description": ["return", "random", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["random", "element", "collect", "collect", "empti", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["random", "element"], "method_description": ["return", "random", "element", "collect", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": ["random", "number", "gener", "use", "choos", "random", "element"]}], "return_value": {"return_type": [["charact"]], "return_description": [["random", "element", "collect", "collect", "empti", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["reduc"], "method_description": ["return", "result", "combin", "element", "sequenc", "use", "given", "closur"], "params": [{"param_type": ["result"], "param_name": [["initi", "result"]], "param_description": ["valu", "use", "initi", "accumul", "valu", "initialresult", "pass", "nextpartialresult", "first", "time", "closur", "execut"]}, {"param_type": ["result"], "param_name": [["next", "partial", "result"]], "param_description": ["closur", "combin", "accumul", "valu", "element", "sequenc", "new", "accumul", "valu", "use", "next", "call", "nextpartialresult", "closur", "return", "caller"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["final", "accumul", "valu", "sequenc", "element", "result", "initialresult"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["reduc"], "method_description": ["return", "result", "combin", "element", "sequenc", "use", "given", "closur"], "params": [{"param_type": ["result"], "param_name": [["into"], ["initi", "result"]], "param_description": ["valu", "use", "initi", "accumul", "valu"]}, {"param_type": ["inout", "result"], "param_name": [["updat", "accumul", "result"]], "param_description": ["closur", "updat", "accumul", "valu", "element", "sequenc"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["rethrow", "result"]], "return_description": [["final", "accumul", "valu", "sequenc", "element", "result", "initialresult"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov"], "method_description": ["remov", "return", "element", "specifi", "posit"], "params": [{"param_type": ["string", "index"], "param_name": [["at"], ["posit"]], "param_description": ["posit", "element", "remov", "posit", "must", "valid", "index", "collect", "equal", "collect", "end", "index"]}], "return_value": {"return_type": [["charact"]], "return_description": [["remov", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov", "all"], "method_description": ["remov", "element", "collect"], "params": [{"param_type": ["bool"], "param_name": [["keep", "capac"], ["keep", "capac"]], "param_description": ["pass", "true", "request", "collect", "avoid", "releas", "storag", "retain", "collect", "storag", "use", "optim", "your", "plan", "grow", "collect", "default", "valu", "fals"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["remov", "all"], "method_description": ["remov", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "element", "remov", "collect"]}], "return_value": {"return_type": [[]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov", "first"], "method_description": ["remov", "return", "first", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["first", "element", "collect"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov", "first"], "method_description": ["remov", "return", "first", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["first", "element", "collect"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov", "first"], "method_description": ["remov", "return", "first", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["remov", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov", "first"], "method_description": ["remov", "specifi", "number", "element", "begin", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "k", "must", "greater", "equal", "zero", "must", "less", "equal", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["remov", "first"], "method_description": ["remov", "specifi", "number", "element", "begin", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "collect", "k", "must", "greater", "equal", "zero", "must", "exceed", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["remov", "first"], "method_description": ["remov", "specifi", "number", "element", "begin", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "collect", "k", "must", "greater", "equal", "zero", "must", "exceed", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["remov", "last"], "method_description": ["remov", "return", "last", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["last", "element", "collect"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov", "last"], "method_description": ["remov", "return", "last", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["last", "element", "collect"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov", "last"], "method_description": ["remov", "return", "last", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["last", "element", "collect"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["remov", "last"], "method_description": ["remov", "given", "number", "element", "end", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "k", "must", "greater", "equal", "zero", "must", "less", "equal", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["remov", "last"], "method_description": ["remov", "specifi", "number", "element", "end", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "collect", "k", "must", "greater", "equal", "zero", "must", "exceed", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["remov", "last"], "method_description": ["remov", "specifi", "number", "element", "end", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "collect", "k", "must", "greater", "equal", "zero", "must", "exceed", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["remov", "subrang"], "method_description": ["remov", "element", "specifi", "subrang", "collect"], "params": [{"param_type": ["rang", "string", "index"], "param_name": [["bound"]], "param_description": ["rang", "collect", "remov", "bound", "rang", "must", "valid", "indic", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["remov", "subrang"], "method_description": ["remov", "element", "specifi", "subrang", "collect"], "params": [{"param_type": ["rang", "express"], "param_name": [["bound"]], "param_description": ["rang", "collect", "remov", "bound", "rang", "must", "valid", "indic", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["replac", "subrang"], "method_description": [], "params": [{"param_type": ["rang", "substr", "index"], "param_name": [["bound"]], "param_description": []}, {"param_type": ["substr"], "param_name": [["with"], ["new", "element"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["replac", "subrang"], "method_description": [], "params": [{"param_type": ["rang", "substr", "index"], "param_name": [["bound"]], "param_description": []}, {"param_type": ["collect"], "param_name": [["with"], ["new", "element"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["r"], "method_description": ["replac", "specifi", "subrang", "element", "given", "collect"], "params": [{"param_type": ["rang", "express"], "param_name": [["subrang"]], "param_description": ["subrang", "collect", "replac", "bound", "rang", "must", "valid", "indic", "collect"]}, {"param_type": ["collect"], "param_name": [["with"], ["new", "element"]], "param_description": ["new", "element", "add", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["reserv", "capac"], "method_description": ["prepar", "collect", "store", "specifi", "number", "element", "appropri", "underli", "type"], "params": [{"param_type": ["int"], "param_name": [["n"]], "param_description": ["request", "number", "element", "store"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["revers"], "method_description": ["return", "view", "present", "element", "collect", "revers", "order"], "params": [], "return_value": {"return_type": [["revers", "collect", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["shuffl"], "method_description": ["return", "element", "sequenc", "shuffl"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["shuffl", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["shuffl"], "method_description": ["return", "element", "sequenc", "shuffl", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": ["random", "number", "gener", "use", "shuffl", "sequenc"]}], "return_value": {"return_type": [["charact"]], "return_description": [["array", "sequenc", "element", "shuffl", "order"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["sort"], "method_description": ["return", "element", "sequenc", "sort"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["sort", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["sort"], "method_description": ["return", "element", "sequenc", "sort", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["charact"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "charact"]], "return_description": [["sort", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "collect", "order", "dont", "contain", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["int"], "param_name": [["max", "split"]], "param_description": ["maximum", "number", "time", "split", "collect", "one", "less", "number", "subsequ", "return", "maxsplit", "1", "subsequ", "return", "last", "one", "suffix", "origin", "collect", "contain", "remain", "element", "maxsplit", "must", "greater", "equal", "zero", "default", "valu", "intmax"]}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": ["fals", "empti", "subsequ", "return", "result", "pair", "consecut", "element", "satisfi", "issepar", "predic", "element", "start", "end", "collect", "satisfi", "issepar", "predic", "default", "valu", "true"]}, {"param_type": ["charact"], "param_name": [["where", "separ"], ["is", "separ"]], "param_description": ["closur", "take", "element", "argument", "return", "boolean", "valu", "indic", "whether", "collect", "split", "element"]}], "return_value": {"return_type": [[]], "return_description": [["array", "subsequ", "split", "collect", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "collect", "order", "around", "element", "equal", "given", "element"], "params": [{"param_type": ["charact"], "param_name": [["separ"]], "param_description": ["element", "split", "upon"]}, {"param_type": ["int"], "param_name": [["max", "split"]], "param_description": ["maximum", "number", "time", "split", "collect", "one", "less", "number", "subsequ", "return", "maxsplit", "1", "subsequ", "return", "last", "one", "suffix", "origin", "collect", "contain", "remain", "element", "maxsplit", "must", "greater", "equal", "zero", "default", "valu", "intmax"]}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": ["fals", "empti", "subsequ", "return", "result", "consecut", "pair", "separ", "element", "collect", "instanc", "separ", "start", "end", "collect", "true", "nonempti", "subsequ", "return", "default", "valu", "true"]}], "return_value": {"return_type": [["substr"]], "return_description": [["array", "subsequ", "split", "collect", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["start"], "method_description": ["return", "boolean", "valu", "indic", "whether", "initi", "element", "sequenc", "element", "anoth", "sequenc"], "params": [{"param_type": ["sequenc"], "param_name": [["with"], ["possibl", "prefix"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "initi", "element", "sequenc", "element", "possibleprefix", "otherwis", "fals", "possibleprefix", "element", "return", "valu", "true"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["start"], "method_description": ["return", "boolean", "valu", "indic", "whether", "initi", "element", "sequenc", "equival", "element", "anoth", "sequenc", "use", "given", "predic", "equival", "test"], "params": [{"param_type": ["sequenc"], "param_name": [["with"], ["possibl", "prefix"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["charact"], "param_name": [["by"], ["are", "equival"]], "param_description": ["predic", "return", "true", "two", "argument", "equival", "otherwis", "fals"]}, {"param_type": ["sequenc", "element"], "param_name": [["sequenc", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "initi", "element", "sequenc", "equival", "element", "possibleprefix", "otherwis", "fals", "possibleprefix", "element", "return", "valu", "true"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "given", "maximum", "length", "contain", "final", "element", "collect"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": ["maximum", "number", "element", "return", "maxlength", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "termin", "end", "collect", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "specifi", "posit", "end", "collect"], "params": [{"param_type": ["string", "index"], "param_name": [["from"], ["start"]], "param_description": ["index", "start", "result", "subsequ", "start", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "start", "start", "posit"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["uppercas"], "method_description": [], "params": [], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["with", "c", "string"], "method_description": ["call", "given", "closur", "pointer", "content", "string", "repres", "nulltermin", "sequenc", "utf8", "code", "unit"], "params": [{"param_type": ["unsaf", "pointer", "c", "char"], "param_name": [["bodi"]], "param_description": ["closur", "pointer", "paramet", "point", "nulltermin", "sequenc", "utf8", "code", "unit", "bodi", "return", "valu", "valu", "also", "use", "return", "valu", "withcstring_", "method", "pointer", "argument", "valid", "durat", "method", "execut"]}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["return", "valu", "bodi", "closur", "paramet"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["target", "encod"], "method_description": ["call", "given", "closur", "pointer", "content", "string", "repres", "nulltermin", "sequenc", "code", "unit"], "params": [{"param_type": ["unicod", "encod", "type"], "param_name": [["encod", "as"], ["target", "encod"]], "param_description": ["encod", "code", "unit", "interpret"]}, {"param_type": ["unsaf", "pointer", "unicod", "encod", "code", "unit"], "param_name": [["bodi"]], "param_description": ["closur", "pointer", "paramet", "point", "nulltermin", "sequenc", "code", "unit", "bodi", "return", "valu", "valu", "also", "use", "return", "valu", "withcstringencodedas_", "method", "pointer", "argument", "valid", "durat", "method", "execut"]}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["return", "valu", "bodi", "closur", "paramet"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": ["write"], "method_description": [], "params": [{"param_type": ["string"], "param_name": [["other"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": ["write"], "method_description": [], "params": [{"param_type": ["inout", "text", "output", "stream"], "param_name": [["to"], ["target"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["substr"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": [], "params": [{"param_type": ["string", "protocolubstr"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["creat", "new", "collect", "concaten", "element", "sequenc", "collect"], "params": [{"param_type": ["sequenc"], "param_name": [["lh"]], "param_description": ["collect", "finit", "sequenc"]}, {"param_type": ["substr"], "param_name": [["rh"]], "param_description": ["rangereplac", "collect"]}], "return_value": {"return_type": [["substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["creat", "new", "collect", "concaten", "element", "collect", "sequenc"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["rangereplac", "collect"]}, {"param_type": ["sequenc"], "param_name": [["rh"]], "param_description": ["collect", "finit", "sequenc"]}], "return_value": {"return_type": [["substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["creat", "new", "collect", "concaten", "element", "two", "collect"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["rangereplac", "collect"]}, {"param_type": ["rang", "replac", "collect"], "param_name": [["rh"]], "param_description": ["anoth", "rangereplac", "collect"]}], "return_value": {"return_type": [["substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["append", "element", "sequenc", "rangereplac", "collect"], "params": [{"param_type": ["inout", "substr"], "param_name": [["lh"]], "param_description": ["array", "append"]}, {"param_type": ["sequenc"], "param_name": [["rh"]], "param_description": ["collect", "finit", "sequenc"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "partial", "rang", "extend", "upward", "lower", "bound"], "params": [{"param_type": ["substr"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "from", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["substr"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "through", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "close", "rang", "contain", "bound"], "params": [{"param_type": ["substr"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}, {"param_type": ["substr"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["close", "rang", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["substr"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "up", "to", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "halfopen", "rang", "contain", "lower", "bound", "upper", "bound"], "params": [{"param_type": ["substr"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}, {"param_type": ["substr"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["rang", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["substr"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["string", "protocolubstr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["substr"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["substr"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "lh", "greater", "equal", "rh", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["substr"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["substr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}], "Vars": [{"var_name": ["charact"], "var_type": ["substr", "charact", "view"], "var_description": []}, {"var_name": ["count"], "var_type": ["int"], "var_description": ["number", "element", "collect"]}, {"var_name": ["custom", "mirror"], "var_type": ["mirror"], "var_description": []}, {"var_name": ["custom", "playground", "quick", "look"], "var_type": ["playground", "quick", "look"], "var_description": []}, {"var_name": ["debug", "descript"], "var_type": ["string"], "var_description": []}, {"var_name": ["descript"], "var_type": ["string"], "var_description": []}, {"var_name": ["end", "index"], "var_type": ["substr", "index"], "var_description": []}, {"var_name": ["first"], "var_type": ["charact"], "var_description": ["first", "element", "collect"]}, {"var_name": ["indic"], "var_type": ["default", "indic", "substr"], "var_description": ["indic", "valid", "subscript", "collect", "ascend", "order"]}, {"var_name": ["is", "empti"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "collect", "empti"]}, {"var_name": ["last"], "var_type": ["charact"], "var_description": ["last", "element", "collect"]}, {"var_name": ["lazi"], "var_type": ["lazi", "collect", "substr"], "var_description": ["view", "onto", "collect", "provid", "lazi", "implement", "normal", "eager", "oper", "map", "filter"]}, {"var_name": ["lazi"], "var_type": ["lazi", "sequenc", "substr"], "var_description": ["sequenc", "contain", "element", "sequenc", "oper", "map", "filter", "implement", "lazili"]}, {"var_name": ["start", "index"], "var_type": ["substr", "index"], "var_description": []}, {"var_name": ["underestim", "count"], "var_type": ["int"], "var_description": ["valu", "less", "equal", "number", "element", "sequenc", "calcul", "nondestruct"]}, {"var_name": ["underestim", "count"], "var_type": ["int"], "var_description": ["valu", "less", "equal", "number", "element", "collect"]}, {"var_name": ["unicod", "scalar"], "var_type": ["substr", "unicod", "scalar", "view"], "var_description": []}, {"var_name": ["utf16"], "var_type": ["substr", "utf16", "view"], "var_description": []}, {"var_name": ["utf8"], "var_type": ["substr", "utf8", "view"], "var_description": []}]}