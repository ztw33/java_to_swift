{"package_name": ["foundat"], "class_name": ["index", "set", "rang", "view"], "class_description": ["exampl", "indexset", "compos", "15", "710", "13", "call", "next", "view", "iter", "produc", "3", "rang", "return", "nil"], "class_inherit_list": [], "interface_list": [["bidirect", "collect"], ["equat"]], "subclass_list": [], "Methods": [{"class_name": ["index", "set", "rang", "view"], "method_name": ["index"], "method_description": ["return", "index", "rang", "specifi", "one"], "params": [{"param_type": ["index", "set", "rang", "view", "index"], "param_name": [["after"], ["i"]], "param_description": []}], "return_value": {"return_type": [["index", "set", "rang", "view", "index"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["index"], "method_description": ["return", "index", "rang", "specifi", "one"], "params": [{"param_type": ["index", "set", "rang", "view", "index"], "param_name": [["befor"], ["i"]], "param_description": []}], "return_value": {"return_type": [["index", "set", "rang", "view", "index"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "specifi", "maximum", "length", "contain", "initi", "element", "collect"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "start", "begin", "collect", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "specifi", "posit"], "params": [{"param_type": ["int"], "param_name": [["through"], ["posit"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "includ", "specifi", "posit"], "params": [{"param_type": ["int"], "param_name": [["up", "to"], ["end"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "given", "maximum", "length", "contain", "final", "element", "collect"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "termin", "end", "collect", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "specifi", "posit", "end", "collect"], "params": [{"param_type": ["int"], "param_name": [["from"], ["start"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "start", "start", "posit"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "first", "element", "sequenc"], "params": [], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "start", "first", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "given", "number", "initi", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "start", "specifi", "number", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "last", "element", "sequenc"], "params": [], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "leav", "last", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "specifi", "number", "final", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "leav", "k", "element", "end"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["enumer"], "method_description": ["return", "sequenc", "pair", "n", "x", "n", "repres", "consecut", "integ", "start", "zero", "x", "repres", "element", "sequenc"], "params": [], "return_value": {"return_type": [["enumer", "sequenc", "index", "set", "rang", "view"]], "return_description": [["sequenc", "pair", "enumer", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["make", "iter"], "method_description": ["return", "iter", "index", "rang", "view"], "params": [], "return_value": {"return_type": [["index", "iter", "index", "set", "rang", "view"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["revers"], "method_description": ["return", "view", "present", "element", "collect", "revers", "order"], "params": [], "return_value": {"return_type": [["revers", "collect", "index", "set", "rang", "view"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "collect", "order", "around", "element", "equal", "given", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["separ"]], "param_description": []}, {"param_type": ["int"], "param_name": [["max", "split"]], "param_description": []}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["array", "subsequ", "split", "collect", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["join"], "method_description": ["return", "concaten", "element", "sequenc", "sequenc", "insert", "given", "separ", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["separ"]], "param_description": []}], "return_value": {"return_type": [["join", "sequenc", "index", "set", "rang", "view"]], "return_description": [["join", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["join"], "method_description": ["return", "element", "collect", "collect", "concaten"], "params": [], "return_value": {"return_type": [["flatten", "collect", "index", "set", "rang", "view"]], "return_description": [["flatten", "view", "element", "collect", "collect"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["contain"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "contain", "given", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["element"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "element", "found", "sequenc", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "first", "element", "sequenc"], "params": [], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "start", "first", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "given", "number", "initi", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "start", "specifi", "number", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "last", "element", "sequenc"], "params": [], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "leav", "last", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "specifi", "number", "final", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "leav", "k", "element", "end"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["element", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "anoth", "sequenc", "contain", "element", "order"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "sequenc", "contain", "element", "order"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["enumer"], "method_description": ["return", "sequenc", "pair", "n", "x", "n", "repres", "consecut", "integ", "start", "zero", "x", "repres", "element", "sequenc"], "params": [], "return_value": {"return_type": [["enumer", "sequenc", "index", "set", "rang", "view"]], "return_description": [["sequenc", "pair", "enumer", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["index"], "method_description": ["return", "index", "rang", "specifi", "one"], "params": [{"param_type": ["index", "set", "rang", "view", "index"], "param_name": [["after"], ["i"]], "param_description": []}], "return_value": {"return_type": [["index", "set", "rang", "view", "index"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["index"], "method_description": ["return", "index", "rang", "specifi", "one"], "params": [{"param_type": ["index", "set", "rang", "view", "index"], "param_name": [["befor"], ["i"]], "param_description": []}], "return_value": {"return_type": [["index", "set", "rang", "view", "index"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["join"], "method_description": ["return", "element", "collect", "collect", "concaten"], "params": [], "return_value": {"return_type": [["flatten", "collect", "index", "set", "rang", "view"]], "return_description": [["flatten", "view", "element", "collect", "collect"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["join"], "method_description": ["return", "concaten", "element", "sequenc", "sequenc", "insert", "given", "separ", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["separ"]], "param_description": []}], "return_value": {"return_type": [["join", "sequenc", "index", "set", "rang", "view"]], "return_description": [["join", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["make", "iter"], "method_description": ["return", "iter", "index", "rang", "view"], "params": [], "return_value": {"return_type": [["index", "iter", "index", "set", "rang", "view"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "specifi", "maximum", "length", "contain", "initi", "element", "collect"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "start", "begin", "collect", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "specifi", "posit"], "params": [{"param_type": ["int"], "param_name": [["through"], ["posit"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "includ", "specifi", "posit"], "params": [{"param_type": ["int"], "param_name": [["up", "to"], ["end"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["revers"], "method_description": ["return", "view", "present", "element", "collect", "revers", "order"], "params": [], "return_value": {"return_type": [["revers", "collect", "index", "set", "rang", "view"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "collect", "order", "around", "element", "equal", "given", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["separ"]], "param_description": []}, {"param_type": ["int"], "param_name": [["max", "split"]], "param_description": []}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["array", "subsequ", "split", "collect", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["start"], "method_description": ["return", "boolean", "valu", "indic", "whether", "initi", "element", "sequenc", "element", "anoth", "sequenc"], "params": [{"param_type": ["sequenc"], "param_name": [["with"], ["possibl", "prefix"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "initi", "element", "sequenc", "element", "possibleprefix", "otherwis", "fals", "possibleprefix", "element", "return", "valu", "true"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "given", "maximum", "length", "contain", "final", "element", "collect"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "termin", "end", "collect", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "specifi", "posit", "end", "collect"], "params": [{"param_type": ["int"], "param_name": [["from"], ["start"]], "param_description": []}], "return_value": {"return_type": [["slice", "index", "set", "rang", "view"]], "return_description": [["subsequ", "start", "start", "posit"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["index", "set", "rang", "view"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["index", "set", "rang", "view"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": [], "method_description": ["indic", "whether", "two", "rang", "view"], "params": [{"param_type": ["index", "set", "rang", "view"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["index", "set", "rang", "view"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["all", "satisfi"], "method_description": ["return", "boolean", "valu", "indic", "whether", "everi", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["predic"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "contain", "element", "satisfi", "predic", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["compact", "map"], "method_description": ["return", "array", "contain", "nonnil", "result", "call", "given", "transform", "element", "sequenc"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["element", "of", "result", "rethrow", "element", "of", "result"]], "return_description": [["array", "nonnil", "result", "call", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["contain"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "contain", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["where"], ["predic"]], "param_description": []}], "return_value": {"return_type": [[]], "return_description": [["true", "sequenc", "contain", "element", "satisfi", "predic", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["distanc"], "method_description": ["return", "distanc", "two", "indic"], "params": [{"param_type": ["int"], "param_name": [["from"], ["start"]], "param_description": []}, {"param_type": ["int"], "param_name": [["to"], ["end"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [["distanc", "start", "end", "result", "neg", "collect", "conform", "bidirectionalcollect", "protocol"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["drop"], "method_description": ["return", "subsequ", "skip", "element", "predic", "return", "true", "return", "remain", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["while"], ["predic"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "slice", "index", "set", "rang", "view"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["element", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "anoth", "sequenc", "contain", "equival", "element", "order", "use", "given", "predic", "equival", "test"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["by"], ["are", "equival"]], "param_description": []}, {"param_type": ["sequenc", "element"], "param_name": [["sequenc", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "contain", "equival", "item", "use", "areequival", "equival", "test", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["filter"], "method_description": ["return", "array", "contain", "order", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["is", "includ"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "rang", "index", "set", "element"]], "return_description": [["array", "element", "isinclud", "allow"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["first"], "method_description": ["return", "first", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["where"], ["predic"]], "param_description": []}], "return_value": {"return_type": [[]], "return_description": [["first", "element", "sequenc", "satisfi", "predic", "nil", "element", "satisfi", "predic"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["first", "index"], "method_description": ["return", "first", "index", "specifi", "valu", "appear", "collect"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["of"], ["element"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [["first", "index", "element", "found", "element", "found", "collect", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["first", "index"], "method_description": ["return", "first", "index", "element", "collect", "satisfi", "given", "predic"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["where"], ["predic"]], "param_description": []}], "return_value": {"return_type": [[]], "return_description": [["index", "first", "element", "predic", "return", "true", "element", "collect", "satisfi", "given", "predic", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["flat", "map"], "method_description": [], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["string", "rethrow", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["for", "each"], "method_description": ["call", "given", "closur", "element", "sequenc", "order", "forin", "loop"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["bodi"]], "param_description": []}], "return_value": {"return_type": [["void", "rethrow"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["form", "index"], "method_description": ["offset", "given", "index", "specifi", "distanc"], "params": [{"param_type": ["inout", "int"], "param_name": [["i"]], "param_description": []}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["form", "index"], "method_description": ["offset", "given", "index", "specifi", "distanc", "equal", "given", "limit", "index"], "params": [{"param_type": ["inout", "int"], "param_name": [["i"]], "param_description": []}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": []}, {"param_type": ["int"], "param_name": [["limit", "by"], ["limit"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "offset", "exactli", "distanc", "step", "without", "go", "beyond", "limit", "otherwis", "fals", "return", "valu", "fals", "valu", "equal", "limit"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["form", "index"], "method_description": ["replac", "given", "index", "successor"], "params": [{"param_type": ["inout", "int"], "param_name": [["after"], ["i"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["form", "index"], "method_description": ["replac", "given", "index", "predecessor"], "params": [{"param_type": ["inout", "int"], "param_name": [["befor"], ["i"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["index"], "method_description": ["return", "index", "specifi", "distanc", "given", "index"], "params": [{"param_type": ["int"], "param_name": [["i"]], "param_description": []}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [["index", "offset", "n", "index", "n", "posit", "valu", "result", "n", "call", "indexaft", "n", "neg", "valu", "result", "n", "call", "indexbefor"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["index"], "method_description": ["return", "index", "specifi", "distanc", "given", "index", "unless", "distanc", "beyond", "given", "limit", "index"], "params": [{"param_type": ["int"], "param_name": [["i"]], "param_description": []}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": []}, {"param_type": ["int"], "param_name": [["limit", "by"], ["limit"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [["index", "offset", "n", "index", "unless", "index", "would", "beyond", "limit", "direct", "movement", "case", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["last"], "method_description": ["return", "last", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["where"], ["predic"]], "param_description": []}], "return_value": {"return_type": [[]], "return_description": [["last", "element", "sequenc", "satisfi", "predic", "nil", "element", "satisfi", "predic"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["last", "index"], "method_description": ["return", "last", "index", "specifi", "valu", "appear", "collect"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["of"], ["element"]], "param_description": []}], "return_value": {"return_type": [["int"]], "return_description": [["last", "index", "element", "found", "element", "found", "collect", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["last", "index"], "method_description": ["return", "index", "last", "element", "collect", "match", "given", "predic"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["where"], ["predic"]], "param_description": []}], "return_value": {"return_type": [[]], "return_description": [["index", "last", "element", "collect", "match", "predic", "nil", "element", "match"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["lexicograph", "preced"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "preced", "anoth", "sequenc", "lexicograph", "dictionari", "order", "use", "given", "predic", "compar", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["rang", "index", "set", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "preced", "dictionari", "order", "order", "areinincreasingord", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["map"], "method_description": ["return", "array", "contain", "result", "map", "given", "closur", "sequenc", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["t", "rethrow", "t"]], "return_description": [["array", "contain", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["map"], "method_description": ["return", "array", "contain", "result", "map", "given", "closur", "sequenc", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["t", "rethrow", "t"]], "return_description": [["array", "contain", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["max"], "method_description": ["return", "maximum", "element", "sequenc", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["rang", "index", "set", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "rang", "index", "set", "element"]], "return_description": [["sequenc", "maximum", "element", "sequenc", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["min"], "method_description": ["return", "minimum", "element", "sequenc", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["rang", "index", "set", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "rang", "index", "set", "element"]], "return_description": [["sequenc", "minimum", "element", "accord", "areinincreasingord", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "contain", "initi", "element", "predic", "return", "fals", "skip", "remain", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["while"], ["predic"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "slice", "index", "set", "rang", "view"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["random", "element"], "method_description": ["return", "random", "element", "collect"], "params": [], "return_value": {"return_type": [["rang", "index", "set", "element"]], "return_description": [["random", "element", "collect", "collect", "empti", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["random", "element"], "method_description": ["return", "random", "element", "collect", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": []}], "return_value": {"return_type": [["rang", "index", "set", "element"]], "return_description": [["random", "element", "collect", "collect", "empti", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["reduc"], "method_description": ["return", "result", "combin", "element", "sequenc", "use", "given", "closur"], "params": [{"param_type": ["result"], "param_name": [["initi", "result"]], "param_description": []}, {"param_type": ["result"], "param_name": [["next", "partial", "result"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["rang", "index", "set", "element"]], "param_description": []}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["final", "accumul", "valu", "sequenc", "element", "result", "initialresult"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["reduc"], "method_description": ["return", "result", "combin", "element", "sequenc", "use", "given", "closur"], "params": [{"param_type": ["result"], "param_name": [["into"], ["initi", "result"]], "param_description": []}, {"param_type": ["inout", "result"], "param_name": [["updat", "accumul", "result"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["rang", "index", "set", "element"]], "param_description": []}], "return_value": {"return_type": [["rethrow", "result"]], "return_description": [["final", "accumul", "valu", "sequenc", "element", "result", "initialresult"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["shuffl"], "method_description": ["return", "element", "sequenc", "shuffl"], "params": [], "return_value": {"return_type": [["rang", "index", "set", "element"]], "return_description": [["shuffl", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["shuffl"], "method_description": ["return", "element", "sequenc", "shuffl", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": []}], "return_value": {"return_type": [["rang", "index", "set", "element"]], "return_description": [["array", "sequenc", "element", "shuffl", "order"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["sort"], "method_description": ["return", "element", "sequenc", "sort", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["rang", "index", "set", "element"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["rang", "index", "set", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "rang", "index", "set", "element"]], "return_description": [["sort", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "collect", "order", "dont", "contain", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["int"], "param_name": [["max", "split"]], "param_description": []}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["where", "separ"], ["is", "separ"]], "param_description": []}], "return_value": {"return_type": [[]], "return_description": [["array", "subsequ", "split", "collect", "element"]], "return_name": [[]]}}, {"class_name": ["index", "set", "rang", "view"], "method_name": ["start"], "method_description": ["return", "boolean", "valu", "indic", "whether", "initi", "element", "sequenc", "equival", "element", "anoth", "sequenc", "use", "given", "predic", "equival", "test"], "params": [{"param_type": ["sequenc"], "param_name": [["with"], ["possibl", "prefix"]], "param_description": []}, {"param_type": ["rang", "index", "set", "element"], "param_name": [["by"], ["are", "equival"]], "param_description": []}, {"param_type": ["sequenc", "element"], "param_name": [["sequenc", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "initi", "element", "sequenc", "equival", "element", "possibleprefix", "otherwis", "fals", "possibleprefix", "element", "return", "valu", "true"]], "return_name": [[]]}}], "Vars": [{"var_name": ["count"], "var_type": ["int"], "var_description": ["number", "element", "collect"]}, {"var_name": ["end", "index"], "var_type": ["index", "set", "rang", "view", "index"], "var_description": ["end", "index", "rang"]}, {"var_name": ["first"], "var_type": ["rang", "index", "set", "element"], "var_description": ["first", "element", "collect"]}, {"var_name": ["is", "empti"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "collect", "empti"]}, {"var_name": ["last"], "var_type": ["rang", "index", "set", "element"], "var_description": ["last", "element", "collect"]}, {"var_name": ["lazi"], "var_type": ["lazi", "collect", "index", "set", "rang", "view"], "var_description": ["view", "onto", "collect", "provid", "lazi", "implement", "normal", "eager", "oper", "map", "filter"]}, {"var_name": ["lazi"], "var_type": ["lazi", "sequenc", "index", "set", "rang", "view"], "var_description": ["sequenc", "contain", "element", "sequenc", "oper", "map", "filter", "implement", "lazili"]}, {"var_name": ["start", "index"], "var_type": ["index", "set", "rang", "view", "index"], "var_description": ["begin", "index", "rang"]}, {"var_name": ["start", "index"], "var_type": ["index", "set", "rang", "view", "index"], "var_description": ["begin", "index", "rang"]}, {"var_name": ["end", "index"], "var_type": ["index", "set", "rang", "view", "index"], "var_description": ["end", "index", "rang"]}, {"var_name": ["lazi"], "var_type": ["lazi", "collect", "index", "set", "rang", "view"], "var_description": ["view", "onto", "collect", "provid", "lazi", "implement", "normal", "eager", "oper", "map", "filter"]}, {"var_name": ["lazi"], "var_type": ["lazi", "sequenc", "index", "set", "rang", "view"], "var_description": ["sequenc", "contain", "element", "sequenc", "oper", "map", "filter", "implement", "lazili"]}, {"var_name": ["indic"], "var_type": ["default", "indic", "index", "set", "rang", "view"], "var_description": ["indic", "valid", "subscript", "collect", "ascend", "order"]}, {"var_name": ["underestim", "count"], "var_type": ["int"], "var_description": ["valu", "less", "equal", "number", "element", "sequenc", "calcul", "nondestruct"]}, {"var_name": ["underestim", "count"], "var_type": ["int"], "var_description": ["valu", "less", "equal", "number", "element", "collect"]}]}