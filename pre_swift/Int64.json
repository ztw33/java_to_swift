{"package_name": ["swift"], "class_name": ["int64"], "class_description": [], "class_inherit_list": [], "interface_list": [["ck", "record", "valu", "protocol"], ["custom", "playground", "quick", "lookabl"], ["custom", "reflect"], ["c", "var", "arg"], ["fix", "width", "integ"], ["hashabl"], ["sign", "integ"]], "subclass_list": [], "Methods": [{"class_name": ["int64"], "method_name": ["ad", "report", "overflow"], "method_description": ["return", "sum", "valu", "given", "valu", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "oper"], "params": [{"param_type": ["int64"], "param_name": [["other"]], "param_description": []}], "return_value": {"return_type": [["int64"], ["bool"]], "return_description": [["tupl", "contain", "result", "addit", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "overflow", "compon", "fals", "partialvalu", "compon", "contain", "entir", "sum", "overflow", "compon", "true", "overflow", "occur", "partialvalu", "compon", "contain", "truncat", "sum", "valu", "rh"]], "return_name": [[["partial", "valu"]], [["overflow"]]]}}, {"class_name": ["int64"], "method_name": ["advanc"], "method_description": ["return", "valu", "offset", "specifi", "distanc", "valu"], "params": [{"param_type": ["int"], "param_name": [["by"], ["n"]], "param_description": ["distanc", "advanc", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [["valu", "offset", "valu", "n"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["distanc"], "method_description": ["return", "distanc", "valu", "given", "valu", "express", "stride"], "params": [{"param_type": ["int64"], "param_name": [["to"], ["other"]], "param_description": ["valu", "calcul", "distanc"]}], "return_value": {"return_type": [["int"]], "return_description": [["distanc", "valu"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["divid", "report", "overflow"], "method_description": ["return", "quotient", "obtain", "divid", "valu", "given", "valu", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "oper"], "params": [{"param_type": ["int64"], "param_name": [["by"], ["other"]], "param_description": []}], "return_value": {"return_type": [["int64"], ["bool"]], "return_description": [["tupl", "contain", "result", "divis", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "overflow", "compon", "fals", "partialvalu", "compon", "contain", "entir", "quotient", "overflow", "compon", "true", "overflow", "occur", "partialvalu", "compon", "contain", "either", "truncat", "quotient", "quotient", "undefin", "dividend"]], "return_name": [[["partial", "valu"]], [["overflow"]]]}}, {"class_name": ["int64"], "method_name": ["divid", "full", "width"], "method_description": ["return", "tupl", "contain", "quotient", "remaind", "divid", "given", "valu", "valu"], "params": [{"param_type": ["int64"], "param_name": [["dividend"]], "param_description": ["tupl", "contain", "high", "low", "part", "doublewidth", "integ", "high", "compon", "valu", "carri", "sign", "type", "sign"]}, {"param_type": ["int64", "magnitud"], "param_name": [["low"]], "param_description": []}], "return_value": {"return_type": [["int64"], ["int64"]], "return_description": [["tupl", "contain", "quotient", "remaind", "dividend", "divid", "valu"]], "return_name": [[["quotient"]], [["remaind"]]]}}, {"class_name": ["int64"], "method_name": ["encod"], "method_description": ["encod", "valu", "given", "encod"], "params": [{"param_type": ["encod"], "param_name": [["to"], ["encod"]], "param_description": ["encod", "write", "data"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": ["hash"], "method_description": ["hash", "essenti", "compon", "valu", "feed", "given", "hasher"], "params": [{"param_type": ["inout", "hasher"], "param_name": [["into"], ["hasher"]], "param_description": ["hasher", "use", "combin", "compon", "instanc"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": ["multipli", "full", "width"], "method_description": ["return", "tupl", "contain", "high", "low", "part", "result", "multipli", "valu", "given", "valu"], "params": [{"param_type": ["int64"], "param_name": [["by"], ["other"]], "param_description": ["valu", "multipli", "valu"]}], "return_value": {"return_type": [["int64"], ["int64", "magnitud"]], "return_description": [["tupl", "contain", "high", "low", "part", "result", "multipli", "valu"]], "return_name": [[["high"]], [["low"]]]}}, {"class_name": ["int64"], "method_name": ["multipli", "report", "overflow"], "method_description": ["return", "product", "valu", "given", "valu", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "oper"], "params": [{"param_type": ["int64"], "param_name": [["by"], ["other"]], "param_description": []}], "return_value": {"return_type": [["int64"], ["bool"]], "return_description": [["tupl", "contain", "result", "multipl", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "overflow", "compon", "fals", "partialvalu", "compon", "contain", "entir", "product", "overflow", "compon", "true", "overflow", "occur", "partialvalu", "compon", "contain", "truncat", "product", "valu", "rh"]], "return_name": [[["partial", "valu"]], [["overflow"]]]}}, {"class_name": ["int64"], "method_name": ["negat"], "method_description": ["replac", "valu", "addit", "invers"], "params": [], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": ["quotient", "and", "remaind"], "method_description": ["return", "quotient", "remaind", "valu", "divid", "given", "valu"], "params": [{"param_type": ["int64"], "param_name": [["divid", "by"], ["rh"]], "param_description": ["valu", "divid", "valu"]}], "return_value": {"return_type": [["int64"], ["int64"]], "return_description": [["tupl", "contain", "quotient", "remaind", "valu", "divid", "rh"]], "return_name": [[["quotient"]], [["remaind"]]]}}, {"class_name": ["int64"], "method_name": ["remaind", "report", "overflow"], "method_description": ["return", "remaind", "divid", "valu", "given", "valu", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "divis"], "params": [{"param_type": ["int64"], "param_name": [["divid", "by"], ["other"]], "param_description": []}], "return_value": {"return_type": [["int64"], ["bool"]], "return_description": [["tupl", "contain", "result", "oper", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "overflow", "compon", "fals", "partialvalu", "compon", "contain", "entir", "remaind", "overflow", "compon", "true", "overflow", "occur", "divis", "partialvalu", "compon", "contain", "either", "entir", "remaind", "remaind", "undefin", "dividend"]], "return_name": [[["partial", "valu"]], [["overflow"]]]}}, {"class_name": ["int64"], "method_name": ["signum"], "method_description": ["return", "1", "valu", "neg", "1", "posit", "otherwis", "0"], "params": [], "return_value": {"return_type": [["int64"]], "return_description": [["sign", "number", "express", "integ", "type"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["subtract", "report", "overflow"], "method_description": ["return", "differ", "obtain", "subtract", "given", "valu", "valu", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "oper"], "params": [{"param_type": ["int64"], "param_name": [["other"]], "param_description": []}], "return_value": {"return_type": [["int64"], ["bool"]], "return_description": [["tupl", "contain", "result", "subtract", "along", "boolean", "valu", "indic", "whether", "overflow", "occur", "overflow", "compon", "fals", "partialvalu", "compon", "contain", "entir", "differ", "overflow", "compon", "true", "overflow", "occur", "partialvalu", "compon", "contain", "truncat", "result", "rh", "subtract", "valu"]], "return_name": [[["partial", "valu"]], [["overflow"]]]}}, {"class_name": ["int64"], "method_name": ["unsaf", "ad"], "method_description": ["return", "sum", "valu", "given", "valu", "without", "check", "arithmet", "overflow"], "params": [{"param_type": ["int64"], "param_name": [["other"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [["sum", "valu", "rh"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["unsaf", "divid"], "method_description": ["return", "quotient", "obtain", "divid", "valu", "given", "valu", "without", "check", "arithmet", "overflow"], "params": [{"param_type": ["int64"], "param_name": [["by"], ["other"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [["result", "divid", "valu", "rh"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["unsaf", "multipli"], "method_description": ["return", "product", "valu", "given", "valu", "without", "check", "arithmet", "overflow"], "params": [{"param_type": ["int64"], "param_name": [["by"], ["other"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [["product", "valu", "rh"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["unsaf", "subtract"], "method_description": ["return", "differ", "obtain", "subtract", "given", "valu", "valu", "without", "check", "arithmet", "overflow"], "params": [{"param_type": ["int64"], "param_name": [["other"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [["result", "subtract", "rh", "valu"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["random"], "method_description": ["return", "random", "valu", "within", "specifi", "rang"], "params": [{"param_type": ["close", "rang", "int64"], "param_name": [["in"], ["rang"]], "param_description": ["rang", "creat", "random", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [["random", "valu", "within", "bound", "rang"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["random"], "method_description": ["return", "random", "valu", "within", "specifi", "rang"], "params": [{"param_type": ["rang", "int64"], "param_name": [["in"], ["rang"]], "param_description": ["rang", "creat", "random", "valu", "rang", "must", "empti"]}], "return_value": {"return_type": [["int64"]], "return_description": [["random", "valu", "within", "bound", "rang"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["random"], "method_description": ["return", "random", "valu", "within", "specifi", "rang", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["close", "rang", "int64"], "param_name": [["in"], ["rang"]], "param_description": ["rang", "creat", "random", "valu"]}, {"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": ["random", "number", "gener", "use", "creat", "new", "random", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [["random", "valu", "within", "bound", "rang"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": ["random"], "method_description": ["return", "random", "valu", "within", "specifi", "rang", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["rang", "int64"], "param_name": [["in"], ["rang"]], "param_description": ["rang", "creat", "random", "valu", "rang", "must", "empti"]}, {"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": ["random", "number", "gener", "use", "creat", "new", "random", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [["random", "valu", "within", "bound", "rang"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "given", "valu", "equal"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "remaind", "divid", "first", "valu", "second"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh", "rh", "must", "zero"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["divid", "first", "valu", "second", "store", "remaind", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh", "rh", "must", "zero"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "oper", "two", "given", "valu"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "oper", "two", "given", "valu"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "product", "two", "given", "valu", "wrap", "result", "case", "overflow"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["first", "valu", "multipli"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["second", "valu", "multipli"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["multipli", "two", "valu", "store", "result", "lefthandsid", "variabl", "wrap", "overflow"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["first", "valu", "multipli"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["second", "valu", "multipli"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "sum", "two", "given", "valu", "wrap", "result", "case", "overflow"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["first", "valu", "add"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["second", "valu", "add"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["add", "two", "valu", "store", "result", "lefthandsid", "variabl", "wrap", "overflow"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["first", "valu", "add"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["second", "valu", "add"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "differ", "two", "given", "valu", "wrap", "result", "case", "overflow"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["numer", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["valu", "subtract", "lh"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["subtract", "second", "valu", "first", "store", "differ", "lefthandsid", "variabl", "wrap", "overflow"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["numer", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["valu", "subtract", "lh"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left", "mask", "shift", "amount", "type", "bit", "width"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left", "mask", "shift", "amount", "type", "bit", "width"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left", "mask", "shift", "amount", "type", "bit", "width"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left", "mask", "shift", "amount", "type", "bit", "width", "store", "result", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left", "mask", "shift", "amount", "type", "bit", "width", "store", "result", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["store", "result", "perform", "bitwis", "oper", "two", "given", "valu", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right", "mask", "shift", "amount", "type", "bit", "width"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right", "mask", "shift", "amount", "type", "bit", "width"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right", "mask", "shift", "amount", "type", "bit", "width"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["calcul", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right", "mask", "shift", "amount", "type", "bit", "width", "store", "result", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["calcul", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right", "mask", "shift", "amount", "type", "bit", "width", "store", "result", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right", "rh", "outsid", "rang", "0lhsbitwidth", "mask", "produc", "valu", "within", "rang"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["multipli", "two", "valu", "produc", "product"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["first", "valu", "multipli"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["second", "valu", "multipli"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["multipli", "two", "valu", "store", "result", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["first", "valu", "multipli"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["second", "valu", "multipli"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "given", "number", "unchang"], "params": [{"param_type": ["int64"], "param_name": [["x"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [["given", "argument", "without", "chang"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["add", "two", "valu", "produc", "sum"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["first", "valu", "add"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["second", "valu", "add"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["add", "two", "valu", "store", "result", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["first", "valu", "add"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["second", "valu", "add"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "addit", "invers", "specifi", "valu"], "params": [{"param_type": ["int64"], "param_name": [["operand"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [["addit", "invers", "argument"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["subtract", "one", "valu", "anoth", "produc", "differ"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["numer", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["valu", "subtract", "lh"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["subtract", "second", "valu", "first", "store", "differ", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["numer", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["valu", "subtract", "lh"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "partial", "rang", "extend", "upward", "lower", "bound"], "params": [{"param_type": ["int64"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "from", "int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["int64"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "through", "int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "close", "rang", "contain", "bound"], "params": [{"param_type": ["int64"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}, {"param_type": ["int64"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["close", "rang", "int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "countabl", "close", "rang", "contain", "bound"], "params": [{"param_type": ["int64"], "param_name": [["minimum"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["maximum"]], "param_description": []}], "return_value": {"return_type": [["close", "rang", "int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["int64"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "up", "to", "int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "halfopen", "rang", "contain", "lower", "bound", "upper", "bound"], "params": [{"param_type": ["int64"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}, {"param_type": ["int64"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["rang", "int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "quotient", "divid", "first", "valu", "second"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh", "rh", "must", "zero"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["divid", "first", "valu", "second", "store", "quotient", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["valu", "divid"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["valu", "divid", "lh", "rh", "must", "zero"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["x"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["store", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "left", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "left"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "given", "valu", "equal"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["int64"], "param_name": [["x"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "compar"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": [], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "lh", "greater", "equal", "rh", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["store", "result", "shift", "valu", "binari", "represent", "specifi", "number", "digit", "right", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["valu", "shift"]}, {"param_type": ["binari", "integ"], "param_name": [["rh"]], "param_description": ["number", "bit", "shift", "lh", "right"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "xor", "oper", "two", "given", "valu"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "xor", "oper", "two", "given", "valu"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["store", "result", "perform", "bitwis", "xor", "oper", "two", "given", "valu", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "oper", "two", "given", "valu"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "result", "perform", "bitwis", "oper", "two", "given", "valu"], "params": [{"param_type": ["int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["int64"], "method_name": [], "method_description": ["store", "result", "perform", "bitwis", "oper", "two", "given", "valu", "lefthandsid", "variabl"], "params": [{"param_type": ["inout", "int64"], "param_name": [["lh"]], "param_description": ["integ", "valu"]}, {"param_type": ["int64"], "param_name": [["rh"]], "param_description": ["anoth", "integ", "valu"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["int64"], "method_name": [], "method_description": ["return", "invers", "bit", "set", "argument"], "params": [{"param_type": ["int64"], "param_name": [["x"]], "param_description": []}], "return_value": {"return_type": [["int64"]], "return_description": [], "return_name": [[]]}}], "Vars": [{"var_name": ["big", "endian"], "var_type": ["int64"], "var_description": ["bigendian", "represent", "integ"]}, {"var_name": ["bit", "width"], "var_type": ["int"], "var_description": ["number", "bit", "binari", "represent", "valu"]}, {"var_name": ["byte", "swap"], "var_type": ["int64"], "var_description": ["represent", "integ", "byte", "order", "swap"]}, {"var_name": ["custom", "mirror"], "var_type": ["mirror"], "var_description": ["mirror", "reflect", "int64", "instanc"]}, {"var_name": ["custom", "playground", "quick", "look"], "var_type": ["playground", "quick", "look"], "var_description": ["custom", "playground", "quick", "look", "int64", "instanc"]}, {"var_name": ["data", "valu"], "var_type": ["ml", "data", "valu"], "var_description": []}, {"var_name": ["descript"], "var_type": ["string"], "var_description": ["textual", "represent", "valu"]}, {"var_name": ["lead", "zero", "bit", "count"], "var_type": ["int"], "var_description": ["number", "lead", "zero", "valu", "binari", "represent"]}, {"var_name": ["littl", "endian"], "var_type": ["int64"], "var_description": ["littleendian", "represent", "integ"]}, {"var_name": ["magnitud"], "var_type": ["u", "int64"], "var_description": ["magnitud", "valu"]}, {"var_name": ["nonzero", "bit", "count"], "var_type": ["int"], "var_description": ["number", "bit", "equal", "1", "valu", "binari", "represent"]}, {"var_name": ["trail", "zero", "bit", "count"], "var_type": ["int"], "var_description": ["number", "trail", "zero", "valu", "binari", "represent"]}, {"var_name": ["word"], "var_type": ["int64", "word"], "var_description": ["collect", "contain", "word", "valu", "binari", "represent", "order", "least", "signific", "signific"]}, {"var_name": ["bit", "width"], "var_type": ["int"], "var_description": ["number", "bit", "use", "underli", "binari", "represent", "valu", "type"]}, {"var_name": ["data", "valu", "type"], "var_type": ["ml", "data", "valu", "valu", "type"], "var_description": []}, {"var_name": ["is", "sign"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "type", "sign", "integ", "type"]}, {"var_name": ["max"], "var_type": ["int64"], "var_description": ["maximum", "represent", "integ", "type"]}, {"var_name": ["min"], "var_type": ["int64"], "var_description": ["minimum", "represent", "integ", "type"]}]}