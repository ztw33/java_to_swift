{"package_name": ["swift"], "class_name": ["collect"], "class_description": ["collect", "use", "extens", "throughout", "standard", "librari", "use", "array", "dictionari", "collect", "benefit", "oper", "collect", "protocol", "declar", "implement", "addit", "oper", "collect", "inherit", "sequenc", "protocol", "gain", "access", "method", "depend", "access", "element", "specif", "posit", "collectionfor", "exampl", "want", "print", "first", "word", "string", "search", "index", "first", "space", "creat", "substr", "positionth", "firstspac", "constant", "index", "text", "stringth", "posit", "first", "space", "string", "store", "indic", "variabl", "pass", "collect", "algorithm", "use", "later", "access", "correspond", "element", "exampl", "firstspac", "use", "extract", "prefix", "contain", "element", "indexy", "access", "element", "collect", "subscript", "use", "valid", "index", "except", "collect", "endindex", "properti", "properti", "past", "end", "index", "correspond", "element", "collectionher", "exampl", "access", "first", "charact", "string", "subscriptth", "collect", "protocol", "declar", "provid", "default", "implement", "mani", "oper", "depend", "element", "access", "subscript", "exampl", "also", "access", "first", "charact", "text", "use", "first", "properti", "valu", "first", "element", "collect", "nil", "collect", "emptyy", "pass", "valid", "indic", "collect", "oper", "find", "complet", "set", "collect", "valid", "indic", "start", "collect", "startindex", "properti", "find", "everi", "successor", "includ", "endindex", "properti", "valu", "index", "type", "startindex", "properti", "differ", "collect", "invalid", "indic", "collectionsav", "indic", "may", "becom", "invalid", "result", "mutat", "oper", "inform", "index", "invalid", "mutabl", "collect", "see", "refer", "mutablecollect", "rangereplaceablecollect", "protocol", "well", "specif", "type", "your", "usingy", "access", "slice", "collect", "rang", "subscript", "call", "method", "like", "prefixwhil", "suffix_", "slice", "collect", "contain", "zero", "origin", "collect", "element", "share", "origin", "collect", "semanticsth", "follow", "exampl", "creat", "firstword", "constant", "use", "prefixwhil", "method", "get", "slice", "text", "stringyou", "retriev", "slice", "use", "string", "rang", "subscript", "take", "rang", "expressionth", "retriev", "slice", "text", "equival", "casesa", "collect", "slice", "share", "indic", "element", "collect", "locat", "index", "slice", "base", "collect", "long", "neither", "collect", "slice", "mutat", "sinc", "slice", "createdfor", "exampl", "suppos", "array", "hold", "number", "absenc", "class", "sessionyour", "task", "find", "day", "absenc", "second", "half", "session", "find", "index", "day", "question", "follow", "stepscreat", "slice", "absenc", "array", "hold", "second", "half", "daysus", "maxbi", "method", "determin", "index", "day", "absencesprint", "result", "use", "index", "found", "step", "2", "origin", "absenc", "arrayher", "implement", "stepsa", "slice", "inherit", "valu", "refer", "semant", "base", "collect", "work", "slice", "mutabl", "collect", "valu", "semant", "array", "mutat", "origin", "collect", "trigger", "copi", "collect", "affect", "content", "slicefor", "exampl", "updat", "last", "element", "absenc", "array", "0", "2", "secondhalf", "slice", "unchangedalthough", "sequenc", "consum", "travers", "collect", "guarante", "multipass", "element", "repeatedli", "access", "save", "index", "moreov", "collect", "indic", "form", "finit", "rang", "posit", "collect", "element", "fact", "collect", "finit", "guarante", "safeti", "mani", "sequenc", "oper", "use", "contains_", "method", "test", "whether", "collect", "includ", "elementiter", "element", "collect", "posit", "yield", "element", "order", "iter", "collect", "use", "iter", "exampl", "demonstr", "charact", "view", "string", "return", "charact", "order", "whether", "view", "indic", "view", "iteratedif", "creat", "custom", "sequenc", "provid", "repeat", "access", "element", "make", "sure", "type", "conform", "collect", "protocol", "order", "give", "use", "effici", "interfac", "sequenc", "collect", "oper", "add", "collect", "conform", "type", "must", "declar", "least", "follow", "requirementsth", "startindex", "endindex", "propertiesa", "subscript", "provid", "least", "readonli", "access", "type", "elementsth", "indexaft", "method", "advanc", "index", "collectiontyp", "conform", "collect", "expect", "provid", "startindex", "endindex", "properti", "subscript", "access", "element", "o1", "oper", "type", "abl", "guarante", "perform", "must", "document", "departur", "mani", "collect", "oper", "depend", "o1", "subscript", "perform", "perform", "guaranteesth", "perform", "collect", "oper", "depend", "type", "index", "collect", "provid", "exampl", "randomaccess", "collect", "measur", "distanc", "two", "indic", "o1", "time", "calcul", "count", "properti", "o1", "time", "convers", "forward", "bidirect", "collect", "must", "travers", "entir", "collect", "count", "number", "contain", "element", "access", "count", "properti", "oper"], "class_inherit_list": [["sequenc"]], "interface_list": [], "subclass_list": [["bidirect", "collect"], ["lazi", "collect", "protocol"], ["mutabl", "collect"], ["rang", "replac", "collect"]], "Methods": [{"class_name": ["collect"], "method_name": ["pop", "first"], "method_description": ["remov", "return", "first", "element", "collect"], "params": [], "return_value": {"return_type": [["self", "element"]], "return_description": [["first", "element", "collect", "collect", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["remov", "first"], "method_description": ["remov", "return", "first", "element", "collect"], "params": [], "return_value": {"return_type": [["self", "element"]], "return_description": [["first", "element", "collect"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["remov", "first"], "method_description": ["remov", "specifi", "number", "element", "begin", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "k", "must", "greater", "equal", "zero", "must", "less", "equal", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["collect"], "method_name": ["index"], "method_description": ["return", "posit", "immedi", "given", "indexrequir"], "params": [{"param_type": ["self", "index"], "param_name": [["after"], ["i"]], "param_description": ["valid", "index", "collect", "must", "less", "endindex"]}], "return_value": {"return_type": [["self", "index"]], "return_description": [["index", "valu", "immedi"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["form", "index"], "method_description": ["offset", "given", "index", "specifi", "distanc"], "params": [{"param_type": ["inout", "self", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset", "distanc", "must", "neg", "unless", "collect", "conform", "bidirectionalcollect", "protocol"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["collect"], "method_name": ["form", "index"], "method_description": ["offset", "given", "index", "specifi", "distanc", "equal", "given", "limit", "index"], "params": [{"param_type": ["inout", "self", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset", "distanc", "must", "neg", "unless", "collect", "conform", "bidirectionalcollect", "protocol"]}, {"param_type": ["self", "index"], "param_name": [["limit", "by"], ["limit"]], "param_description": ["valid", "index", "collect", "use", "limit", "distanc", "0", "limit", "less", "effect", "likewis", "distanc", "0", "limit", "greater", "effect"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "offset", "exactli", "distanc", "step", "without", "go", "beyond", "limit", "otherwis", "fals", "return", "valu", "fals", "valu", "equal", "limit"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["form", "index"], "method_description": [], "params": [{"param_type": ["inout", "self", "index"], "param_name": [["i"]], "param_description": []}, {"param_type": ["binari", "integ"], "param_name": [["offset", "by"], ["n"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["collect"], "method_name": ["form", "index"], "method_description": [], "params": [{"param_type": ["inout", "self", "index"], "param_name": [["i"]], "param_description": []}, {"param_type": ["binari", "integ"], "param_name": [["offset", "by"], ["n"]], "param_description": []}, {"param_type": ["self", "index"], "param_name": [["limit", "by"], ["limit"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["flat", "map"], "method_description": [], "params": [{"param_type": ["self", "element"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["string", "rethrow", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["make", "iter"], "method_description": ["return", "iter", "element", "collectionrequir", "default", "implement", "provid"], "params": [], "return_value": {"return_type": [["self", "iter"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "collect", "order", "around", "element", "equal", "given", "element"], "params": [{"param_type": ["self", "element"], "param_name": [["separ"]], "param_description": ["element", "split", "upon"]}, {"param_type": ["int"], "param_name": [["max", "split"]], "param_description": ["maximum", "number", "time", "split", "collect", "one", "less", "number", "subsequ", "return", "maxsplit", "1", "subsequ", "return", "last", "one", "suffix", "origin", "collect", "contain", "remain", "element", "maxsplit", "must", "greater", "equal", "zero", "default", "valu", "intmax"]}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": ["fals", "empti", "subsequ", "return", "result", "consecut", "pair", "separ", "element", "collect", "instanc", "separ", "start", "end", "collect", "true", "nonempti", "subsequ", "return", "default", "valu", "true"]}], "return_value": {"return_type": [["self", "sub", "sequenc"]], "return_description": [["array", "subsequ", "split", "collect", "element"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["join"], "method_description": ["return", "element", "collect", "collect", "concaten"], "params": [], "return_value": {"return_type": [["flatten", "collect", "self"]], "return_description": [["flatten", "view", "element", "collect", "collect"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["distanc"], "method_description": ["return", "distanc", "two", "indicesrequir", "default", "implement", "provid"], "params": [{"param_type": ["self", "index"], "param_name": [["from"], ["start"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["self", "index"], "param_name": [["to"], ["end"]], "param_description": ["anoth", "valid", "index", "collect", "end", "equal", "start", "result", "zero"]}], "return_value": {"return_type": [["int"]], "return_description": [["distanc", "start", "end", "result", "neg", "collect", "conform", "bidirectionalcollect", "protocol"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["first", "index"], "method_description": ["return", "first", "index", "specifi", "valu", "appear", "collect"], "params": [{"param_type": ["self", "element"], "param_name": [["of"], ["element"]], "param_description": ["element", "search", "collect"]}], "return_value": {"return_type": [["self", "index"]], "return_description": [["first", "index", "element", "found", "element", "found", "collect", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["first", "index"], "method_description": ["return", "first", "index", "element", "collect", "satisfi", "given", "predic"], "params": [{"param_type": ["self", "element"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "repres", "match"]}], "return_value": {"return_type": [[]], "return_description": [["index", "first", "element", "predic", "return", "true", "element", "collect", "satisfi", "given", "predic", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["form", "index"], "method_description": ["replac", "given", "index", "successorrequir", "default", "implement", "provid"], "params": [{"param_type": ["inout", "self", "index"], "param_name": [["after"], ["i"]], "param_description": ["valid", "index", "collect", "must", "less", "endindex"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["collect"], "method_name": ["index"], "method_description": ["return", "index", "specifi", "distanc", "given", "indexrequir", "default", "implement", "provid"], "params": [{"param_type": ["self", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset", "distanc", "must", "neg", "unless", "collect", "conform", "bidirectionalcollect", "protocol"]}], "return_value": {"return_type": [["self", "index"]], "return_description": [["index", "offset", "distanc", "index", "distanc", "posit", "valu", "result", "distanc", "call", "indexaft", "distanc", "neg", "valu", "result", "absdist", "call", "indexbefor"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["index"], "method_description": ["return", "index", "specifi", "distanc", "given", "index", "unless", "distanc", "beyond", "given", "limit", "indexrequir", "default", "implement", "provid"], "params": [{"param_type": ["self", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset", "distanc", "must", "neg", "unless", "collect", "conform", "bidirectionalcollect", "protocol"]}, {"param_type": ["self", "index"], "param_name": [["limit", "by"], ["limit"]], "param_description": ["valid", "index", "collect", "use", "limit", "distanc", "0", "limit", "less", "effect", "likewis", "distanc", "0", "limit", "greater", "effect"]}], "return_value": {"return_type": [["self", "index"]], "return_description": [["index", "offset", "distanc", "index", "unless", "index", "would", "beyond", "limit", "direct", "movement", "case", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "specifi", "positionrequir", "default", "implement", "provid"], "params": [{"param_type": ["self", "index"], "param_name": [["through"], ["posit"]], "param_description": []}], "return_value": {"return_type": [["self", "sub", "sequenc"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "includ", "specifi", "positionrequir", "default", "implement", "provid"], "params": [{"param_type": ["self", "index"], "param_name": [["up", "to"], ["end"]], "param_description": ["past", "end", "index", "result", "subsequ", "end", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [["self", "sub", "sequenc"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["random", "element"], "method_description": ["return", "random", "element", "collect"], "params": [], "return_value": {"return_type": [["self", "element"]], "return_description": [["random", "element", "collect", "collect", "empti", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["random", "element"], "method_description": ["return", "random", "element", "collect", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": ["random", "number", "gener", "use", "choos", "random", "element"]}], "return_value": {"return_type": [["self", "element"]], "return_description": [["random", "element", "collect", "collect", "empti", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["collect"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "specifi", "posit", "end", "collectionrequir", "default", "implement", "provid"], "params": [{"param_type": ["self", "index"], "param_name": [["from"], ["start"]], "param_description": ["index", "start", "result", "subsequ", "start", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [["self", "sub", "sequenc"]], "return_description": [["subsequ", "start", "start", "posit"]], "return_name": [[]]}}], "Vars": [{"var_name": ["start", "index"], "var_type": ["self", "index"], "var_description": ["posit", "first", "element", "nonempti", "collectionrequir"]}, {"var_name": ["end", "index"], "var_type": ["self", "index"], "var_description": ["collect", "past", "end", "positionthat", "posit", "one", "greater", "last", "valid", "subscript", "argumentrequir"]}, {"var_name": ["indic"], "var_type": ["self", "indic"], "var_description": ["indic", "valid", "subscript", "collect", "ascend", "orderrequir", "default", "implement", "provid"]}, {"var_name": ["lazi"], "var_type": ["lazi", "collect", "self"], "var_description": ["view", "onto", "collect", "provid", "lazi", "implement", "normal", "eager", "oper", "map", "filter"]}, {"var_name": ["count"], "var_type": ["int"], "var_description": ["number", "element", "collectionrequir", "default", "implement", "provid"]}, {"var_name": ["first"], "var_type": ["self", "element"], "var_description": ["first", "element", "collectionrequir", "default", "implement", "provid"]}, {"var_name": ["is", "empti"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "collect", "emptyrequir", "default", "implement", "provid"]}]}