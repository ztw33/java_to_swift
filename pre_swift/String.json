{"package_name": ["swift"], "class_name": ["string"], "class_description": ["string", "seri", "charact", "swift", "form", "collect", "string", "swift", "unicod", "correct", "local", "insensit", "design", "effici", "string", "type", "bridg", "objectivec", "class", "nsstring", "offer", "interoper", "c", "function", "work", "stringsyou", "creat", "new", "string", "use", "string", "liter", "string", "interpol", "string", "liter", "seri", "charact", "enclos", "quotesstr", "interpol", "string", "liter", "evalu", "includ", "express", "convert", "result", "string", "form", "string", "interpol", "give", "easi", "way", "build", "string", "multipl", "piec", "wrap", "express", "string", "interpol", "parenthes", "prefix", "backslashcombin", "string", "use", "concaten", "oper", "multilin", "string", "liter", "enclos", "three", "doubl", "quotat", "mark", "delimit", "line", "indent", "strip", "line", "multilin", "string", "liter", "match", "indent", "close", "delimiterstr", "alway", "valu", "semant", "modifi", "copi", "string", "leav", "origin", "unaffectedcompar", "string", "equal", "use", "equalto", "oper", "relat", "oper", "like", "alway", "perform", "use", "unicod", "canon", "represent", "result", "differ", "represent", "string", "compar", "equalth", "unicod", "scalar", "valu", "u301", "modifi", "preced", "charact", "includ", "accent", "eu301", "canon", "represent", "singl", "unicod", "scalar", "valu", "basic", "string", "oper", "sensit", "local", "set", "ensur", "string", "comparison", "oper", "alway", "singl", "stabl", "result", "allow", "string", "use", "key", "dictionari", "instanc", "purposesa", "string", "collect", "extend", "graphem", "cluster", "approxim", "humanread", "charact", "mani", "individu", "charact", "made", "multipl", "unicod", "scalar", "valu", "scalar", "valu", "combin", "unicod", "boundari", "algorithm", "extend", "graphem", "cluster", "repres", "swift", "charact", "type", "element", "string", "repres", "charact", "instancefor", "exampl", "retriev", "first", "word", "longer", "string", "search", "space", "creat", "substr", "prefix", "string", "pointth", "firstnam", "constant", "instanc", "substr", "typea", "type", "repres", "substr", "string", "share", "origin", "string", "storag", "substr", "present", "interfac", "stringsif", "need", "access", "content", "string", "encod", "differ", "unicod", "encod", "use", "one", "string", "unicodescalar", "utf16", "utf8", "properti", "properti", "provid", "access", "view", "string", "seri", "code", "unit", "encod", "differ", "unicod", "encodingto", "demonstr", "differ", "view", "avail", "everi", "string", "follow", "exampl", "use", "string", "instanceth", "cafe", "string", "collect", "nine", "charact", "visibl", "string", "displayeda", "string", "unicodescalar", "properti", "collect", "unicod", "scalar", "valu", "21bit", "code", "basic", "unit", "unicod", "scalar", "valu", "repres", "unicodescalar", "instanc", "equival", "utf32", "code", "unitth", "unicodescalar", "view", "element", "compris", "unicod", "scalar", "valu", "cafe", "string", "particular", "cafe", "declar", "use", "decompos", "form", "charact", "unicodescalar", "contain", "scalar", "valu", "letter", "e", "101", "accent", "charact", "769a", "string", "utf16", "properti", "collect", "utf16", "code", "unit", "16bit", "encod", "form", "string", "unicod", "scalar", "valu", "code", "unit", "store", "uint16", "instanceth", "element", "utf16", "view", "code", "unit", "string", "encod", "utf16", "element", "match", "access", "index", "nsstring", "apisa", "string", "utf8", "properti", "collect", "utf8", "code", "unit", "8bit", "encod", "form", "string", "unicod", "scalar", "valu", "code", "unit", "store", "uint8", "instanceth", "element", "utf8", "view", "code", "unit", "string", "encod", "utf8", "represent", "match", "one", "use", "string", "instanc", "pass", "c", "apiswhen", "need", "know", "length", "string", "must", "first", "consid", "youll", "use", "length", "measur", "number", "charact", "display", "screen", "measur", "amount", "storag", "need", "string", "particular", "encod", "singl", "string", "greatli", "differ", "length", "measur", "differ", "viewsfor", "exampl", "ascii", "charact", "like", "capit", "letter", "repres", "singl", "element", "four", "view", "unicod", "scalar", "valu", "65", "small", "enough", "fit", "singl", "code", "unit", "utf16", "utf8on", "hand", "emoji", "flag", "charact", "construct", "pair", "unicod", "scalar", "valu", "like", "u1f1f5", "u1f1f7", "scalar", "valu", "turn", "larg", "fit", "singl", "utf16", "utf8", "code", "unit", "result", "view", "string", "report", "differ", "lengthto", "check", "whether", "string", "empti", "use", "isempti", "properti", "instead", "compar", "length", "one", "view", "0", "unlik", "isempti", "calcul", "view", "count", "properti", "requir", "iter", "element", "stringto", "find", "individu", "element", "string", "use", "appropri", "view", "task", "exampl", "retriev", "first", "word", "longer", "string", "search", "string", "space", "creat", "new", "string", "prefix", "string", "pointstr", "view", "share", "indic", "access", "utf8", "view", "name", "string", "use", "firstspac", "indexnot", "index", "one", "view", "may", "exact", "correspond", "posit", "anoth", "view", "exampl", "flag", "string", "declar", "compris", "singl", "charact", "compos", "eight", "code", "unit", "encod", "utf8", "follow", "code", "creat", "constant", "first", "second", "posit", "flagutf8", "view", "access", "utf8", "view", "indic", "yield", "first", "second", "code", "utf8", "unitswhen", "use", "access", "element", "flag", "string", "howev", "secondcodeunit", "index", "correspond", "posit", "specif", "charact", "instead", "access", "specif", "utf8", "code", "unit", "index", "treat", "posit", "charact", "index", "encod", "offset", "case", "secondcodeunit", "charact", "still", "flag", "itselfif", "need", "valid", "index", "one", "string", "view", "correspond", "exact", "posit", "anoth", "view", "use", "index", "samepositionin", "method", "init_within", "initializeralthough", "string", "swift", "valu", "semant", "string", "use", "copyonwrit", "strategi", "store", "data", "buffer", "buffer", "share", "differ", "copi", "string", "string", "data", "copi", "lazili", "upon", "mutat", "one", "string", "instanc", "use", "buffer", "therefor", "first", "sequenc", "mutat", "oper", "may", "cost", "time", "spacewhen", "string", "contigu", "storag", "fill", "new", "buffer", "must", "alloc", "data", "must", "move", "new", "storag", "string", "buffer", "use", "exponenti", "growth", "strategi", "make", "append", "string", "constant", "time", "oper", "averag", "mani", "append", "operationsani", "string", "instanc", "bridg", "nsstring", "use", "typecast", "oper", "string", "instanc", "origin", "objectivec", "may", "use", "nsstring", "instanc", "storag", "arbitrari", "subclass", "nsstring", "becom", "string", "instanc", "guarante", "represent", "effici", "string", "instanc", "back", "nsstring", "storag", "nsstring", "immut", "though", "storag", "share", "copi", "first", "sequenc", "mutat", "oper", "caus", "element", "copi", "uniqu", "contigu", "storag", "may", "cost", "time", "space", "n", "length", "string", "encod", "represent", "underli", "nsstring", "unusu", "perform", "characteristicsfor", "inform", "unicod", "term", "use", "discuss", "see", "unicodeorg", "glossari", "particular", "discuss", "mention", "extend", "graphem", "cluster", "unicod", "scalar", "valu", "canon", "equival"], "class_inherit_list": [], "interface_list": [["ck", "record", "valu", "protocol"], ["compar"], ["custom", "debug", "string", "convert"], ["custom", "playground", "quick", "lookabl"], ["custom", "reflect"], ["custom", "string", "convert"], ["c", "var", "arg"], ["equat"], ["express", "by", "string", "liter"], ["hashabl"], ["rang", "replac", "collect"], ["string", "protocol"], ["text", "output", "stream"], ["text", "output", "streamabl"]], "subclass_list": [], "Methods": [{"class_name": ["string"], "method_name": ["local", "string", "with", "format"], "method_description": ["return", "string", "creat", "use", "given", "format", "string", "templat", "remain", "argument", "valu", "substitut", "accord", "user", "default", "local"], "params": [{"param_type": ["string"], "param_name": [["format"]], "param_description": []}, {"param_type": ["c", "var", "arg"], "param_name": [["argument"]], "param_description": []}], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["decod", "c", "string"], "method_description": ["creat", "new", "string", "copi", "nulltermin", "data", "referenc", "given", "pointer", "use", "specifi", "encod"], "params": [{"param_type": ["unsaf", "pointer", "unicod", "encod", "code", "unit"], "param_name": [["c", "string"]], "param_description": ["pointer", "nulltermin", "code", "sequenc", "encod", "encod"]}, {"param_type": ["unicod", "encod", "type"], "param_name": [["as"], ["encod"]], "param_description": ["unicod", "encod", "data", "referenc", "cstring"]}, {"param_type": ["bool"], "param_name": [["repair", "invalid", "code", "unit"], ["is", "repair"]], "param_description": ["pass", "true", "creat", "new", "string", "even", "data", "referenc", "cstring", "contain", "illform", "sequenc", "illform", "sequenc", "replac", "unicod", "replac", "charact", "ufffd", "pass", "fals", "interrupt", "creation", "new", "string", "illform", "sequenc", "detect"]}], "return_value": {"return_type": [["string"], ["bool"]], "return_description": [["tupl", "new", "string", "boolean", "valu", "indic", "whether", "repair", "made", "isrepair", "fals", "illform", "sequenc", "detect", "method", "return", "nil"]], "return_name": [[["result"]], [["repair", "made"]]]}}, {"class_name": ["string"], "method_name": ["write"], "method_description": ["append", "given", "string", "string"], "params": [{"param_type": ["string"], "param_name": [["other"]], "param_description": ["string", "append"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["write"], "method_description": ["write", "string", "given", "output", "stream"], "params": [{"param_type": ["inout", "text", "output", "stream"], "param_name": [["to"], ["target"]], "param_description": ["output", "stream"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["append"], "method_description": ["append", "given", "string", "string"], "params": [{"param_type": ["string"], "param_name": [["other"]], "param_description": ["anoth", "string"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["append"], "method_description": ["append", "given", "charact", "string"], "params": [{"param_type": ["charact"], "param_name": [["c"]], "param_description": ["charact", "append", "string"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["append"], "method_description": ["add", "element", "end", "collect"], "params": [{"param_type": ["charact"], "param_name": [["new", "element"]], "param_description": ["element", "append", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["append"], "method_description": [], "params": [{"param_type": ["string"], "param_name": [["content", "of"], ["new", "element"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["append"], "method_description": [], "params": [{"param_type": ["substr"], "param_name": [["content", "of"], ["new", "element"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["append"], "method_description": ["append", "charact", "given", "sequenc", "string"], "params": [{"param_type": ["sequenc"], "param_name": [["content", "of"], ["new", "element"]], "param_description": ["sequenc", "charact"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["append"], "method_description": ["add", "element", "sequenc", "collect", "end", "collect"], "params": [{"param_type": ["sequenc"], "param_name": [["content", "of"], ["new", "element"]], "param_description": ["element", "append", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["reserv", "capac"], "method_description": ["reserv", "enough", "space", "string", "underli", "storag", "store", "specifi", "number", "ascii", "charact"], "params": [{"param_type": ["int"], "param_name": [["n"]], "param_description": ["minimum", "number", "ascii", "charact", "worth", "storag", "alloc"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["reserv", "capac"], "method_description": ["prepar", "collect", "store", "specifi", "number", "element", "appropri", "underli", "type"], "params": [{"param_type": ["int"], "param_name": [["n"]], "param_description": ["request", "number", "element", "store"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": [], "method_description": [], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": [], "params": [{"param_type": ["inout", "string"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": [], "method_description": ["creat", "new", "collect", "concaten", "element", "sequenc", "collect"], "params": [{"param_type": ["sequenc"], "param_name": [["lh"]], "param_description": ["collect", "finit", "sequenc"]}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": ["rangereplac", "collect"]}], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["creat", "new", "collect", "concaten", "element", "collect", "sequenc"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["rangereplac", "collect"]}, {"param_type": ["sequenc"], "param_name": [["rh"]], "param_description": ["collect", "finit", "sequenc"]}], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["creat", "new", "collect", "concaten", "element", "two", "collect"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["rangereplac", "collect"]}, {"param_type": ["rang", "replac", "collect"], "param_name": [["rh"]], "param_description": ["anoth", "rangereplac", "collect"]}], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["append", "element", "sequenc", "rangereplac", "collect"], "params": [{"param_type": ["inout", "string"], "param_name": [["lh"]], "param_description": ["array", "append"]}, {"param_type": ["sequenc"], "param_name": [["rh"]], "param_description": ["collect", "finit", "sequenc"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["insert"], "method_description": ["insert", "new", "charact", "specifi", "posit"], "params": [{"param_type": ["charact"], "param_name": [["new", "element"]], "param_description": ["new", "charact", "insert", "string"]}, {"param_type": ["string", "index"], "param_name": [["at"], ["i"]], "param_description": ["valid", "index", "string", "equal", "string", "end", "index", "method", "append", "newel", "string"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["insert"], "method_description": ["insert", "new", "element", "collect", "specifi", "posit"], "params": [{"param_type": ["charact"], "param_name": [["new", "element"]], "param_description": ["new", "element", "insert", "collect"]}, {"param_type": ["string", "index"], "param_name": [["at"], ["i"]], "param_description": ["posit", "insert", "new", "element", "index", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["insert"], "method_description": ["insert", "collect", "charact", "specifi", "posit"], "params": [{"param_type": ["collect"], "param_name": [["content", "of"], ["new", "element"]], "param_description": ["collect", "charact", "element", "insert", "string"]}, {"param_type": ["collectiontr", "index"], "param_name": [["at"], ["i"]], "param_description": ["valid", "index", "string", "equal", "string", "end", "index", "method", "append", "content", "newel", "string"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["insert"], "method_description": ["insert", "element", "sequenc", "collect", "specifi", "posit"], "params": [{"param_type": ["collect"], "param_name": [["content", "of"], ["new", "element"]], "param_description": ["new", "element", "insert", "collect"]}, {"param_type": ["string", "index"], "param_name": [["at"], ["i"]], "param_description": ["posit", "insert", "new", "element", "index", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["r"], "method_description": ["replac", "specifi", "subrang", "element", "given", "collect"], "params": [{"param_type": ["rang", "express"], "param_name": [["subrang"]], "param_description": ["subrang", "collect", "replac", "bound", "rang", "must", "valid", "indic", "collect"]}, {"param_type": ["collect"], "param_name": [["with"], ["new", "element"]], "param_description": ["new", "element", "add", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["replac", "subrang"], "method_description": ["replac", "text", "within", "specifi", "bound", "given", "charact"], "params": [{"param_type": ["rang", "string", "index"], "param_name": [["bound"]], "param_description": ["rang", "text", "replac", "bound", "rang", "must", "valid", "indic", "string"]}, {"param_type": ["collect"], "param_name": [["with"], ["new", "element"]], "param_description": ["new", "charact", "add", "string"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["remov"], "method_description": ["remov", "return", "charact", "specifi", "posit"], "params": [{"param_type": ["string", "index"], "param_name": [["at"], ["i"]], "param_description": ["posit", "charact", "remov", "must", "valid", "index", "string", "equal", "string", "end", "index"]}], "return_value": {"return_type": [["charact"]], "return_description": [["charact", "remov"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["remov"], "method_description": ["remov", "return", "element", "specifi", "posit"], "params": [{"param_type": ["string", "index"], "param_name": [["at"], ["posit"]], "param_description": ["posit", "element", "remov", "posit", "must", "valid", "index", "collect", "equal", "collect", "end", "index"]}], "return_value": {"return_type": [["charact"]], "return_description": [["remov", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["remov", "all"], "method_description": ["remov", "element", "collect"], "params": [{"param_type": ["bool"], "param_name": [["keep", "capac"], ["keep", "capac"]], "param_description": ["pass", "true", "request", "collect", "avoid", "releas", "storag", "retain", "collect", "storag", "use", "optim", "your", "plan", "grow", "collect", "default", "valu", "fals"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["remov", "all"], "method_description": ["replac", "string", "empti", "string"], "params": [{"param_type": ["bool"], "param_name": [["keep", "capac"], ["keep", "capac"]], "param_description": ["pass", "true", "prevent", "releas", "string", "alloc", "storag", "retain", "storag", "use", "optim", "your", "plan", "grow", "string", "default", "valu", "fals"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["remov", "all"], "method_description": ["remov", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "element", "remov", "collect"]}], "return_value": {"return_type": [[]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["remov", "first"], "method_description": ["remov", "return", "first", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["remov", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["remov", "first"], "method_description": ["remov", "specifi", "number", "element", "begin", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "collect", "k", "must", "greater", "equal", "zero", "must", "exceed", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["remov", "last"], "method_description": ["remov", "return", "last", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["last", "element", "collect"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["remov", "last"], "method_description": ["remov", "specifi", "number", "element", "end", "collect"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "remov", "collect", "k", "must", "greater", "equal", "zero", "must", "exceed", "number", "element", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["remov", "subrang"], "method_description": ["remov", "charact", "given", "rang"], "params": [{"param_type": ["rang", "string", "index"], "param_name": [["bound"]], "param_description": ["rang", "element", "remov", "upper", "lower", "bound", "bound", "must", "valid", "indic", "string", "equal", "string", "end", "index"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["remov", "subrang"], "method_description": ["remov", "element", "specifi", "subrang", "collect"], "params": [{"param_type": ["rang", "string", "index"], "param_name": [["bound"]], "param_description": ["rang", "collect", "remov", "bound", "rang", "must", "valid", "indic", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["remov", "subrang"], "method_description": ["remov", "element", "specifi", "subrang", "collect"], "params": [{"param_type": ["rang", "express"], "param_name": [["bound"]], "param_description": ["rang", "collect", "remov", "bound", "rang", "must", "valid", "indic", "collect"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["filter"], "method_description": ["return", "new", "collect", "type", "contain", "order", "element", "origin", "collect", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["is", "includ"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "element", "includ", "return", "collect"]}], "return_value": {"return_type": [["bool", "rethrow", "string"]], "return_description": [["collect", "element", "isinclud", "allow"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["drop"], "method_description": ["return", "subsequ", "skip", "element", "predic", "return", "true", "return", "remain", "element"], "params": [{"param_type": ["charact"], "param_name": [["while"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "true", "element", "skip", "fals", "includ", "predic", "return", "fals", "call"]}], "return_value": {"return_type": [["bool", "rethrow", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "first", "element", "sequenc"], "params": [], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "start", "first", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "given", "number", "initi", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "drop", "begin", "collect", "k", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "start", "specifi", "number", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "last", "element", "sequenc"], "params": [], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "leav", "last", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "specifi", "number", "final", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "drop", "end", "collect", "k", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "leav", "k", "element", "end"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["pop", "last"], "method_description": ["remov", "return", "last", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["last", "element", "collect", "collect", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["lowercas"], "method_description": ["return", "lowercas", "version", "string"], "params": [], "return_value": {"return_type": [["string"]], "return_description": [["lowercas", "copi", "string"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["uppercas"], "method_description": ["return", "uppercas", "version", "string"], "params": [], "return_value": {"return_type": [["string"]], "return_description": [["uppercas", "copi", "string"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": [], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["string", "protocoltr"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "two", "valu", "equal"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": [], "params": [{"param_type": ["string", "protocoltr"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": [], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": []}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": []}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "second", "argument"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "less", "equal", "second", "argument"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "second", "argument"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "lh", "greater", "equal", "rh", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "boolean", "valu", "indic", "whether", "valu", "first", "argument", "greater", "equal", "second", "argument"], "params": [{"param_type": ["string"], "param_name": [["lh"]], "param_description": ["valu", "compar"]}, {"param_type": ["string", "protocol"], "param_name": [["rh"]], "param_description": ["anoth", "valu", "compar"]}], "return_value": {"return_type": [["bool"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["element", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "anoth", "sequenc", "contain", "element", "order"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "sequenc", "contain", "element", "order"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["element", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "anoth", "sequenc", "contain", "equival", "element", "order", "use", "given", "predic", "equival", "test"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["charact"], "param_name": [["by"], ["are", "equival"]], "param_description": ["predic", "return", "true", "two", "argument", "equival", "otherwis", "fals"]}, {"param_type": ["sequenc", "element"], "param_name": [["sequenc", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "contain", "equival", "item", "use", "areequival", "equival", "test", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["start"], "method_description": ["return", "boolean", "valu", "indic", "whether", "initi", "element", "sequenc", "element", "anoth", "sequenc"], "params": [{"param_type": ["sequenc"], "param_name": [["with"], ["possibl", "prefix"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "initi", "element", "sequenc", "element", "possibleprefix", "otherwis", "fals", "possibleprefix", "element", "return", "valu", "true"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["start"], "method_description": ["return", "boolean", "valu", "indic", "whether", "initi", "element", "sequenc", "equival", "element", "anoth", "sequenc", "use", "given", "predic", "equival", "test"], "params": [{"param_type": ["sequenc"], "param_name": [["with"], ["possibl", "prefix"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["charact"], "param_name": [["by"], ["are", "equival"]], "param_description": ["predic", "return", "true", "two", "argument", "equival", "otherwis", "fals"]}, {"param_type": ["sequenc", "element"], "param_name": [["sequenc", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "initi", "element", "sequenc", "equival", "element", "possibleprefix", "otherwis", "fals", "possibleprefix", "element", "return", "valu", "true"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["lexicograph", "preced"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "preced", "anoth", "sequenc", "lexicograph", "dictionari", "order", "use", "lessthan", "oper", "compar", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "sequenc", "preced", "dictionari", "order", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["lexicograph", "preced"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "preced", "anoth", "sequenc", "lexicograph", "dictionari", "order", "use", "given", "predic", "compar", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["charact"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "preced", "dictionari", "order", "order", "areinincreasingord", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["ha", "prefix"], "method_description": ["return", "boolean", "valu", "indic", "whether", "string", "begin", "specifi", "prefix"], "params": [{"param_type": ["string"], "param_name": [["prefix"]], "param_description": ["possibl", "prefix", "test", "string"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "string", "begin", "prefix", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["ha", "suffix"], "method_description": ["return", "boolean", "valu", "indic", "whether", "string", "end", "specifi", "suffix"], "params": [{"param_type": ["string"], "param_name": [["suffix"]], "param_description": ["possibl", "suffix", "test", "string"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "string", "end", "suffix", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["contain"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "contain", "given", "element"], "params": [{"param_type": ["charact"], "param_name": [["element"]], "param_description": ["element", "find", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "element", "found", "sequenc", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["all", "satisfi"], "method_description": ["return", "boolean", "valu", "indic", "whether", "everi", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "satisfi", "condit"]}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "contain", "element", "satisfi", "predic", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["contain"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "contain", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "repres", "match"]}], "return_value": {"return_type": [[]], "return_description": [["true", "sequenc", "contain", "element", "satisfi", "predic", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["first"], "method_description": ["return", "first", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "element", "match"]}], "return_value": {"return_type": [[]], "return_description": [["first", "element", "sequenc", "satisfi", "predic", "nil", "element", "satisfi", "predic"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["first", "index"], "method_description": ["return", "first", "index", "specifi", "valu", "appear", "collect"], "params": [{"param_type": ["charact"], "param_name": [["of"], ["element"]], "param_description": ["element", "search", "collect"]}], "return_value": {"return_type": [["string", "index"]], "return_description": [["first", "index", "element", "found", "element", "found", "collect", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["first", "index"], "method_description": ["return", "first", "index", "element", "collect", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "repres", "match"]}], "return_value": {"return_type": [[]], "return_description": [["index", "first", "element", "predic", "return", "true", "element", "collect", "satisfi", "given", "predic", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["last"], "method_description": ["return", "last", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "element", "match"]}], "return_value": {"return_type": [[]], "return_description": [["last", "element", "sequenc", "satisfi", "predic", "nil", "element", "satisfi", "predic"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["last", "index"], "method_description": ["return", "last", "index", "specifi", "valu", "appear", "collect"], "params": [{"param_type": ["charact"], "param_name": [["of"], ["element"]], "param_description": ["element", "search", "collect"]}], "return_value": {"return_type": [["string", "index"]], "return_description": [["last", "index", "element", "found", "element", "found", "collect", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["last", "index"], "method_description": ["return", "index", "last", "element", "collect", "match", "given", "predic"], "params": [{"param_type": ["charact"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "repres", "match"]}], "return_value": {"return_type": [[]], "return_description": [["index", "last", "element", "collect", "match", "predic", "nil", "element", "match"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["max"], "method_description": ["return", "maximum", "element", "sequenc"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["sequenc", "maximum", "element", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["max"], "method_description": [], "params": [{"param_type": ["compar"], "param_name": [["x"]], "param_description": []}, {"param_type": ["compar"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["t"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["max"], "method_description": ["return", "maximum", "element", "sequenc", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["charact"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "charact"]], "return_description": [["sequenc", "maximum", "element", "sequenc", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["min"], "method_description": ["return", "minimum", "element", "sequenc"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["sequenc", "minimum", "element", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["min"], "method_description": [], "params": [{"param_type": ["compar"], "param_name": [["x"]], "param_description": []}, {"param_type": ["compar"], "param_name": [["y"]], "param_description": []}], "return_value": {"return_type": [["t"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["min"], "method_description": ["return", "minimum", "element", "sequenc", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["charact"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "charact"]], "return_description": [["sequenc", "minimum", "element", "accord", "areinincreasingord", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "specifi", "maximum", "length", "contain", "initi", "element", "collect"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": ["maximum", "number", "element", "return", "maxlength", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "start", "begin", "collect", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "specifi", "posit"], "params": [{"param_type": ["string", "index"], "param_name": [["through"], ["posit"]], "param_description": []}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "start", "collect", "includ", "specifi", "posit"], "params": [{"param_type": ["string", "index"], "param_name": [["up", "to"], ["end"]], "param_description": ["past", "end", "index", "result", "subsequ", "end", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "includ", "end", "posit"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "contain", "initi", "element", "predic", "return", "fals", "skip", "remain", "element"], "params": [{"param_type": ["charact"], "param_name": [["while"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "true", "element", "includ", "fals", "exclud", "predic", "return", "fals", "call"]}], "return_value": {"return_type": [["bool", "rethrow", "substr"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "given", "maximum", "length", "contain", "final", "element", "collect"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": ["maximum", "number", "element", "return", "maxlength", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "termin", "end", "collect", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "specifi", "posit", "end", "collect"], "params": [{"param_type": ["string", "index"], "param_name": [["from"], ["start"]], "param_description": ["index", "start", "result", "subsequ", "start", "must", "valid", "index", "collect"]}], "return_value": {"return_type": [["substr"]], "return_description": [["subsequ", "start", "start", "posit"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "collect", "order", "around", "element", "equal", "given", "element"], "params": [{"param_type": ["charact"], "param_name": [["separ"]], "param_description": ["element", "split", "upon"]}, {"param_type": ["int"], "param_name": [["max", "split"]], "param_description": ["maximum", "number", "time", "split", "collect", "one", "less", "number", "subsequ", "return", "maxsplit", "1", "subsequ", "return", "last", "one", "suffix", "origin", "collect", "contain", "remain", "element", "maxsplit", "must", "greater", "equal", "zero", "default", "valu", "intmax"]}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": ["fals", "empti", "subsequ", "return", "result", "consecut", "pair", "separ", "element", "collect", "instanc", "separ", "start", "end", "collect", "true", "nonempti", "subsequ", "return", "default", "valu", "true"]}], "return_value": {"return_type": [["substr"]], "return_description": [["array", "subsequ", "split", "collect", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "collect", "order", "dont", "contain", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["int"], "param_name": [["max", "split"]], "param_description": ["maximum", "number", "time", "split", "collect", "one", "less", "number", "subsequ", "return", "maxsplit", "1", "subsequ", "return", "last", "one", "suffix", "origin", "collect", "contain", "remain", "element", "maxsplit", "must", "greater", "equal", "zero", "default", "valu", "intmax"]}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": ["fals", "empti", "subsequ", "return", "result", "pair", "consecut", "element", "satisfi", "issepar", "predic", "element", "start", "end", "collect", "satisfi", "issepar", "predic", "default", "valu", "true"]}, {"param_type": ["charact"], "param_name": [["where", "separ"], ["is", "separ"]], "param_description": ["closur", "take", "element", "argument", "return", "boolean", "valu", "indic", "whether", "collect", "split", "element"]}], "return_value": {"return_type": [[]], "return_description": [["array", "subsequ", "split", "collect", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["random", "element"], "method_description": ["return", "random", "element", "collect"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["random", "element", "collect", "collect", "empti", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["random", "element"], "method_description": ["return", "random", "element", "collect", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": ["random", "number", "gener", "use", "choos", "random", "element"]}], "return_value": {"return_type": [["charact"]], "return_description": [["random", "element", "collect", "collect", "empti", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["local", "name"], "method_description": ["return", "humanread", "string", "give", "name", "given", "encod"], "params": [{"param_type": ["string", "encod"], "param_name": [["of"], ["encod"]], "param_description": []}], "return_value": {"return_type": [["string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["with", "mutabl", "charact"], "method_description": ["appli", "given", "closur", "mutabl", "view", "string", "charact"], "params": [{"param_type": ["inout", "string", "charact", "view"], "param_name": [["bodi"]], "param_description": ["closur", "take", "charact", "view", "argument", "bodi", "return", "valu", "valu", "also", "use", "return", "valu", "withmutablecharacters_", "method", "characterview", "argument", "valid", "durat", "closur", "execut"]}], "return_value": {"return_type": [["r", "r"]], "return_description": [["return", "valu", "bodi", "closur", "paramet"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["map"], "method_description": ["return", "array", "contain", "result", "map", "given", "closur", "sequenc", "element"], "params": [{"param_type": ["charact"], "param_name": [["transform"]], "param_description": ["map", "closur", "transform", "accept", "element", "sequenc", "paramet", "return", "transform", "valu", "differ", "type"]}], "return_value": {"return_type": [["t", "rethrow", "t"]], "return_description": [["array", "contain", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["map"], "method_description": ["return", "array", "contain", "result", "map", "given", "closur", "sequenc", "element"], "params": [{"param_type": ["charact"], "param_name": [["transform"]], "param_description": ["map", "closur", "transform", "accept", "element", "sequenc", "paramet", "return", "transform", "valu", "differ", "type"]}], "return_value": {"return_type": [["t", "rethrow", "t"]], "return_description": [["array", "contain", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["compact", "map"], "method_description": ["return", "array", "contain", "nonnil", "result", "call", "given", "transform", "element", "sequenc"], "params": [{"param_type": ["charact"], "param_name": [["transform"]], "param_description": ["closur", "accept", "element", "sequenc", "argument", "return", "option", "valu"]}], "return_value": {"return_type": [["element", "of", "result", "rethrow", "element", "of", "result"]], "return_description": [["array", "nonnil", "result", "call", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["flat", "map"], "method_description": [], "params": [{"param_type": ["charact"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["string", "rethrow", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["reduc"], "method_description": ["return", "result", "combin", "element", "sequenc", "use", "given", "closur"], "params": [{"param_type": ["result"], "param_name": [["initi", "result"]], "param_description": ["valu", "use", "initi", "accumul", "valu", "initialresult", "pass", "nextpartialresult", "first", "time", "closur", "execut"]}, {"param_type": ["result"], "param_name": [["next", "partial", "result"]], "param_description": ["closur", "combin", "accumul", "valu", "element", "sequenc", "new", "accumul", "valu", "use", "next", "call", "nextpartialresult", "closur", "return", "caller"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["final", "accumul", "valu", "sequenc", "element", "result", "initialresult"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["reduc"], "method_description": ["return", "result", "combin", "element", "sequenc", "use", "given", "closur"], "params": [{"param_type": ["result"], "param_name": [["into"], ["initi", "result"]], "param_description": ["valu", "use", "initi", "accumul", "valu"]}, {"param_type": ["inout", "result"], "param_name": [["updat", "accumul", "result"]], "param_description": ["closur", "updat", "accumul", "valu", "element", "sequenc"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["rethrow", "result"]], "return_description": [["final", "accumul", "valu", "sequenc", "element", "result", "initialresult"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["for", "each"], "method_description": ["call", "given", "closur", "element", "sequenc", "order", "forin", "loop"], "params": [{"param_type": ["charact"], "param_name": [["bodi"]], "param_description": ["closur", "take", "element", "sequenc", "paramet"]}], "return_value": {"return_type": [["void", "rethrow"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["enumer"], "method_description": ["return", "sequenc", "pair", "n", "x", "n", "repres", "consecut", "integ", "start", "zero", "x", "repres", "element", "sequenc"], "params": [], "return_value": {"return_type": [["enumer", "sequenc", "string"]], "return_description": [["sequenc", "pair", "enumer", "sequenc"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["make", "iter"], "method_description": ["return", "iter", "element", "collect"], "params": [], "return_value": {"return_type": [["index", "iter", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["sort"], "method_description": ["return", "element", "sequenc", "sort"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["sort", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["sort"], "method_description": ["return", "element", "sequenc", "sort", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["charact"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["charact"], "param_name": [["charact"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "charact"]], "return_description": [["sort", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["revers"], "method_description": ["return", "view", "present", "element", "collect", "revers", "order"], "params": [], "return_value": {"return_type": [["revers", "collect", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["shuffl"], "method_description": ["return", "element", "sequenc", "shuffl"], "params": [], "return_value": {"return_type": [["charact"]], "return_description": [["shuffl", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["shuffl"], "method_description": ["return", "element", "sequenc", "shuffl", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": ["random", "number", "gener", "use", "shuffl", "sequenc"]}], "return_value": {"return_type": [["charact"]], "return_description": [["array", "sequenc", "element", "shuffl", "order"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["with", "c", "string"], "method_description": ["call", "given", "closur", "pointer", "content", "string", "repres", "nulltermin", "sequenc", "utf8", "code", "unit"], "params": [{"param_type": ["unsaf", "pointer", "int8"], "param_name": [["bodi"]], "param_description": ["closur", "pointer", "paramet", "point", "nulltermin", "sequenc", "utf8", "code", "unit", "bodi", "return", "valu", "valu", "also", "use", "return", "valu", "withcstring_", "method", "pointer", "argument", "valid", "durat", "method", "execut"]}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["return", "valu", "bodi", "closur", "paramet"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["target", "encod"], "method_description": ["call", "given", "closur", "pointer", "content", "string", "repres", "nulltermin", "sequenc", "code", "unit"], "params": [{"param_type": ["unicod", "encod", "type"], "param_name": [["encod", "as"], ["target", "encod"]], "param_description": ["encod", "code", "unit", "interpret"]}, {"param_type": ["unsaf", "pointer", "unicod", "encod", "code", "unit"], "param_name": [["bodi"]], "param_description": ["closur", "pointer", "paramet", "point", "nulltermin", "sequenc", "code", "unit", "bodi", "return", "valu", "valu", "also", "use", "return", "valu", "withcstringencodedas_", "method", "pointer", "argument", "valid", "durat", "method", "execut"]}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["return", "valu", "bodi", "closur", "paramet"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["index"], "method_description": ["return", "posit", "immedi", "given", "index"], "params": [{"param_type": ["string", "index"], "param_name": [["after"], ["i"]], "param_description": ["valid", "index", "collect", "must", "less", "endindex"]}], "return_value": {"return_type": [["string", "index"]], "return_description": [["index", "valu", "immedi"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["form", "index"], "method_description": ["replac", "given", "index", "successor"], "params": [{"param_type": ["inout", "string", "index"], "param_name": [["after"], ["i"]], "param_description": ["valid", "index", "collect", "must", "less", "endindex"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["index"], "method_description": ["return", "posit", "immedi", "given", "index"], "params": [{"param_type": ["string", "index"], "param_name": [["befor"], ["i"]], "param_description": ["valid", "index", "collect", "must", "greater", "startindex"]}], "return_value": {"return_type": [["string", "index"]], "return_description": [["index", "valu", "immedi"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["form", "index"], "method_description": ["replac", "given", "index", "predecessor"], "params": [{"param_type": ["inout", "string", "index"], "param_name": [["befor"], ["i"]], "param_description": ["valid", "index", "collect", "must", "greater", "startindex"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["index"], "method_description": ["return", "index", "specifi", "distanc", "given", "index"], "params": [{"param_type": ["string", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["string", "index", "distanc"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset"]}], "return_value": {"return_type": [["string", "index"]], "return_description": [["index", "offset", "distanc", "index", "distanc", "posit", "valu", "result", "distanc", "call", "indexaft", "distanc", "neg", "valu", "result", "absdist", "call", "indexbefor"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["index"], "method_description": ["return", "index", "specifi", "distanc", "given", "index", "unless", "distanc", "beyond", "given", "limit", "index"], "params": [{"param_type": ["string", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["string", "index", "distanc"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset"]}, {"param_type": ["string", "index"], "param_name": [["limit", "by"], ["limit"]], "param_description": ["valid", "index", "collect", "use", "limit", "distanc", "0", "limit", "less", "effect", "likewis", "distanc", "0", "limit", "greater", "effect"]}], "return_value": {"return_type": [["string", "index"]], "return_description": [["index", "offset", "distanc", "index", "unless", "index", "would", "beyond", "limit", "direct", "movement", "case", "method", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["form", "index"], "method_description": ["offset", "given", "index", "specifi", "distanc"], "params": [{"param_type": ["inout", "string", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset", "distanc", "must", "neg", "unless", "collect", "conform", "bidirectionalcollect", "protocol"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["form", "index"], "method_description": ["offset", "given", "index", "specifi", "distanc", "equal", "given", "limit", "index"], "params": [{"param_type": ["inout", "string", "index"], "param_name": [["i"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["int"], "param_name": [["offset", "by"], ["distanc"]], "param_description": ["distanc", "offset", "distanc", "must", "neg", "unless", "collect", "conform", "bidirectionalcollect", "protocol"]}, {"param_type": ["string", "index"], "param_name": [["limit", "by"], ["limit"]], "param_description": ["valid", "index", "collect", "use", "limit", "distanc", "0", "limit", "less", "effect", "likewis", "distanc", "0", "limit", "greater", "effect"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "offset", "exactli", "distanc", "step", "without", "go", "beyond", "limit", "otherwis", "fals", "return", "valu", "fals", "valu", "equal", "limit"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["distanc"], "method_description": ["return", "distanc", "two", "indic"], "params": [{"param_type": ["string", "index"], "param_name": [["from"], ["start"]], "param_description": ["valid", "index", "collect"]}, {"param_type": ["string", "index"], "param_name": [["to"], ["end"]], "param_description": ["anoth", "valid", "index", "collect", "end", "equal", "start", "result", "zero"]}], "return_value": {"return_type": [["string", "index", "distanc"]], "return_description": [["distanc", "start", "end"]], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "halfopen", "rang", "contain", "lower", "bound", "upper", "bound"], "params": [{"param_type": ["string"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}, {"param_type": ["string"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["rang", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "close", "rang", "contain", "bound"], "params": [{"param_type": ["string"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}, {"param_type": ["string"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["close", "rang", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["string"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "up", "to", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "partial", "rang", "includ", "upper", "bound"], "params": [{"param_type": ["string"], "param_name": [["maximum"]], "param_description": ["upper", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "through", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": [], "method_description": ["return", "partial", "rang", "extend", "upward", "lower", "bound"], "params": [{"param_type": ["string"], "param_name": [["minimum"]], "param_description": ["lower", "bound", "rang"]}], "return_value": {"return_type": [["partial", "rang", "from", "string"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["string"], "method_name": ["encod"], "method_description": ["encod", "valu", "given", "encod"], "params": [{"param_type": ["encod"], "param_name": [["to"], ["encod"]], "param_description": ["encod", "write", "data"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["string"], "method_name": ["hash"], "method_description": ["hash", "essenti", "compon", "valu", "feed", "given", "hasher"], "params": [{"param_type": ["inout", "hasher"], "param_name": [["into"], ["hasher"]], "param_description": ["hasher", "use", "combin", "compon", "instanc"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}], "Vars": [{"var_name": ["is", "empti"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "collect", "empti"]}, {"var_name": ["is", "empti"], "var_type": ["bool"], "var_description": ["boolean", "valu", "indic", "whether", "string", "charact"]}, {"var_name": ["count"], "var_type": ["int"], "var_description": ["number", "element", "collect"]}, {"var_name": ["count"], "var_type": ["int"], "var_description": ["number", "charact", "string"]}, {"var_name": ["first"], "var_type": ["charact"], "var_description": ["first", "element", "collect"]}, {"var_name": ["last"], "var_type": ["charact"], "var_description": ["last", "element", "collect"]}, {"var_name": ["avail", "string", "encod"], "var_type": ["string", "encod"], "var_description": ["return", "array", "encod", "string", "object", "support", "applic", "environ"]}, {"var_name": ["default", "c", "string", "encod"], "var_type": ["string", "encod"], "var_description": ["return", "cstring", "encod", "assum", "method", "accept", "c", "string", "argument"]}, {"var_name": ["charact"], "var_type": ["string", "charact", "view"], "var_description": ["view", "string", "content", "collect", "charact"]}, {"var_name": ["unicod", "scalar"], "var_type": ["string", "unicod", "scalar", "view"], "var_description": ["string", "valu", "repres", "collect", "unicod", "scalar", "valu"]}, {"var_name": ["utf16"], "var_type": ["string", "utf16", "view"], "var_description": ["utf16", "encod", "self"]}, {"var_name": ["utf8"], "var_type": ["string", "utf8", "view"], "var_description": ["utf8", "encod", "self"]}, {"var_name": ["lazi"], "var_type": ["lazi", "collect", "string"], "var_description": ["view", "onto", "collect", "provid", "lazi", "implement", "normal", "eager", "oper", "map", "filter"]}, {"var_name": ["lazi"], "var_type": ["lazi", "sequenc", "string"], "var_description": ["sequenc", "contain", "element", "sequenc", "oper", "map", "filter", "implement", "lazili"]}, {"var_name": ["underestim", "count"], "var_type": ["int"], "var_description": ["valu", "less", "equal", "number", "element", "sequenc", "calcul", "nondestruct"]}, {"var_name": ["underestim", "count"], "var_type": ["int"], "var_description": ["valu", "less", "equal", "number", "element", "collect"]}, {"var_name": ["utf8", "c", "string"], "var_type": ["contigu", "array", "c", "char"], "var_description": ["contigu", "store", "nulltermin", "utf8", "represent", "string"]}, {"var_name": ["start", "index"], "var_type": ["string", "index"], "var_description": ["posit", "first", "charact", "nonempti", "string"]}, {"var_name": ["end", "index"], "var_type": ["string", "index"], "var_description": ["string", "past", "end", "positionthat", "posit", "one", "greater", "last", "valid", "subscript", "argument"]}, {"var_name": ["indic"], "var_type": ["default", "indic", "string"], "var_description": ["indic", "valid", "subscript", "collect", "ascend", "order"]}, {"var_name": ["descript"], "var_type": ["string"], "var_description": ["valu", "string"]}, {"var_name": ["debug", "descript"], "var_type": ["string"], "var_description": ["represent", "string", "suitabl", "debug"]}, {"var_name": ["custom", "mirror"], "var_type": ["mirror"], "var_description": ["mirror", "reflect", "string", "instanc"]}, {"var_name": ["custom", "playground", "quick", "look"], "var_type": ["playground", "quick", "look"], "var_description": ["custom", "playground", "quick", "look", "string", "instanc"]}, {"var_name": ["data", "valu"], "var_type": ["ml", "data", "valu"], "var_description": []}, {"var_name": ["data", "valu", "type"], "var_type": ["ml", "data", "valu", "valu", "type"], "var_description": []}]}