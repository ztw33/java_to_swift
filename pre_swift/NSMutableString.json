{"package_name": ["swift"], "class_name": ["ns", "mutabl", "string"], "class_description": ["nsmutablestr", "class", "declar", "programmat", "interfac", "object", "manag", "mutabl", "stringthat", "string", "whose", "content", "editedthat", "conceptu", "repres", "array", "unicod", "charact", "construct", "manag", "immut", "stringor", "string", "chang", "createdus", "object", "nsstring", "classth", "nsmutablestr", "class", "add", "one", "primit", "methodreplacecharactersinwithto", "basic", "stringhandl", "behavior", "inherit", "nsstring", "method", "modifi", "string", "work", "method", "exampl", "insert_at", "simpli", "replac", "charact", "rang", "0", "length", "deletecharactersin", "replac", "charact", "given", "rang", "charactersnsmutablestr", "tollfre", "bridg", "core", "foundat", "counterpart", "cfmutablestr", "see", "tollfre", "bridg", "inform"], "class_inherit_list": [["ns", "string"]], "interface_list": [["custom", "playground", "quick", "lookabl"], ["c", "var", "arg"], ["equat"], ["express", "by", "string", "liter"], ["hashabl"], ["ns", "item", "provid", "read"], ["ns", "item", "provid", "write"]], "subclass_list": [], "Methods": [{"class_name": ["ns", "mutabl", "string"], "method_name": ["append"], "method_description": ["add", "end", "receiv", "charact", "given", "string"], "params": [{"param_type": ["string"], "param_name": [["a", "string"]], "param_description": ["string", "append", "receiv", "astr", "must", "nil"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["ns", "mutabl", "string"], "method_name": ["appli", "transform"], "method_description": ["transliter", "receiv", "appli", "specifi", "icu", "string", "transform"], "params": [{"param_type": ["string", "transform"], "param_name": [["transform"]], "param_description": ["transform", "appli", "list", "possibl", "valu", "see", "string", "transform", "specifi", "transform", "exist", "receiv", "modifi", "method", "return", "fals"]}, {"param_type": ["bool"], "param_name": [["revers"]], "param_description": ["whether", "invers", "transform", "use", "specifi", "transform", "invers", "receiv", "modifi", "method", "return", "fals"]}, {"param_type": ["ns", "rang"], "param_name": [["rang"]], "param_description": ["rang", "string", "transform", "rang", "must", "exceed", "bound", "receiverimportantrais", "nsrangeexcept", "part", "arang", "lie", "beyond", "end", "string"]}, {"param_type": ["ns", "rang", "pointer"], "param_name": [["updat", "rang"], ["result", "rang"]], "param_description": ["transform", "success", "appli", "upon", "return", "contain", "rang", "transform", "string"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "transform", "success", "appli", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["ns", "mutabl", "string"], "method_name": ["delet", "charact"], "method_description": ["remov", "receiv", "charact", "given", "rang"], "params": [{"param_type": ["ns", "rang"], "param_name": [["in"], ["rang"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["ns", "mutabl", "string"], "method_name": ["insert"], "method_description": ["insert", "receiv", "charact", "given", "string", "given", "locat"], "params": [{"param_type": ["string"], "param_name": [["a", "string"]], "param_description": ["string", "insert", "receiv", "astr", "must", "nil"]}, {"param_type": ["int"], "param_name": [["at"], ["loc"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["ns", "mutabl", "string"], "method_name": ["replac", "charact"], "method_description": ["replac", "charact", "arang", "astr"], "params": [{"param_type": ["ns", "rang"], "param_name": [["in"], ["rang"]], "param_description": []}, {"param_type": ["string"], "param_name": [["with"], ["a", "string"]], "param_description": ["string", "replac", "charact", "arang", "astr", "must", "nil"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["ns", "mutabl", "string"], "method_name": ["replac", "occurr"], "method_description": ["replac", "occurr", "given", "string", "given", "rang", "anoth", "given", "string", "return", "number", "replac"], "params": [{"param_type": ["string"], "param_name": [["of"], ["target"]], "param_description": ["string", "replaceimportantrais", "nsinvalidargumentexcept", "target", "nil"]}, {"param_type": ["string"], "param_name": [["with"], ["replac"]], "param_description": ["string", "replac", "targetimportantrais", "nsinvalidargumentexcept", "replac", "nil"]}, {"param_type": ["ns", "string", "compar", "option"], "param_name": [["option"]], "param_description": []}, {"param_type": ["ns", "rang"], "param_name": [["rang"], ["search", "rang"]], "param_description": ["rang", "charact", "replac", "arang", "must", "exceed", "bound", "receiv", "specifi", "searchrang", "nsmakerange0", "receiv", "length", "process", "entir", "stringimportantrais", "nsrangeexcept", "part", "searchrang", "lie", "beyond", "end", "receiv"]}], "return_value": {"return_type": [["int"]], "return_description": [["number", "replac", "made"]], "return_name": [[]]}}, {"class_name": ["ns", "mutabl", "string"], "method_name": ["set", "string"], "method_description": ["replac", "charact", "receiv", "given", "string"], "params": [{"param_type": ["string"], "param_name": [["a", "string"]], "param_description": ["string", "replac", "receiv", "content", "astr", "must", "nil"]}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}, {"class_name": ["ns", "mutabl", "string"], "method_name": ["append", "format"], "method_description": [], "params": [{"param_type": ["ns", "string"], "param_name": [["format"]], "param_description": []}, {"param_type": ["c", "var", "arg"], "param_name": [["arg"]], "param_description": []}], "return_value": {"return_type": [], "return_description": [], "return_name": []}}], "Vars": [{"var_name": ["latin", "to", "katakana"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "latin", "script", "katakana", "script"]}, {"var_name": ["latin", "to", "hiragana"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "latin", "script", "hiragana", "script"]}, {"var_name": ["latin", "to", "hangul"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "latin", "script", "hangul", "script"]}, {"var_name": ["latin", "to", "arab"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "latin", "script", "arab", "script"]}, {"var_name": ["latin", "to", "hebrew"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "latin", "script", "hebrew", "script"]}, {"var_name": ["latin", "to", "thai"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "latin", "script", "thai", "script"]}, {"var_name": ["latin", "to", "cyril"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "latin", "script", "cyril", "script"]}, {"var_name": ["to", "latin"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "script", "latin", "script"]}, {"var_name": ["mandarin", "to", "latin"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "han", "script", "latin"]}, {"var_name": ["hiragana", "to", "katakana"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transliter", "string", "hiragana", "script", "katakana", "script"]}, {"var_name": ["fullwidth", "to", "halfwidth"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transform", "string", "fullwidth", "cjk", "charact", "halfwidth", "form"]}, {"var_name": ["to", "xml", "hex"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transform", "string", "charact", "xml", "hexadecim", "escap", "code"]}, {"var_name": ["to", "unicod", "name"], "var_type": ["string", "transform"], "var_description": ["identifi", "transform", "convert", "charact", "unicod", "name"]}, {"var_name": ["strip", "combin", "mark"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transform", "string", "remov", "combin", "mark"]}, {"var_name": ["strip", "diacrit"], "var_type": ["string", "transform"], "var_description": ["constant", "contain", "transform", "string", "remov", "diacrit"]}]}