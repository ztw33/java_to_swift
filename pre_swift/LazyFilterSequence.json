{"package_name": ["swift"], "class_name": ["lazi", "filter", "sequenc"], "class_description": ["noteslazyfilt", "arbitrari", "sequenc", "lazyfiltersequ"], "class_inherit_list": [], "interface_list": [["lazi", "sequenc", "protocol"]], "subclass_list": [], "Methods": [{"class_name": ["lazi", "filter", "sequenc"], "method_name": ["all", "satisfi"], "method_description": ["return", "boolean", "valu", "indic", "whether", "everi", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["base", "element"], "param_name": [["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "satisfi", "condit"]}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "contain", "element", "satisfi", "predic", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["compact", "map"], "method_description": ["return", "nonnil", "result", "map", "given", "transform", "sequenc"], "params": [{"param_type": ["escap", "base", "element"], "param_name": [["transform"]], "param_description": ["closur", "accept", "element", "sequenc", "argument", "return", "option", "valu"]}], "return_value": {"return_type": [["element", "of", "result", "lazi", "map", "sequenc", "lazi", "filter", "sequenc", "lazi", "map", "sequenc", "lazi", "filter", "sequenc", "base"], ["element", "of", "result"], ["element", "of", "result"]], "return_description": [], "return_name": [[], [], []]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["compact", "map"], "method_description": ["return", "array", "contain", "nonnil", "result", "call", "given", "transform", "element", "sequenc"], "params": [{"param_type": ["base", "element"], "param_name": [["transform"]], "param_description": ["closur", "accept", "element", "sequenc", "argument", "return", "option", "valu"]}], "return_value": {"return_type": [["element", "of", "result", "rethrow", "element", "of", "result"]], "return_description": [["array", "nonnil", "result", "call", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["contain"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "contain", "given", "element"], "params": [{"param_type": ["base", "element"], "param_name": [["element"]], "param_description": ["element", "find", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "element", "found", "sequenc", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["contain"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "contain", "element", "satisfi", "given", "predic"], "params": [{"param_type": ["base", "element"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "pass", "element", "repres", "match"]}], "return_value": {"return_type": [[]], "return_description": [["true", "sequenc", "contain", "element", "satisfi", "predic", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["drop"], "method_description": ["return", "lazi", "sequenc", "skip", "initi", "element", "satisfi", "predic"], "params": [{"param_type": ["escap", "base", "element"], "param_name": [["while"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "true", "element", "skip", "fals", "otherwis", "predic", "return", "fals", "call"]}], "return_value": {"return_type": [["bool", "lazi", "drop", "while", "sequenc", "lazi", "filter", "sequenc", "base"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "first", "element", "sequenc"], "params": [], "return_value": {"return_type": [["ani", "sequenc", "base", "element"]], "return_description": [["subsequ", "start", "first", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["drop", "first"], "method_description": ["return", "subsequ", "contain", "given", "number", "initi", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": ["number", "element", "drop", "begin", "sequenc", "k", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["ani", "sequenc", "base", "element"]], "return_description": [["subsequ", "start", "specifi", "number", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "last", "element", "sequenc"], "params": [], "return_value": {"return_type": [["ani", "sequenc", "base", "element"]], "return_description": [["subsequ", "leav", "last", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["drop", "last"], "method_description": ["return", "subsequ", "contain", "given", "number", "final", "element"], "params": [{"param_type": ["int"], "param_name": [["k"]], "param_description": []}], "return_value": {"return_type": [["ani", "sequenc", "base", "element"]], "return_description": [["subsequ", "leav", "specifi", "number", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["element", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "anoth", "sequenc", "contain", "element", "order"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "sequenc", "contain", "element", "order"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["element", "equal"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "anoth", "sequenc", "contain", "equival", "element", "order", "use", "given", "predic", "equival", "test"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["base", "element"], "param_name": [["by"], ["are", "equival"]], "param_description": ["predic", "return", "true", "two", "argument", "equival", "otherwis", "fals"]}, {"param_type": ["sequenc", "element"], "param_name": [["sequenc", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "contain", "equival", "item", "use", "areequival", "equival", "test", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["enumer"], "method_description": ["return", "sequenc", "pair", "n", "x", "n", "repres", "consecut", "integ", "start", "zero", "x", "repres", "element", "sequenc"], "params": [], "return_value": {"return_type": [["enumer", "sequenc", "lazi", "filter", "sequenc", "base"]], "return_description": [["sequenc", "pair", "enumer", "sequenc"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["filter"], "method_description": ["return", "element", "self", "satisfi", "isinclud"], "params": [{"param_type": ["escap", "base", "element"], "param_name": [["is", "includ"]], "param_description": []}], "return_value": {"return_type": [["bool", "lazi", "filter", "sequenc", "lazi", "filter", "sequenc", "base"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["first"], "method_description": ["return", "first", "element", "sequenc", "satisfi", "given", "predic"], "params": [{"param_type": ["base", "element"], "param_name": [["where"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "boolean", "valu", "indic", "whether", "element", "match"]}], "return_value": {"return_type": [[]], "return_description": [["first", "element", "sequenc", "satisfi", "predic", "nil", "element", "satisfi", "predic"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["flat", "map"], "method_description": ["return", "concaten", "result", "map", "given", "transform", "sequenc"], "params": [{"param_type": ["escap", "base", "element"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["segment", "of", "result", "lazi", "sequenc", "flatten", "sequenc", "lazi", "map", "sequenc", "lazi", "filter", "sequenc", "base"], ["segment", "of", "result"]], "return_description": [], "return_name": [[], []]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["flat", "map"], "method_description": ["return", "nonnil", "result", "map", "given", "transform", "sequenc"], "params": [{"param_type": ["escap", "base", "element"], "param_name": [["transform"]], "param_description": ["closur", "accept", "element", "sequenc", "argument", "return", "option", "valu"]}], "return_value": {"return_type": [["element", "of", "result", "lazi", "map", "sequenc", "lazi", "filter", "sequenc", "lazi", "map", "sequenc", "lazi", "filter", "sequenc", "base"], ["element", "of", "result"], ["element", "of", "result"]], "return_description": [], "return_name": [[], [], []]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["flat", "map"], "method_description": ["return", "array", "contain", "concaten", "result", "call", "given", "transform", "element", "sequenc"], "params": [{"param_type": ["base", "element"], "param_name": [["transform"]], "param_description": ["closur", "accept", "element", "sequenc", "argument", "return", "sequenc", "collect"]}], "return_value": {"return_type": [["segment", "of", "result", "rethrow", "segment", "of", "result", "element"]], "return_description": [["result", "flatten", "array"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["flat", "map"], "method_description": ["return", "array", "contain", "nonnil", "result", "call", "given", "transform", "element", "sequenc"], "params": [{"param_type": ["base", "element"], "param_name": [["transform"]], "param_description": ["closur", "accept", "element", "sequenc", "argument", "return", "option", "valu"]}], "return_value": {"return_type": [["element", "of", "result", "rethrow", "element", "of", "result"]], "return_description": [["array", "nonnil", "result", "call", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["for", "each"], "method_description": ["call", "given", "closur", "element", "sequenc", "order", "forin", "loop"], "params": [{"param_type": ["base", "element"], "param_name": [["bodi"]], "param_description": ["closur", "take", "element", "sequenc", "paramet"]}], "return_value": {"return_type": [["void", "rethrow"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["join"], "method_description": ["return", "lazi", "sequenc", "concaten", "element", "sequenc", "sequenc"], "params": [], "return_value": {"return_type": [["lazi", "sequenc", "flatten", "sequenc", "lazi", "filter", "sequenc", "base"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["join"], "method_description": ["return", "element", "sequenc", "sequenc", "concaten"], "params": [], "return_value": {"return_type": [["flatten", "sequenc", "lazi", "filter", "sequenc", "base"]], "return_description": [["flatten", "view", "element", "sequenc", "sequenc"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["join"], "method_description": ["return", "new", "string", "concaten", "element", "sequenc", "ad", "given", "separ", "element"], "params": [{"param_type": ["string"], "param_name": [["separ"]], "param_description": ["string", "insert", "element", "sequenc", "default", "separ", "empti", "string"]}], "return_value": {"return_type": [["string"]], "return_description": [["singl", "concaten", "string"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["join"], "method_description": ["return", "concaten", "element", "sequenc", "sequenc", "insert", "given", "separ", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["separ"]], "param_description": ["sequenc", "insert", "sequenc", "element"]}], "return_value": {"return_type": [["join", "sequenc", "lazi", "filter", "sequenc", "base"]], "return_description": [["join", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["lexicograph", "preced"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "preced", "anoth", "sequenc", "lexicograph", "dictionari", "order", "use", "lessthan", "oper", "compar", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "sequenc", "preced", "dictionari", "order", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["lexicograph", "preced"], "method_description": ["return", "boolean", "valu", "indic", "whether", "sequenc", "preced", "anoth", "sequenc", "lexicograph", "dictionari", "order", "use", "given", "predic", "compar", "element"], "params": [{"param_type": ["sequenc"], "param_name": [["other"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["base", "element"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["base", "element"], "param_name": [["base", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "sequenc", "preced", "dictionari", "order", "order", "areinincreasingord", "otherwis", "fals"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["make", "iter"], "method_description": ["return", "iter", "element", "sequenc"], "params": [], "return_value": {"return_type": [["lazi", "filter", "sequenc", "base", "iter"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["map"], "method_description": ["return", "lazymapsequ", "sequenc", "element", "result", "comput", "lazili", "time", "read", "call", "transform", "function", "base", "element"], "params": [{"param_type": ["escap", "base", "element"], "param_name": [["transform"]], "param_description": []}], "return_value": {"return_type": [["u", "lazi", "map", "sequenc", "lazi", "filter", "sequenc", "base"], ["u"]], "return_description": [], "return_name": [[], []]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["map"], "method_description": ["return", "array", "contain", "result", "map", "given", "closur", "sequenc", "element"], "params": [{"param_type": ["base", "element"], "param_name": [["transform"]], "param_description": ["map", "closur", "transform", "accept", "element", "sequenc", "paramet", "return", "transform", "valu", "differ", "type"]}], "return_value": {"return_type": [["t", "rethrow", "t"]], "return_description": [["array", "contain", "transform", "element", "sequenc"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["max"], "method_description": ["return", "maximum", "element", "sequenc"], "params": [], "return_value": {"return_type": [["base", "element"]], "return_description": [["sequenc", "maximum", "element", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["max"], "method_description": ["return", "maximum", "element", "sequenc", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["base", "element"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["base", "element"], "param_name": [["base", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "base", "element"]], "return_description": [["sequenc", "maximum", "element", "sequenc", "empti", "otherwis", "nil"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["min"], "method_description": ["return", "minimum", "element", "sequenc"], "params": [], "return_value": {"return_type": [["base", "element"]], "return_description": [["sequenc", "minimum", "element", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["min"], "method_description": ["return", "minimum", "element", "sequenc", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["base", "element"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["base", "element"], "param_name": [["base", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "base", "element"]], "return_description": [["sequenc", "minimum", "element", "accord", "areinincreasingord", "sequenc", "element", "return", "nil"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["prefix"], "method_description": ["return", "subsequ", "specifi", "maximum", "length", "contain", "initi", "element", "sequenc"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": ["maximum", "number", "element", "return", "valu", "maxlength", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["ani", "sequenc", "base", "element"]], "return_description": [["subsequ", "start", "begin", "sequenc", "maxlength", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["prefix"], "method_description": ["return", "lazi", "sequenc", "initi", "consecut", "element", "satisfi", "predic"], "params": [{"param_type": ["escap", "base", "element"], "param_name": [["while"], ["predic"]], "param_description": ["closur", "take", "element", "sequenc", "argument", "return", "true", "element", "includ", "fals", "otherwis", "predic", "return", "fals", "call"]}], "return_value": {"return_type": [["bool", "lazi", "prefix", "while", "sequenc", "lazi", "filter", "sequenc", "base"]], "return_description": [], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["reduc"], "method_description": ["return", "result", "combin", "element", "sequenc", "use", "given", "closur"], "params": [{"param_type": ["result"], "param_name": [["initi", "result"]], "param_description": ["valu", "use", "initi", "accumul", "valu", "initialresult", "pass", "nextpartialresult", "first", "time", "closur", "execut"]}, {"param_type": ["result"], "param_name": [["next", "partial", "result"]], "param_description": ["closur", "combin", "accumul", "valu", "element", "sequenc", "new", "accumul", "valu", "use", "next", "call", "nextpartialresult", "closur", "return", "caller"]}, {"param_type": ["base", "element"], "param_name": [["base", "element"]], "param_description": []}], "return_value": {"return_type": [["result", "rethrow", "result"]], "return_description": [["final", "accumul", "valu", "sequenc", "element", "result", "initialresult"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["reduc"], "method_description": ["return", "result", "combin", "element", "sequenc", "use", "given", "closur"], "params": [{"param_type": ["result"], "param_name": [["into"], ["initi", "result"]], "param_description": ["valu", "use", "initi", "accumul", "valu"]}, {"param_type": ["inout", "result"], "param_name": [["updat", "accumul", "result"]], "param_description": ["closur", "updat", "accumul", "valu", "element", "sequenc"]}, {"param_type": ["base", "element"], "param_name": [["base", "element"]], "param_description": []}], "return_value": {"return_type": [["rethrow", "result"]], "return_description": [["final", "accumul", "valu", "sequenc", "element", "result", "initialresult"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["revers"], "method_description": ["return", "array", "contain", "element", "sequenc", "revers", "order"], "params": [], "return_value": {"return_type": [["base", "element"]], "return_description": [["array", "contain", "element", "sequenc", "revers", "order"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["shuffl"], "method_description": ["return", "element", "sequenc", "shuffl"], "params": [], "return_value": {"return_type": [["base", "element"]], "return_description": [["shuffl", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["shuffl"], "method_description": ["return", "element", "sequenc", "shuffl", "use", "given", "gener", "sourc", "random"], "params": [{"param_type": ["inout", "random", "number", "gener"], "param_name": [["use"], ["gener"]], "param_description": ["random", "number", "gener", "use", "shuffl", "sequenc"]}], "return_value": {"return_type": [["base", "element"]], "return_description": [["array", "sequenc", "element", "shuffl", "order"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["sort"], "method_description": ["return", "element", "sequenc", "sort"], "params": [], "return_value": {"return_type": [["base", "element"]], "return_description": [["sort", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["sort"], "method_description": ["return", "element", "sequenc", "sort", "use", "given", "predic", "comparison", "element"], "params": [{"param_type": ["base", "element"], "param_name": [["by"], ["are", "in", "increas", "order"]], "param_description": ["predic", "return", "true", "first", "argument", "order", "second", "argument", "otherwis", "fals"]}, {"param_type": ["base", "element"], "param_name": [["base", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "base", "element"]], "return_description": [["sort", "array", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "sequenc", "order", "dont", "contain", "element", "satisfi", "given", "predic", "element", "use", "split", "sequenc", "return", "part", "subsequ"], "params": [{"param_type": ["int"], "param_name": [["max", "split"]], "param_description": ["maximum", "number", "time", "split", "sequenc", "one", "less", "number", "subsequ", "return", "maxsplit", "1", "subsequ", "return", "last", "one", "suffix", "origin", "sequenc", "contain", "remain", "element", "maxsplit", "must", "greater", "equal", "zero", "default", "valu", "intmax"]}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": ["fals", "empti", "subsequ", "return", "result", "pair", "consecut", "element", "satisfi", "issepar", "predic", "element", "start", "end", "sequenc", "satisfi", "issepar", "predic", "true", "nonempti", "subsequ", "return", "default", "valu", "true"]}, {"param_type": ["base", "element"], "param_name": [["where", "separ"], ["is", "separ"]], "param_description": ["closur", "return", "true", "argument", "use", "split", "sequenc", "otherwis", "fals"]}], "return_value": {"return_type": [[]], "return_description": [["array", "subsequ", "split", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["split"], "method_description": ["return", "longest", "possibl", "subsequ", "sequenc", "order", "around", "element", "equal", "given", "element"], "params": [{"param_type": ["base", "element"], "param_name": [["separ"]], "param_description": ["element", "split", "upon"]}, {"param_type": ["int"], "param_name": [["max", "split"]], "param_description": ["maximum", "number", "time", "split", "sequenc", "one", "less", "number", "subsequ", "return", "maxsplit", "1", "subsequ", "return", "last", "one", "suffix", "origin", "sequenc", "contain", "remain", "element", "maxsplit", "must", "greater", "equal", "zero", "default", "valu", "intmax"]}, {"param_type": ["bool"], "param_name": [["omit", "empti", "subsequ"]], "param_description": ["fals", "empti", "subsequ", "return", "result", "consecut", "pair", "separ", "element", "sequenc", "instanc", "separ", "start", "end", "sequenc", "true", "nonempti", "subsequ", "return", "default", "valu", "true"]}], "return_value": {"return_type": [["ani", "sequenc", "base", "element"]], "return_description": [["array", "subsequ", "split", "sequenc", "element"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["start"], "method_description": ["return", "boolean", "valu", "indic", "whether", "initi", "element", "sequenc", "element", "anoth", "sequenc"], "params": [{"param_type": ["sequenc"], "param_name": [["with"], ["possibl", "prefix"]], "param_description": ["sequenc", "compar", "sequenc"]}], "return_value": {"return_type": [["bool"]], "return_description": [["true", "initi", "element", "sequenc", "element", "possibleprefix", "otherwis", "fals", "possibleprefix", "element", "return", "valu", "true"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["start"], "method_description": ["return", "boolean", "valu", "indic", "whether", "initi", "element", "sequenc", "equival", "element", "anoth", "sequenc", "use", "given", "predic", "equival", "test"], "params": [{"param_type": ["sequenc"], "param_name": [["with"], ["possibl", "prefix"]], "param_description": ["sequenc", "compar", "sequenc"]}, {"param_type": ["base", "element"], "param_name": [["by"], ["are", "equival"]], "param_description": ["predic", "return", "true", "two", "argument", "equival", "otherwis", "fals"]}, {"param_type": ["sequenc", "element"], "param_name": [["sequenc", "element"]], "param_description": []}], "return_value": {"return_type": [["bool", "rethrow", "bool"]], "return_description": [["true", "initi", "element", "sequenc", "equival", "element", "possibleprefix", "otherwis", "fals", "possibleprefix", "element", "return", "valu", "true"]], "return_name": [[]]}}, {"class_name": ["lazi", "filter", "sequenc"], "method_name": ["suffix"], "method_description": ["return", "subsequ", "given", "maximum", "length", "contain", "final", "element", "sequenc"], "params": [{"param_type": ["int"], "param_name": [["max", "length"]], "param_description": ["maximum", "number", "element", "return", "valu", "maxlength", "must", "greater", "equal", "zero"]}], "return_value": {"return_type": [["ani", "sequenc", "base", "element"]], "return_description": [], "return_name": [[]]}}], "Vars": [{"var_name": ["element"], "var_type": ["lazi", "filter", "sequenc", "base"], "var_description": ["ident", "self"]}, {"var_name": ["lazi"], "var_type": ["lazi", "sequenc", "lazi", "filter", "sequenc", "base"], "var_description": ["sequenc", "contain", "element", "sequenc", "oper", "map", "filter", "implement", "lazili"]}, {"var_name": ["lazi"], "var_type": ["lazi", "filter", "sequenc", "base"], "var_description": ["ident", "self"]}, {"var_name": ["lazi"], "var_type": ["lazi", "sequenc", "lazi", "filter", "sequenc", "base"], "var_description": []}, {"var_name": ["underestim", "count"], "var_type": ["int"], "var_description": ["valu", "less", "equal", "number", "element", "sequenc", "calcul", "nondestruct"]}]}